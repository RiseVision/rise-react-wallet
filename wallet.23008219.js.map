{"version":3,"sources":["../node_modules/@material-ui/core/es/Fab/Fab.js","../node_modules/@material-ui/core/es/Fab/index.js","../node_modules/@material-ui/core/es/Popper/Popper.js","../node_modules/@material-ui/core/es/Popper/index.js","../node_modules/@material-ui/core/es/Tooltip/Tooltip.js","../node_modules/@material-ui/core/es/Tooltip/index.js","../node_modules/@material-ui/icons/Send.js","../node_modules/@material-ui/core/es/Divider/Divider.js","../node_modules/@material-ui/core/es/Divider/index.js","components/AccountOverviewHeader.tsx","../node_modules/@material-ui/core/es/colors/blue.js","../node_modules/@material-ui/icons/Info.js","utils/autoId.ts","components/AccountTip.tsx","../node_modules/@material-ui/core/es/ExpansionPanel/ExpansionPanel.js","../node_modules/@material-ui/core/es/ExpansionPanel/index.js","../node_modules/@material-ui/core/es/ExpansionPanelActions/ExpansionPanelActions.js","../node_modules/@material-ui/core/es/ExpansionPanelActions/index.js","../node_modules/@material-ui/core/es/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/es/ExpansionPanelDetails/index.js","../node_modules/@material-ui/core/es/ExpansionPanelSummary/ExpansionPanelSummary.js","../node_modules/@material-ui/core/es/ExpansionPanelSummary/index.js","../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/icons/Link.js","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/icons/PersonAdd.js","../node_modules/mdi-material-ui/ContentCopy.js","utils/clipboard.ts","components/TxDetailsExpansionPanel.tsx","stores/index.ts","../node_modules/@material-ui/core/es/Dialog/Dialog.js","../node_modules/@material-ui/core/es/Dialog/index.js","components/Dialog.tsx","components/content/AccountNameDialogContent.tsx","containers/wallet/AccountNameDialog.tsx","components/content/CreateContactDialogContent.tsx","containers/wallet/CreateContactDialog.tsx","components/content/ModifyContactDialogContent.tsx","containers/wallet/ModifyContactDialog.tsx","../node_modules/compute-scroll-into-view/es/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/downshift/dist/downshift.esm.js","../node_modules/@material-ui/core/es/MenuItem/MenuItem.js","../node_modules/@material-ui/core/es/MenuItem/index.js","components/AddressSuggestionsMenu.tsx","components/content/SendCoinsDialogContent.tsx","components/ConfirmTxEnterSecretsFooter.tsx","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/ErrorOutline.js","components/ConfirmTxStatusFooter.tsx","components/content/ConfirmTransactionDialogContent.tsx","containers/wallet/ConfirmTransactionDialog.tsx","containers/wallet/SendCoinsDialog.tsx","containers/wallet/AccountOverview.tsx","../node_modules/@material-ui/icons/Add.js","containers/wallet/AccountsList.tsx","../node_modules/@material-ui/core/es/Table/TableContext.js","../node_modules/@material-ui/core/es/Table/Table.js","../node_modules/@material-ui/core/es/Table/index.js","../node_modules/@material-ui/core/es/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/es/TableBody/TableBody.js","../node_modules/@material-ui/core/es/TableBody/index.js","../node_modules/@material-ui/core/es/utils/deprecatedPropType.js","../node_modules/@material-ui/core/es/TableCell/TableCell.js","../node_modules/@material-ui/core/es/TableCell/index.js","../node_modules/@material-ui/core/es/TableHead/TableHead.js","../node_modules/@material-ui/core/es/TableHead/index.js","../node_modules/@material-ui/core/es/TableRow/TableRow.js","../node_modules/@material-ui/core/es/TableRow/index.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/People.js","components/content/RemoveContactDialogContent.tsx","containers/wallet/RemoveContactDialog.tsx","containers/wallet/AddressBook.tsx","../node_modules/@material-ui/core/es/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/es/ListItemSecondaryAction/index.js","../node_modules/@material-ui/core/es/ListSubheader/ListSubheader.js","../node_modules/@material-ui/core/es/ListSubheader/index.js","../node_modules/@material-ui/core/es/Switch/Switch.js","../node_modules/@material-ui/core/es/Switch/index.js","../node_modules/@material-ui/core/es/FormControlLabel/FormControlLabel.js","components/content/AddSecondPassphraseDialogContent.tsx","containers/wallet/AddSecondPassphraseDialog.tsx","../node_modules/@material-ui/core/es/NativeSelect/index.js","components/content/ChooseFiatDialogContent.tsx","containers/wallet/ChooseFiatDialog.tsx","components/content/RegisterDelegateDialogContent.tsx","containers/wallet/RegisterDelegateDialog.tsx","../node_modules/@material-ui/core/es/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/es/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/es/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/es/Checkbox/Checkbox.js","components/content/RemoveAccountDialogContent.tsx","containers/wallet/RemoveAccountDialog.tsx","containers/wallet/VerifyLedgerDialog.tsx","components/content/VerifyMnemonicDialogContent.tsx","containers/wallet/VerifyMnemonicDialog.tsx","components/DelegateVoteComponent.tsx","components/content/VoteDelegateDialogContent.tsx","containers/wallet/VoteDelegateDialog.tsx","containers/wallet/Settings.tsx","../node_modules/@material-ui/core/es/Drawer/Drawer.js","../node_modules/@material-ui/core/es/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/es/SwipeableDrawer/SwipeableDrawer.js","../node_modules/@material-ui/core/es/SwipeableDrawer/index.js","../package.json","components/content/SignOutDialogContent.tsx","../node_modules/@material-ui/core/es/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/es/ListItemIcon/index.js","../node_modules/@material-ui/icons/AccountBalanceWallet.js","../node_modules/@material-ui/icons/ExitToApp.js","../node_modules/@material-ui/icons/Usb.js","containers/wallet/DrawerContent.tsx","../node_modules/@material-ui/core/es/AppBar/AppBar.js","../node_modules/@material-ui/core/es/AppBar/index.js","../node_modules/@material-ui/core/es/Toolbar/Toolbar.js","../node_modules/@material-ui/core/es/Toolbar/index.js","../node_modules/@material-ui/icons/Menu.js","../node_modules/@material-ui/icons/SettingsOutlined.js","../node_modules/@material-ui/core/es/colors/yellow.js","containers/wallet/ConnectionStatus.tsx","containers/wallet/WalletAppBar.tsx","containers/wallet/Wallet.tsx","containers/wallet/index.ts"],"names":["styles","theme","root","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","color","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","disabled","label","display","alignItems","justifyContent","primary","contrastText","main","dark","secondary","extended","focusVisible","colorInherit","sizeSmall","sizeMedium","Fab","props","children","classes","className","disableFocusRipple","focusVisibleClassName","size","variant","other","React","createElement","ButtonBase","focusRipple","defaultProps","component","type","name","Popper","flipPlacement","placement","direction","window","document","body","getAttribute","getAnchorEl","anchorEl","handleOpen","modifiers","open","popperOptions","disablePortal","popperNode","ReactDOM","findDOMNode","popper","destroy","PopperJS","preventOverflow","boundariesElement","onCreate","handlePopperUpdate","onUpdate","data","state","setState","handleExited","exited","handleClose","Component","prevProps","_this$props","container","keepMounted","placementProps","childProps","TransitionProps","in","onExited","Portal","onRendered","role","style","position","nextProps","zIndex","tooltip","opacity","pointerEvents","popperInteractive","shape","common","white","fontFamily","fontSize","pxToRem","lineHeight","round","maxWidth","touch","tooltipPlacementLeft","transformOrigin","margin","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","Tooltip","ignoreNonTouchEvents","onRootRef","ref","childrenRef","handleFocus","event","persist","focusTimer","setTimeout","activeElement","handleEnter","childrenProps","onFocus","enterDelay","onMouseOver","setAttribute","clearTimeout","enterTimer","leaveTimer","isControlled","onOpen","handleLeave","leaveDelay","onBlur","onMouseLeave","onClose","closeTimer","shortest","handleTouchStart","enterTouchDelay","onTouchStart","touchTimer","handleTouchEnd","leaveTouchDelay","onTouchEnd","defaultId","Math","random","forceUpdate","disableFocusListener","disableHoverListener","disableTouchListener","id","interactive","openProp","PopperProps","title","TransitionComponent","shouldShowNativeTitle","interactiveWrapperListeners","Fragment","RootRef","rootRef","cloneElement","placementInner","TransitionPropsInner","timeout","shorter","split","Grow","withTheme","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_createSvgIcon","_default","d","fill","border","flexShrink","divider","absolute","bottom","left","inset","marginLeft","light","middle","spacing","unit","marginRight","Divider","blue","A200","A400","A700","edgeFix","test","navigator","userAgent","borderBottomLeftRadius","borderBottomRightRadius","top","right","content","borderTopLeftRadius","borderTopRightRadius","expanded","marginTop","marginBottom","ExpansionPanel","handleChange","onChange","undefined","defaultExpanded","childrenProp","classNameProp","CollapseProps","CollapsePropsProp","expandedProp","summary","Children","map","child","isValidElement","Paper","elevation","square","Collapse","ExpansionPanelActions","ExpansionPanelDetails","cursor","focused","flexGrow","paddingRight","expandIcon","transform","ExpansionPanelSummary","args","handleFocusVisible","onFocusVisible","handleBlur","onClick","IconButtonProps","disableRipple","IconButton","tabIndex","muiName","scrollPaper","scrollBody","overflowY","overflowX","outline","paper","flexDirection","paperScrollPaper","flex","maxHeight","paperScrollBody","paperWidthXs","max","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","paperFullWidth","paperFullScreen","Dialog","handleBackdropClick","target","currentTarget","onBackdropClick","disableBackdropClick","BackdropProps","disableEscapeKeyDown","fullScreen","fullWidth","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExiting","PaperComponent","PaperProps","scroll","transitionDuration","Modal","appear","Fade","enter","enteringScreen","exit","leavingScreen","isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","options","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","documentElement","frames","parentNode","push","viewportWidth","visualViewport","innerWidth","viewportHeight","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","targetRight","targetBottom","targetLeft","targetBlock","targetInline","computations","index","length","frame","_frame$getBoundingCli","_height","_width","_top","_left","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","scrollLeft","scrollTop","min","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","keys","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","constructor","__proto__","_assertThisInitialized","self","ReferenceError","Downshift","statusDiv","getElementById","statuses","setStatus","status","isSameAsLast","concat","div","getStatusDiv","lastChild","removeChild","firstChild","filter","Boolean","forEach","statusItem","appendChild","getStatusChildDiv","childDiv","textContent","clip","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchEnd","stateChangeTypes","freeze","idCounter","cbToCb","cb","noop","scrollIntoView","rootNode","_ref","isOrContainsNode","parent","contains","debounce","fn","time","timeoutId","cancel","wrapper","_len","Array","_key","callAllEventHandlers","_len2","fns","_key2","_len3","_key3","some","preventDownshiftDefault","nativeEvent","callAll","_len4","_key4","_len5","_key5","generateId","String","resetIdCounter","getA11yStatusMessage","_ref2","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","getElementProps","requiredProp","fnName","propName","console","error","stateKeys","pickState","result","k","normalizeArrowKey","keyCode","isPlainObject","obj","toString","_Component","_props","_this","menuId","labelId","inputId","getItemId","input","items","itemCount","timeoutIds","internalSetTimeout","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","inputValue","defaultIsOpen","selectItem","item","selectItemAtIndex","itemIndex","selectHighlightedItem","getState","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","newStateToSet","stateReducer","nextState","nextFullState","isControlledProp","onStateChange","onSelect","onUserAction","_rootNode","getRootProps","_temp","_temp2","_extends2","_ref$refKey","refKey","rest","_ref2$suppressRefErro","suppressRefError","called","_this$getState","keyDownHandlers","ArrowDown","preventDefault","stopPropagation","amount","shiftKey","moveHighlightedIndex","ArrowUp","Enter","_this$getState2","itemNode","getItemNodeFromIndex","hasAttribute","Escape","reset","buttonKeyDownHandlers","toggleMenu","getToggleButtonProps","_temp3","_ref3","onKeyDown","onPress","onKeyUp","enabledEventHandlers","button_handleClick","button_handleKeyDown","button_handleKeyUp","button_handleBlur","eventHandlers","environment","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_temp4","_ref4","onInput","onChangeText","_this$getState4","_eventHandlers","input_handleChange","input_handleKeyDown","input_handleBlur","autoComplete","input_handleTextChange","text","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_extends3","_ref5","_ref5$refKey","_ref6$suppressRefErro","getItemProps","_temp7","_enabledEventHandlers","_ref7","onMouseMove","onMouseDown","_ref7$item","onSelectKey","customClickHandler","avoidScrolling","clearItems","_ref8","_ref9","openMenu","closeMenu","updateStatus","getItemCount","_this$props$initialHi","initialHighlightedIndex","_highlightedIndex","_this$props$initialIs","initialIsOpen","_isOpen","_this$props$initialIn","initialInputValue","_inputValue","_this$props$initialSe","initialSelectedItem","_selectedItem","_state","_proto","internalClearTimeouts","stateToMerge","_this2","reduce","scrollHighlightedItemIntoView","_this3","changeHighlightedIndex","newHighlightedIndex","moveAmount","itemsLastIndex","_this$getState6","baseIndex","newIndex","_this$getState7","componentDidMount","_this4","targetWithinDownshift","checkActiveElement","contextNode","onMouseUp","onOuterClick","isTouchMove","onTouchMove","contextWithinDownshift","addEventListener","cleanup","removeEventListener","componentDidUpdate","prevState","selectedItemChanged","current","prev","componentWillUnmount","render","validateGetMenuPropsCalledCorrectly","_ref10","validateGetRootPropsCalledCorrectly","_ref11","refKeySpecified","isComposite","validateControlledUnchanged","warningDescription","propKey","prevItem","subheading","whiteSpace","gutters","paddingLeft","selected","MenuItem","disableGutters","ListItem","TableContext","createContext","borderCollapse","borderSpacing","Table","memoizedContextValue","contextValue","objectKeys","objectKey","Provider","useMemo","Tablelvl2Context","TableBody","deprecatedPropType","validator","reason","verticalAlign","textAlign","head","fontWeight","fontWeightMedium","fontWeightRegular","footer","numeric","paddingDense","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","alignJustify","TableCell","align","sortDirection","paddingProp","scope","scopeProp","Consumer","table","tablelvl2","ariaSort","TableHead","hover","TableRow","ListItemSecondaryAction","listStyle","colorPrimary","sticky","ListSubheader","disableSticky","icon","iconChecked","switchBase","checked","colorSecondary","black","bar","Switch","SwitchBase","checkedIcon","WebkitTapHighlightColor","labelPlacementStart","labelPlacementTop","labelPlacementBottom","FormControlLabel","control","disabledProp","labelPlacement","muiFormControl","controlProps","Typography","CheckBoxOutlineBlank","SvgIcon","CheckBox","IndeterminateCheckBox","indeterminate","Checkbox","indeterminateIcon","inputProps","CheckBoxIcon","CheckBoxOutlineBlankIcon","IndeterminateCheckBoxIcon","oppositeDirection","isHorizontal","anchor","getAnchor","docked","drawer","WebkitOverflowScrolling","paperAnchorLeft","paperAnchorRight","paperAnchorTop","paperAnchorBottom","paperAnchorDockedLeft","paperAnchorDockedTop","paperAnchorDockedRight","paperAnchorDockedBottom","modal","Drawer","mounted","ModalProps","BackdropPropsProp","SlideProps","slidingDrawer","Slide","flip","anchorLeft","anchorRight","anchorTop","anchorBottom","SwipeArea","UNCERTAINTY_THRESHOLD","nodeThatClaimedTheSwipe","SwipeableDrawer","isSwiping","handleBodyTouchStart","disableDiscovery","disableSwipeToOpen","swipeAreaWidth","currentX","touches","pageX","currentY","clientY","startX","startY","maybeSwiping","paperRef","setPosition","getMaxTranslate","changeTransition","velocity","lastTime","lastTranslate","handleBodyTouchMove","passive","handleBodyTouchEnd","horizontalSwipe","dx","abs","dy","translate","getTranslate","performance","now","removeBodyTouchListeners","changedTouches","translateRatio","minFlingVelocity","hysteresis","mode","handleBackdropRef","backdropRef","handlePaperRef","listenTouchStart","prevVariant","removeTouchStart","start","rtlTranslateMultiplier","drawerStyle","webkitTransform","webkitTransition","disableBackdropTransition","hideBackdrop","backdropStyle","SwipeAreaProps","ModalPropsProp","NoSsr","module","version","engines","yarn","license","dependencies","bech32","bip39","classnames","delay","downshift","inobounce","jdenticon","keyboardjs","lodash","mobx","moment","react","risejs","sinon","store","typescript","utils","scripts","build","cypress","release","tsc","tslint","precommit","prettier","serve","devDependencies","express","raf","singleQuote","jest","verbose","testMatch","testEnvironment","setupFiles","testURL","active","ListItemIcon","backgroundColorDefault","appBar","positionFixed","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","AppBar","mixins","regular","toolbar","dense","Toolbar","yellow"],"mappings":"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","file":"wallet.23008219.js","sourceRoot":"../../src","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n// @inheritedComponent ButtonBase\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    boxSizing: 'border-box',\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    boxShadow: theme.shadows[6],\n    '&:active': {\n      boxShadow: theme.shadows[12]\n    },\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      textDecoration: 'none'\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // assure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  primary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  secondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"extended\"`. */\n  extended: {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minWidth: 48,\n    height: 48\n  },\n\n  /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Styles applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"``. */\n  sizeSmall: {\n    width: 40,\n    height: 40\n  },\n\n  /* Styles applied to the root element if `size=\"medium\"``. */\n  sizeMedium: {\n    width: 48,\n    height: 48\n  }\n});\n\nfunction Fab(props) {\n  const {\n    children,\n    classes,\n    className,\n    color,\n    disabled,\n    disableFocusRipple,\n    focusVisibleClassName,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: classNames(classes.root, {\n      [classes.extended]: variant === 'extended',\n      [classes.primary]: color === 'primary',\n      [classes.secondary]: color === 'secondary',\n      [classes[`size${capitalize(size)}`]]: size !== 'large',\n      [classes.disabled]: disabled,\n      [classes.colorInherit]: color === 'inherit'\n    }, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: classNames(classes.focusVisible, focusVisibleClassName)\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['round', 'extended'])\n} : void 0;\nFab.defaultProps = {\n  color: 'default',\n  component: 'button',\n  disabled: false,\n  disableFocusRipple: false,\n  size: 'large',\n  type: 'button',\n  variant: 'round'\n};\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","export { default } from './Fab';","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport PopperJS from 'popper.js';\nimport Portal from '../Portal';\n\nfunction flipPlacement(placement) {\n  const direction = typeof window !== 'undefined' && document.body.getAttribute('dir') || 'ltr';\n\n  if (direction !== 'rtl') {\n    return placement;\n  }\n\n  switch (placement) {\n    case 'bottom-end':\n      return 'bottom-start';\n\n    case 'bottom-start':\n      return 'bottom-end';\n\n    case 'top-end':\n      return 'top-start';\n\n    case 'top-start':\n      return 'top-end';\n\n    default:\n      return placement;\n  }\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n/**\n * Poppers rely on the 3rd party library [Popper.js](https://github.com/FezVrasta/popper.js) for positioning.\n */\n\n\nclass Popper extends React.Component {\n  constructor(props) {\n    super();\n\n    this.handleOpen = () => {\n      const {\n        anchorEl,\n        modifiers,\n        open,\n        placement,\n        popperOptions = {},\n        disablePortal\n      } = this.props;\n      const popperNode = ReactDOM.findDOMNode(this);\n\n      if (!popperNode || !anchorEl || !open) {\n        return;\n      }\n\n      if (this.popper) {\n        this.popper.destroy();\n        this.popper = null;\n      }\n\n      this.popper = new PopperJS(getAnchorEl(anchorEl), popperNode, _extends({\n        placement: flipPlacement(placement)\n      }, popperOptions, {\n        modifiers: _extends({}, disablePortal ? {} : {\n          // It's using scrollParent by default, we can use the viewport when using a portal.\n          preventOverflow: {\n            boundariesElement: 'window'\n          }\n        }, modifiers, popperOptions.modifiers),\n        // We could have been using a custom modifier like react-popper is doing.\n        // But it seems this is the best public API for this use case.\n        onCreate: this.handlePopperUpdate,\n        onUpdate: this.handlePopperUpdate\n      }));\n    };\n\n    this.handlePopperUpdate = data => {\n      if (data.placement !== this.state.placement) {\n        this.setState({\n          placement: data.placement\n        });\n      }\n    };\n\n    this.handleExited = () => {\n      this.setState({\n        exited: true\n      });\n      this.handleClose();\n    };\n\n    this.handleClose = () => {\n      if (!this.popper) {\n        return;\n      }\n\n      this.popper.destroy();\n      this.popper = null;\n    };\n\n    this.state = {\n      exited: !props.open\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.open !== this.props.open && !this.props.open && !this.props.transition) {\n      // Otherwise handleExited will call this.\n      this.handleClose();\n    } // Let's update the popper position.\n\n\n    if (prevProps.open !== this.props.open || prevProps.anchorEl !== this.props.anchorEl || prevProps.popperOptions !== this.props.popperOptions || prevProps.modifiers !== this.props.modifiers || prevProps.disablePortal !== this.props.disablePortal || prevProps.placement !== this.props.placement) {\n      this.handleOpen();\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleClose();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.open) {\n      return {\n        exited: false\n      };\n    }\n\n    if (!nextProps.transition) {\n      // Otherwise let handleExited take care of marking exited.\n      return {\n        exited: true\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      container,\n      disablePortal,\n      keepMounted,\n      open,\n      placement: placementProps,\n      transition\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"anchorEl\", \"children\", \"container\", \"disablePortal\", \"keepMounted\", \"modifiers\", \"open\", \"placement\", \"popperOptions\", \"theme\", \"transition\"]);\n\n    const {\n      exited,\n      placement\n    } = this.state;\n\n    if (!keepMounted && !open && (!transition || exited)) {\n      return null;\n    }\n\n    const childProps = {\n      placement: placement || flipPlacement(placementProps)\n    };\n\n    if (transition) {\n      childProps.TransitionProps = {\n        in: open,\n        onExited: this.handleExited\n      };\n    }\n\n    return React.createElement(Portal, {\n      onRendered: this.handleOpen,\n      disablePortal: disablePortal,\n      container: container\n    }, React.createElement(\"div\", _extends({\n      role: \"tooltip\",\n      style: {\n        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.\n        position: 'absolute'\n      }\n    }, other), typeof children === 'function' ? children(childProps) : children));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Popper.propTypes = {\n  /**\n   * This is the DOM element, or a function that returns the DOM element,\n   * that may be used to set the position of the popover.\n   * The return value will passed as the reference object of the Popper\n   * instance.\n   */\n  anchorEl: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will passed to the Modal component.\n   * By default, it uses the body of the anchorEl's top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This property can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Popper.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Popper.js is based on a \"plugin-like\" architecture,\n   * most of its features are fully encapsulated \"modifiers\".\n   *\n   * A modifier is a function that is called each time Popper.js needs to\n   * compute the position of the popper.\n   * For this reason, modifiers should be very performant to avoid bottlenecks.\n   * To learn how to create a modifier, [read the modifiers documentation](https://github.com/FezVrasta/popper.js/blob/master/docs/_includes/popper-documentation.md#modifiers--object).\n   */\n  modifiers: PropTypes.object,\n\n  /**\n   * If `true`, the popper is visible.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * Popper placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Options provided to the [`popper.js`](https://github.com/FezVrasta/popper.js) instance.\n   */\n  popperOptions: PropTypes.object,\n\n  /**\n   * Help supporting a react-transition-group/Transition component.\n   */\n  transition: PropTypes.bool\n} : void 0;\nPopper.defaultProps = {\n  disablePortal: false,\n  placement: 'bottom',\n  transition: false\n};\nexport default Popper;","export { default } from './Popper';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport RootRef from '../RootRef';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    opacity: 0.9,\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied to the Popper component if `interactive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: theme.palette.grey[700],\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(10),\n    lineHeight: `${theme.typography.round(14 / 10)}em`,\n    maxWidth: 300\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${theme.typography.round(16 / 14)}em`\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\n\nclass Tooltip extends React.Component {\n  constructor(props) {\n    super();\n    this.ignoreNonTouchEvents = false;\n\n    this.onRootRef = ref => {\n      this.childrenRef = ref;\n    };\n\n    this.handleFocus = event => {\n      event.persist(); // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n\n      this.focusTimer = setTimeout(() => {\n        // We need to make sure the focus hasn't moved since the event was triggered.\n        if (this.childrenRef === document.activeElement) {\n          this.handleEnter(event);\n        }\n      }, 0);\n      const childrenProps = this.props.children.props;\n\n      if (childrenProps.onFocus) {\n        childrenProps.onFocus(event);\n      }\n    };\n\n    this.handleEnter = event => {\n      const {\n        children,\n        enterDelay\n      } = this.props;\n      const childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (this.ignoreNonTouchEvents && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      this.childrenRef.setAttribute('title', '');\n      clearTimeout(this.enterTimer);\n      clearTimeout(this.leaveTimer);\n\n      if (enterDelay) {\n        event.persist();\n        this.enterTimer = setTimeout(() => {\n          this.handleOpen(event);\n        }, enterDelay);\n      } else {\n        this.handleOpen(event);\n      }\n    };\n\n    this.handleOpen = event => {\n      // The mouseover event will trigger for every nested element in the tooltip.\n      // We can skip rerendering when the tooltip is already open.\n      // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n      if (!this.isControlled && !this.state.open) {\n        this.setState({\n          open: true\n        });\n      }\n\n      if (this.props.onOpen) {\n        this.props.onOpen(event);\n      }\n    };\n\n    this.handleLeave = event => {\n      const {\n        children,\n        leaveDelay\n      } = this.props;\n      const childrenProps = children.props;\n\n      if (event.type === 'blur' && childrenProps.onBlur) {\n        childrenProps.onBlur(event);\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(this.enterTimer);\n      clearTimeout(this.leaveTimer);\n\n      if (leaveDelay) {\n        event.persist();\n        this.leaveTimer = setTimeout(() => {\n          this.handleClose(event);\n        }, leaveDelay);\n      } else {\n        this.handleClose(event);\n      }\n    };\n\n    this.handleClose = event => {\n      if (!this.isControlled) {\n        this.setState({\n          open: false\n        });\n      }\n\n      if (this.props.onClose) {\n        this.props.onClose(event);\n      }\n\n      clearTimeout(this.closeTimer);\n      this.closeTimer = setTimeout(() => {\n        this.ignoreNonTouchEvents = false;\n      }, this.props.theme.transitions.duration.shortest);\n    };\n\n    this.handleTouchStart = event => {\n      this.ignoreNonTouchEvents = true;\n      const {\n        children,\n        enterTouchDelay\n      } = this.props;\n\n      if (children.props.onTouchStart) {\n        children.props.onTouchStart(event);\n      }\n\n      clearTimeout(this.leaveTimer);\n      clearTimeout(this.closeTimer);\n      clearTimeout(this.touchTimer);\n      event.persist();\n      this.touchTimer = setTimeout(() => {\n        this.handleEnter(event);\n      }, enterTouchDelay);\n    };\n\n    this.handleTouchEnd = event => {\n      const {\n        children,\n        leaveTouchDelay\n      } = this.props;\n\n      if (children.props.onTouchEnd) {\n        children.props.onTouchEnd(event);\n      }\n\n      clearTimeout(this.touchTimer);\n      clearTimeout(this.leaveTimer);\n      event.persist();\n      this.leaveTimer = setTimeout(() => {\n        this.handleClose(event);\n      }, leaveTouchDelay);\n    };\n\n    this.isControlled = props.open != null;\n    this.state = {\n      open: null\n    };\n\n    if (!this.isControlled) {\n      // not controlled, use internal state\n      this.state.open = false;\n    }\n  }\n\n  componentDidMount() {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.childrenRef.disabled || this.childrenRef.disabled && this.props.title === '' || this.childrenRef.tagName.toLowerCase() !== 'button', ['Material-UI: you are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Place a `div` container on top of the element.'].join('\\n')) : void 0; // Fallback to this default id when possible.\n    // Use the random value for client side rendering only.\n    // We can't use it server side.\n\n    this.defaultId = `mui-tooltip-${Math.round(Math.random() * 1e5)}`; // Rerender with this.defaultId and this.childrenRef.\n\n    if (this.props.open) {\n      this.forceUpdate();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.closeTimer);\n    clearTimeout(this.enterTimer);\n    clearTimeout(this.focusTimer);\n    clearTimeout(this.leaveTimer);\n    clearTimeout(this.touchTimer);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      classes,\n      disableFocusListener,\n      disableHoverListener,\n      disableTouchListener,\n      id,\n      interactive,\n      open: openProp,\n      placement,\n      PopperProps,\n      theme,\n      title,\n      TransitionComponent,\n      TransitionProps\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperProps\", \"theme\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n    let open = this.isControlled ? openProp : this.state.open; // There is no point in displaying an empty tooltip.\n\n    if (title === '') {\n      open = false;\n    } // For accessibility and SEO concerns, we render the title to the DOM node when\n    // the tooltip is hidden. However, we have made a tradeoff when\n    // `disableHoverListener` is set. This title logic is disabled.\n    // It's allowing us to keep the implementation size minimal.\n    // We are open to change the tradeoff.\n\n\n    const shouldShowNativeTitle = !open && !disableHoverListener;\n\n    const childrenProps = _extends({\n      'aria-describedby': open ? id || this.defaultId : null,\n      title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n    }, other, children.props, {\n      className: classNames(other.className, children.props.className)\n    });\n\n    if (!disableTouchListener) {\n      childrenProps.onTouchStart = this.handleTouchStart;\n      childrenProps.onTouchEnd = this.handleTouchEnd;\n    }\n\n    if (!disableHoverListener) {\n      childrenProps.onMouseOver = this.handleEnter;\n      childrenProps.onMouseLeave = this.handleLeave;\n    }\n\n    if (!disableFocusListener) {\n      childrenProps.onFocus = this.handleFocus;\n      childrenProps.onBlur = this.handleLeave;\n    }\n\n    const interactiveWrapperListeners = interactive ? {\n      onMouseOver: childrenProps.onMouseOver,\n      onMouseLeave: childrenProps.onMouseLeave,\n      onFocus: childrenProps.onFocus,\n      onBlur: childrenProps.onBlur\n    } : {};\n    process.env.NODE_ENV !== \"production\" ? warning(!children.props.title, ['Material-UI: you have provided a `title` property to the child of <Tooltip />.', `Remove this title property \\`${children.props.title}\\` or the Tooltip component.`].join('\\n')) : void 0;\n    return React.createElement(React.Fragment, null, React.createElement(RootRef, {\n      rootRef: this.onRootRef\n    }, React.cloneElement(children, childrenProps)), React.createElement(Popper, _extends({\n      className: classNames(classes.popper, {\n        [classes.popperInteractive]: interactive\n      }),\n      placement: placement,\n      anchorEl: this.childrenRef,\n      open: open,\n      id: childrenProps['aria-describedby'],\n      transition: true\n    }, interactiveWrapperListeners, PopperProps), ({\n      placement: placementInner,\n      TransitionProps: TransitionPropsInner\n    }) => React.createElement(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps), React.createElement(\"div\", {\n      className: classNames(classes.tooltip, {\n        [classes.touch]: this.ignoreNonTouchEvents\n      }, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`])\n    }, title))));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  /**\n   * Tooltip reference element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This property won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * The relationship between the tooltip and the wrapper component is not clear from the DOM.\n   * This property is used with aria-describedby to solve the accessibility issue.\n   * If you don't provide this property. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This property won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the tooltip requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the tooltip requests to be open.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Properties applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: componentPropType,\n\n  /**\n   * Properties applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nTooltip.defaultProps = {\n  disableFocusListener: false,\n  disableHoverListener: false,\n  disableTouchListener: false,\n  enterDelay: 0,\n  enterTouchDelay: 1000,\n  interactive: false,\n  leaveDelay: 0,\n  leaveTouchDelay: 1500,\n  placement: 'bottom',\n  TransitionComponent: Grow\n};\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  withTheme: true\n})(Tooltip);","export { default } from './Tooltip';","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Send');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport chainPropTypes from '../utils/chainPropTypes';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 1,\n    margin: 0,\n    // Reset browser default style.\n    border: 'none',\n    flexShrink: 0,\n    backgroundColor: theme.palette.divider\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    backgroundColor: fade(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2\n  }\n});\n\nfunction Divider(props) {\n  const {\n    absolute,\n    classes,\n    className,\n    component: Component,\n    inset,\n    light,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"component\", \"inset\", \"light\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: classNames(classes.root, {\n      [classes.inset]: inset || variant === 'inset',\n      [classes.middle]: variant === 'middle',\n      [classes.absolute]: absolute,\n      [classes.light]: light\n    }, className)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the divider will be indented.\n   * __WARNING__: `inset` is deprecated.\n   * Instead use `variant=\"inset\"`.\n   */\n  inset: chainPropTypes(PropTypes.bool, props => {\n    /* istanbul ignore if */\n    if (props.inset) {\n      return new Error('Material-UI: you are using the deprecated `inset` property ' + 'that will be removed in the next major release. The property `variant=\"inset\"` ' + 'is equivalent and should be used instead.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   *  The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nDivider.defaultProps = {\n  absolute: false,\n  component: 'hr',\n  light: false,\n  variant: 'fullWidth'\n};\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","export { default } from './Divider';","import { Tooltip } from '@material-ui/core';\nimport Divider from '@material-ui/core/es/Divider';\nimport Paper from '@material-ui/core/es/Paper';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport AccountIcon from '../components/AccountIcon';\nimport { RawAmount } from '../utils/amounts';\nimport { formatAmount, formatFiat } from '../utils/utils';\n\nconst styles = (theme: Theme) => {\n  const step = 5;\n  const unit = 'px';\n  const { sm } = theme.breakpoints.values;\n  const xxs = theme.breakpoints.values.sm / 2;\n\n  // Create custom breakpoints\n  const singleLineLayout = theme.breakpoints.up('sm');\n  const multiLineLayout = theme.breakpoints.down('xs');\n  const iconInLayout = singleLineLayout;\n  const iconAbsolute = `@media (min-width: ${xxs}${unit}) and (max-width: ${sm -\n    step / 100}${unit})`;\n  const iconHidden = `@media (max-width: ${xxs - step / 100}${unit})`;\n\n  return createStyles({\n    container: {\n      position: 'relative',\n      [singleLineLayout]: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing.unit\n      }\n    },\n    icon: {\n      padding: theme.spacing.unit,\n      [iconInLayout]: {},\n      [iconAbsolute]: {\n        position: 'absolute',\n        top: `calc(50% - ${(64 + 2 * theme.spacing.unit) / 2}px)`,\n        right: 2 * theme.spacing.unit,\n        backgroundColor: 'white',\n        border: `1px solid ${theme.palette.divider}`\n      },\n      [iconHidden]: {\n        display: 'none'\n      }\n    },\n    divider: {\n      [singleLineLayout]: {\n        display: 'none'\n      }\n    },\n    section: {\n      [iconAbsolute]: {\n        marginRight: 64 + 4 * theme.spacing.unit + 2\n      },\n      [multiLineLayout]: {\n        padding: 2 * theme.spacing.unit\n      },\n      [singleLineLayout]: {\n        flex: 1,\n        padding: theme.spacing.unit\n      }\n    },\n    account_section: {},\n    balance_section: {\n      [singleLineLayout]: {\n        textAlign: 'right'\n      }\n    },\n    primary_text: {\n      ...theme.typography.subtitle1,\n      color: theme.palette.text.primary\n    },\n    secondary_text: {\n      color: theme.palette.text.secondary\n    }\n  });\n};\n\ninterface Props extends WithStyles<typeof styles> {\n  address: string;\n  alias: string | null;\n  balance: RawAmount;\n  balanceFiat: number | null;\n  fiatCurrency: string;\n  className?: string;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'AccountOverviewHeader' });\n\nconst messages = defineMessages({\n  aliasAriaLabel: {\n    id: 'account-overview-header.alias-aria-label',\n    description: 'Accessibility label for account name/alias',\n    defaultMessage: 'Account'\n  },\n  addressAriaLabel: {\n    id: 'account-overview-header.address-aria-label',\n    description: 'Accessibility label for account address',\n    defaultMessage: 'Account address'\n  },\n  balanceAriaLabel: {\n    id: 'account-overview-header.balance-aria-label',\n    description: 'Accessibility label for account balance',\n    defaultMessage: 'Balance'\n  }\n});\n\nconst AccountOverviewHeader = stylesDecorator(\n  injectIntl(\n    class extends React.Component<DecoratedProps> {\n      render() {\n        const {\n          intl,\n          classes,\n          className,\n          address,\n          alias,\n          balance,\n          balanceFiat,\n          fiatCurrency\n        } = this.props;\n\n        return (\n          <Paper\n            square={true}\n            className={classNames(classes.container, className)}\n          >\n            <div className={classes.icon} aria-hidden={true}>\n              <AccountIcon size={64} address={address} />\n            </div>\n            <div\n              className={classNames(classes.section, classes.account_section)}\n            >\n              <Typography\n                className={classes.primary_text}\n                aria-label={intl.formatMessage(messages.aliasAriaLabel)}\n              >\n                {alias}\n              </Typography>\n              <Typography\n                className={classes.secondary_text}\n                aria-label={intl.formatMessage(messages.addressAriaLabel)}\n              >\n                {address}\n              </Typography>\n            </div>\n            <Divider className={classes.divider} />\n            <div\n              className={classNames(classes.section, classes.balance_section)}\n            >\n              <Typography\n                className={classes.primary_text}\n                aria-label={intl.formatMessage(messages.balanceAriaLabel)}\n              >\n                {formatAmount(intl, balance)}\n              </Typography>\n              {!!balanceFiat && (\n                <Typography className={classes.secondary_text}>\n                  <Tooltip title=\"Powered by CoinGecko\">\n                    <span>{formatFiat(intl, balanceFiat, fiatCurrency)}</span>\n                  </Tooltip>\n                </Typography>\n              )}\n            </div>\n          </Paper>\n        );\n      }\n    }\n  )\n);\n\nexport default AccountOverviewHeader;\n","const blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n})), 'Info');\n\nexports.default = _default;","let lastAutoId = 0;\n\n// tslint:disable-next-line:no-any\nexport default function autoId(target: any, key: string) {\n  Object.defineProperty(target, key, {\n    get: function() {\n      if (this.__autoId === undefined) {\n        lastAutoId += 1;\n        this.__autoId = lastAutoId;\n      }\n      return `${key}-${this.__autoId}`;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","import blue from '@material-ui/core/es/colors/blue';\nimport IconButton from '@material-ui/core/es/IconButton';\nimport Paper from '@material-ui/core/es/Paper';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport classNames from 'classnames';\nimport React, { ReactEventHandler } from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport autoId from '../utils/autoId';\n\nconst styles = (theme: Theme) => {\n  const backgroundColor = blue[600];\n  return createStyles({\n    root: {\n      ...theme.typography.body2,\n      backgroundColor,\n      color: theme.palette.getContrastText(backgroundColor),\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 24px',\n      marginBottom: theme.spacing.unit\n    },\n    icon: {\n      fontSize: 20\n    },\n    messageIcon: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 24,\n      marginRight: -8\n    }\n  });\n};\n\ninterface Props extends WithStyles<typeof styles> {\n  open: boolean;\n  message: string;\n  onDismiss?: ReactEventHandler<{}>;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'AccountTip' });\n\nconst messages = defineMessages({\n  dismissAriaLabel: {\n    id: 'account-tip.dismiss-aria-label',\n    description: 'Accessibility label for dismiss tip button',\n    defaultMessage: 'Dismiss'\n  }\n});\n\nclass AccountTip extends React.Component<DecoratedProps> {\n  @autoId accountTipMessageId: string;\n\n  render() {\n    const { intl, classes, open, message, onDismiss } = this.props;\n\n    if (!open) {\n      return null;\n    }\n\n    return (\n      <Paper\n        className={classes.root}\n        aria-describedby={this.accountTipMessageId}\n      >\n        <div className={classes.message}>\n          <InfoIcon className={classNames(classes.icon, classes.messageIcon)} />\n          <span id={this.accountTipMessageId}>{message}</span>\n        </div>\n        <div className={classes.action}>\n          {!!onDismiss && (\n            <IconButton\n              aria-label={intl.formatMessage(messages.dismissAriaLabel)}\n              color=\"inherit\"\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          )}\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AccountTip));\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n// @inheritedComponent Paper\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport { isMuiElement } from '../utils/reactHelpers'; // Workaround https://github.com/jsdom/jsdom/issues/2026\n\nconst edgeFix = typeof window !== 'undefined' && /jsdom/.test(window.navigator.userAgent) ? {} : {\n  // Fix a rendering issue on Edge\n  '@supports (-ms-ime-align: auto)': {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  }\n};\nexport const styles = theme => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        borderTopLeftRadius: 2,\n        borderTopRightRadius: 2,\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&:last-child': _extends({\n        borderBottomLeftRadius: 2,\n        borderBottomRightRadius: 2\n      }, edgeFix),\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {\n      margin: '16px 0',\n      '&:first-child': {\n        marginTop: 0\n      },\n      '&:last-child': {\n        marginBottom: 0\n      },\n      '&:before': {\n        opacity: 0\n      }\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  };\n};\n\nclass ExpansionPanel extends React.Component {\n  constructor(props) {\n    super();\n\n    this.handleChange = event => {\n      const expanded = this.isControlled ? this.props.expanded : this.state.expanded;\n\n      if (!this.isControlled) {\n        this.setState({\n          expanded: !expanded\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(event, !expanded);\n      }\n    };\n\n    this.isControlled = props.expanded != null;\n    this.state = {};\n\n    if (!this.isControlled) {\n      // not controlled, use internal state\n      this.state.expanded = props.defaultExpanded !== undefined ? props.defaultExpanded : false;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children: childrenProp,\n      classes,\n      className: classNameProp,\n      CollapseProps: CollapsePropsProp,\n      disabled,\n      expanded: expandedProp\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"classes\", \"className\", \"CollapseProps\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\"]);\n\n    const expanded = this.isControlled ? expandedProp : this.state.expanded;\n    const className = classNames(classes.root, {\n      [classes.expanded]: expanded,\n      [classes.disabled]: disabled\n    }, classNameProp);\n    let summary = null;\n    const children = React.Children.map(childrenProp, child => {\n      if (!React.isValidElement(child)) {\n        return null;\n      }\n\n      process.env.NODE_ENV !== \"production\" ? warning(child.type !== React.Fragment, [\"Material-UI: the ExpansionPanel component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n\n      if (isMuiElement(child, ['ExpansionPanelSummary'])) {\n        summary = React.cloneElement(child, {\n          disabled,\n          expanded,\n          onChange: this.handleChange\n        });\n        return null;\n      }\n\n      return child;\n    });\n    const CollapseProps = !expanded ? {\n      'aria-hidden': 'true'\n    } : null;\n    return React.createElement(Paper, _extends({\n      className: className,\n      elevation: 1,\n      square: true\n    }, other), summary, React.createElement(Collapse, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, CollapseProps, CollapsePropsProp), children));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Properties applied to the [`Collapse`](/api/collapse/) element.\n   */\n  CollapseProps: PropTypes.object,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {boolean} expanded The `expanded` state of the panel\n   */\n  onChange: PropTypes.func\n} : void 0;\nExpansionPanel.defaultProps = {\n  defaultExpanded: false,\n  disabled: false\n};\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","export { default } from './ExpansionPanel';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { cloneChildrenWithClassName } from '../utils/reactHelpers';\nimport '../Button'; // So we don't have any override priority issue.\n\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '16px 8px'\n  },\n\n  /* Styles applied to the children. */\n  action: {\n    marginLeft: 8\n  }\n};\n\nfunction ExpansionPanelActions(props) {\n  const {\n    children,\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, className)\n  }, other), cloneChildrenWithClassName(children, classes.action));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);","export { default } from './ExpansionPanelActions';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\n\nfunction ExpansionPanelDetails(props) {\n  const {\n    classes,\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"children\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, className)\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","export { default } from './ExpansionPanelDetails';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n// @inheritedComponent ButtonBase\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: '0 24px 0 24px',\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root and children wrapper elements when focused. */\n    focused: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '& > :last-child': {\n        paddingRight: 32\n      },\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      position: 'absolute',\n      top: '50%',\n      right: 8,\n      transform: 'translateY(-50%) rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'translateY(-50%) rotate(180deg)'\n      }\n    }\n  };\n};\n\nclass ExpansionPanelSummary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      focused: false\n    };\n\n    this.handleFocusVisible = event => {\n      this.setState({\n        focused: true\n      });\n\n      if (this.props.onFocusVisible) {\n        this.props.onFocusVisible(event);\n      }\n    };\n\n    this.handleBlur = event => {\n      this.setState({\n        focused: false\n      });\n\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        onChange,\n        onClick\n      } = this.props;\n\n      if (onChange) {\n        onChange(event);\n      }\n\n      if (onClick) {\n        onClick(event);\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      classes,\n      className,\n      disabled,\n      expanded,\n      expandIcon,\n      IconButtonProps\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"classes\", \"className\", \"disabled\", \"expanded\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onChange\", \"onClick\", \"onFocusVisible\"]);\n\n    const {\n      focused\n    } = this.state;\n    return React.createElement(ButtonBase, _extends({\n      focusRipple: false,\n      disableRipple: true,\n      disabled: disabled,\n      component: \"div\",\n      \"aria-expanded\": expanded,\n      className: classNames(classes.root, {\n        [classes.disabled]: disabled,\n        [classes.expanded]: expanded,\n        [classes.focused]: focused\n      }, className),\n      onFocusVisible: this.handleFocusVisible,\n      onBlur: this.handleBlur,\n      onClick: this.handleChange\n    }, other), React.createElement(\"div\", {\n      className: classNames(classes.content, {\n        [classes.expanded]: expanded\n      })\n    }, children), expandIcon && React.createElement(IconButton, _extends({\n      disabled: disabled,\n      className: classNames(classes.expandIcon, {\n        [classes.expanded]: expanded\n      }),\n      component: \"div\",\n      tabIndex: -1,\n      \"aria-hidden\": \"true\"\n    }, IconButtonProps), expandIcon));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * If `true`, the summary will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   * If `true`, expands the summary, otherwise collapse it.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Properties applied to the `TouchRipple` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nExpansionPanelSummary.defaultProps = {\n  disabled: false\n};\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","export { default } from './ExpansionPanelSummary';","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'ExpandMore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n})), 'Link');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n})), 'PersonAdd');\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createIcon = require('./util/createIcon');\n\nvar _createIcon2 = _interopRequireDefault(_createIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _createIcon2.default)('M19,21H8V7H19M19,5H8C6.9,5 6,5.9 6,7V21C6,22.1 6.9,23 8,23H19C20.1,23 21,22.1 21,21V7C21,5.9 20.1,5 19,5M16,1H4C2.9,1 2,1.9 2,3V17H4V3H16V1Z');","// TODO use an npm module\nexport function copyToClipboard(value: string) {\n  const selection = document.getSelection();\n\n  // Persist current user selection\n  const ranges = [];\n  if (selection) {\n    for (let i = 0; i < selection.rangeCount; i++) {\n      ranges.push(selection.getRangeAt(i));\n    }\n  }\n\n  const el = document.createElement('textarea');\n  el.value = value;\n  el.setAttribute('readonly', '');\n  el.setAttribute('aria-hidden', 'true');\n  el.style.opacity = '0';\n  el.style.pointerEvents = 'none';\n  el.style.position = 'absolute';\n  el.style.top = '0px';\n  el.style.right = '0px';\n  document.body.appendChild(el);\n\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n\n  // Restore previous selection\n  if (selection && ranges.length > 0) {\n    selection.removeAllRanges();\n    for (let i = 0; i < ranges.length; i++) {\n      selection.addRange(ranges[i]);\n    }\n  }\n}\n","import { Omit } from '@material-ui/core';\nimport Button from '@material-ui/core/es/Button';\nimport green from '@material-ui/core/es/colors/green';\nimport ExpansionPanel from '@material-ui/core/es/ExpansionPanel';\nimport ExpansionPanelActions from '@material-ui/core/es/ExpansionPanelActions';\nimport ExpansionPanelDetails from '@material-ui/core/es/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/es/ExpansionPanelSummary';\nimport IconButton from '@material-ui/core/es/IconButton';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Tooltip from '@material-ui/core/es/Tooltip';\nimport Typography from '@material-ui/core/es/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport classNames from 'classnames';\nimport ContentCopyIcon from 'mdi-material-ui/ContentCopy';\nimport moment from 'moment/min/moment-with-locales';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { TransactionType } from 'risejs/dist/es5/types/beans';\nimport { Transaction } from '../stores/transactions';\nimport { RawAmount } from '../utils/amounts';\nimport { copyToClipboard } from '../utils/clipboard';\nimport { PropsOf } from '../utils/metaTypes';\nimport { formatAmount } from '../utils/utils';\nimport Link from './Link';\n\ntype LinkProps = Omit<PropsOf<typeof Link>, 'children'>;\n\nconst styles = (theme: Theme) => {\n  return createStyles({\n    expanded: {},\n    summaryRoot: {\n      padding: `0 ${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 3}px`,\n      [theme.breakpoints.down('xs')]: {\n        padding: `0 ${theme.spacing.unit * 2}px 0 ${theme.spacing.unit * 2}px`\n      },\n      '&$expanded': {\n        [theme.breakpoints.down('xs')]: {\n          minHeight: 58\n        }\n      }\n    },\n    summaryContent: {\n      display: 'flex',\n      alignItems: 'center',\n      '& > :last-child': {\n        [theme.breakpoints.down('xs')]: {\n          paddingRight: 0\n        }\n      },\n      '&$expanded': {\n        [theme.breakpoints.down('xs')]: {\n          margin: '14px 0'\n        }\n      }\n    },\n    summaryExpandIcon: {\n      [theme.breakpoints.down('xs')]: {\n        display: 'none'\n      }\n    },\n    summarySummary: {\n      flex: 1,\n      marginRight: 2 * theme.spacing.unit,\n      wordBreak: 'break-word'\n    },\n    summaryAmount: {\n      ...theme.typography.body2,\n      fontWeight: 500\n    },\n    summaryIncomingAmount: {\n      color: green[800]\n    },\n    shortText: {\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    },\n    longText: {\n      [theme.breakpoints.down('xs')]: {\n        display: 'none'\n      }\n    },\n    detailsRoot: {\n      flexDirection: 'column',\n      padding: `${theme.spacing.unit}px 0 0`,\n      [theme.breakpoints.down('xs')]: {\n        padding: `${theme.spacing.unit}px 0 0`\n      }\n    },\n    detailsRow: {\n      display: 'flex',\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 2,\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n        flexWrap: 'wrap'\n      },\n      '&:nth-child(even)': {\n        backgroundColor: '#fafafa'\n      }\n    },\n    detailsRowLabel: {\n      ...theme.typography.body2,\n      fontWeight: 500,\n      order: 1,\n      lineHeight: '28px',\n      [theme.breakpoints.down('xs')]: {\n        flex: 1\n      }\n    },\n    detailsRowValue: {\n      order: 2,\n      flex: 1,\n      textAlign: 'right',\n      lineHeight: '28px',\n      marginLeft: theme.spacing.unit,\n      [theme.breakpoints.down('xs')]: {\n        order: 3,\n        flex: 'none',\n        width: '100%',\n        textAlign: 'left',\n        marginLeft: 0\n      }\n    },\n    detailsRowActions: {\n      order: 3,\n      minWidth: 2 * 28,\n      marginLeft: theme.spacing.unit,\n      [theme.breakpoints.down('xs')]: {\n        order: 2\n      }\n    },\n    detailsRowAction: {\n      width: 28,\n      height: 28,\n      padding: 0,\n      fontSize: theme.typography.pxToRem(14)\n    }\n  });\n};\n\ninterface Props extends WithStyles<typeof styles> {\n  tx: Transaction;\n  explorerUrl: string;\n  expanded?: boolean;\n  onExpand?: (id: string, expanded: boolean) => void;\n  getSendLinkProps: (address: string, amount: RawAmount) => LinkProps;\n  handleContactEdit(id: string): void;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'TxDetailsExpansionPanel' });\n\nconst messages = defineMessages({\n  // receive\n  summaryUnconfirmedReceiveAliasLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-receive-alias-long',\n    description: 'Summary text for unconfirmed receive operation with an alias',\n    defaultMessage: 'Pending transfer from {alias} ({address})'\n  },\n  summaryUnconfirmedReceiveAliasShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-receive-alias-short',\n    description:\n      'Summary text for unconfirmed receive operation with an alias (short version)',\n    defaultMessage: 'Pending from {alias} ({address})'\n  },\n  summaryUnconfirmedReceiveLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-receive-long',\n    description:\n      'Summary text for unconfirmed receive operation without an alias',\n    defaultMessage: 'Pending transfer from {address}'\n  },\n  summaryUnconfirmedReceiveShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-receive-short',\n    description:\n      'Summary text for unconfirmed receive operation without an alias (short version)',\n    defaultMessage: 'Pending from {address}'\n  },\n  summaryReceiveAliasLong: {\n    id: 'tx-details-expansion-panel.summary-receive-alias-long',\n    description: 'Summary text for receive operation with an alias',\n    defaultMessage: 'Transfer from {alias} ({address})'\n  },\n  summaryReceiveAliasShort: {\n    id: 'tx-details-expansion-panel.summary-receive-alias-short',\n    description:\n      'Summary text for receive operation with an alias (short version)',\n    defaultMessage: 'From {alias} ({address})'\n  },\n  summaryReceiveLong: {\n    id: 'tx-details-expansion-panel.summary-receive-long',\n    description: 'Summary text for receive operation without an alias',\n    defaultMessage: 'Transfer from {address}'\n  },\n  summaryReceiveShort: {\n    id: 'tx-details-expansion-panel.summary-receive-short',\n    description:\n      'Summary text for receive operation without an alias (short version)',\n    defaultMessage: 'From {address}'\n  },\n  // send\n  summaryUnconfirmedSendAliasLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-send-alias-long',\n    description: 'Summary text for unconfirmed send operation with an alias',\n    defaultMessage: 'Pending transfer to {alias} ({address})'\n  },\n  summaryUnconfirmedSendAliasShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-send-alias-short',\n    description:\n      'Summary text for unconfirmed send operation with an alias (short version)',\n    defaultMessage: 'Pending to {alias} ({address})'\n  },\n  summaryUnconfirmedSendLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-send-long',\n    description: 'Summary text for unconfirmed send operation without an alias',\n    defaultMessage: 'Pending transfer to {address}'\n  },\n  summaryUnconfirmedSendShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-send-short',\n    description:\n      'Summary text for unconfirmed send operation without an alias (short version)',\n    defaultMessage: 'Pending to {address}'\n  },\n  summarySendAliasLong: {\n    id: 'tx-details-expansion-panel.summary-send-alias-long',\n    description: 'Summary text for send operation with an alias',\n    defaultMessage: 'Transfer to {alias} ({address})'\n  },\n  summarySendAliasShort: {\n    id: 'tx-details-expansion-panel.summary-send-alias-short',\n    description:\n      'Summary text for send operation with an alias (short version)',\n    defaultMessage: 'To {alias} ({address})'\n  },\n  summarySendLong: {\n    id: 'tx-details-expansion-panel.summary-send-long',\n    description: 'Summary text for send operation without an alias',\n    defaultMessage: 'Transfer to {address}'\n  },\n  summarySendShort: {\n    id: 'tx-details-expansion-panel.summary-send-short',\n    description:\n      'Summary text for send operation without an alias (short version)',\n    defaultMessage: 'To {address}'\n  },\n  // passphrase\n  summaryUnconfirmedPassphraseLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-passphrase-long',\n    description: 'Summary text for unconfirmed passphrase tx',\n    defaultMessage: 'Pending 2nd passphrase setup for the account'\n  },\n  summaryUnconfirmedPassphraseShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-passphrase-short',\n    description: 'Summary text for unconfirmed passphrase tx (short version)',\n    defaultMessage: 'Pending 2nd passphrase setup'\n  },\n  summaryPassphraseLong: {\n    id: 'tx-details-expansion-panel.summary-passphrase-long',\n    description: 'Summary text for passphrase tx',\n    defaultMessage: 'Setup 2nd passphrase for the account'\n  },\n  summaryPassphraseShort: {\n    id: 'tx-details-expansion-panel.summary-passphrase-short',\n    description: 'Summary text for passphrase tx (short version)',\n    defaultMessage: 'Setup 2nd passphrase'\n  },\n  // delegate\n  summaryUnconfirmedDelegateLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-delegate-long',\n    description: 'Summary text for unconfirmed delegate tx',\n    defaultMessage: 'Pending delegate registration as {username}'\n  },\n  summaryUnconfirmedDelegateShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-delegate-short',\n    description: 'Summary text for unconfirmed delegate tx (short version)',\n    defaultMessage: 'Pending delegate reg. as {username}'\n  },\n  summaryUnconfirmedDelegateGenericLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-delegate-generic-long',\n    description: 'Summary text for unconfirmed delegate tx (generic)',\n    defaultMessage: 'Pending delegate registration transaction'\n  },\n  summaryUnconfirmedDelegateGenericShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-delegate-generic-short',\n    description:\n      'Summary text for unconfirmed delegate tx (generic) (short version)',\n    defaultMessage: 'Pending delegate reg. transaction'\n  },\n  summaryDelegateLong: {\n    id: 'tx-details-expansion-panel.summary-delegate-long',\n    description: 'Summary text for delegate tx',\n    defaultMessage: 'Register as delegate {username}'\n  },\n  summaryDelegateShort: {\n    id: 'tx-details-expansion-panel.summary-delegate-short',\n    description: 'Summary text for delegate tx (short version)',\n    defaultMessage: 'Register delegate {username}'\n  },\n  summaryDelegateGenericLong: {\n    id: 'tx-details-expansion-panel.summary-delegate-generic-long',\n    description: 'Summary text for delegate tx (generic)',\n    defaultMessage: 'Register as a delegate transaction'\n  },\n  summaryDelegateGenericShort: {\n    id: 'tx-details-expansion-panel.summary-delegate-generic-short',\n    description: 'Summary text for delegate tx (generic) (short version)',\n    defaultMessage: 'Register delegate transaction'\n  },\n  // vote\n  summaryUnconfirmedVoteCastLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-cast-long',\n    description: 'Summary text for unconfirmed cast vote tx',\n    defaultMessage: 'Pending cast vote for {username} ({address})'\n  },\n  summaryUnconfirmedVoteCastShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-cast-short',\n    description: 'Summary text for unconfirmed cast vote tx (short version)',\n    defaultMessage: 'Pending vote for {username} ({address})'\n  },\n  summaryUnconfirmedVoteRemoveLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-remove-long',\n    description: 'Summary text for unconfirmed remove vote tx',\n    defaultMessage: 'Pending vote removal from {username} ({address})'\n  },\n  summaryUnconfirmedVoteRemoveShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-remove-short',\n    description: 'Summary text for unconfirmed remove vote tx (short version)',\n    defaultMessage: 'Pending vote removal form {username} ({address})'\n  },\n  summaryUnconfirmedVoteGenericLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-generic-long',\n    description: 'Summary text for unconfirmed generic vote tx',\n    defaultMessage: 'Pending vote transaction'\n  },\n  summaryUnconfirmedVoteGenericShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-vote-generic-short',\n    description: 'Summary text for unconfirmed generic vote tx (short version)',\n    defaultMessage: 'Pending vote transaction'\n  },\n  summaryVoteCastLong: {\n    id: 'tx-details-expansion-panel.summary-vote-cast-long',\n    description: 'Summary text for cast vote tx',\n    defaultMessage: 'Cast vote for {username} ({address})'\n  },\n  summaryVoteCastShort: {\n    id: 'tx-details-expansion-panel.summary-vote-cast-short',\n    description: 'Summary text for cast vote tx (short version)',\n    defaultMessage: 'Vote for {username} ({address})'\n  },\n  summaryVoteRemoveLong: {\n    id: 'tx-details-expansion-panel.summary-vote-remove-long',\n    description: 'Summary text for remove vote tx',\n    defaultMessage: 'Remove vote from {username} ({address})'\n  },\n  summaryVoteRemoveShort: {\n    id: 'tx-details-expansion-panel.summary-vote-remove-short',\n    description: 'Summary text for remove vote tx (short version)',\n    defaultMessage: 'Remove vote from {username} ({address})'\n  },\n  summaryVoteGenericLong: {\n    id: 'tx-details-expansion-panel.summary-vote-generic-long',\n    description: 'Summary text for generic vote tx',\n    defaultMessage: 'Vote transaction'\n  },\n  summaryVoteGenericShort: {\n    id: 'tx-details-expansion-panel.summary-vote-generic-short',\n    description: 'Summary text for generic vote tx (short version)',\n    defaultMessage: 'Vote transaction'\n  },\n  // unknown\n  summaryUnconfirmedUnknownLong: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-unknown-long',\n    description: 'Summary text for unconfirmed unknown tx',\n    defaultMessage: 'Pending unknown transaction'\n  },\n  summaryUnconfirmedUnknownShort: {\n    id: 'tx-details-expansion-panel.summary-unconfirmed-unknown-short',\n    description: 'Summary text for unconfirmed unknown tx (short version)',\n    defaultMessage: 'Pending unknown transaction'\n  },\n  summaryUnknownLong: {\n    id: 'tx-details-expansion-panel.summary-unknown-long',\n    description: 'Summary text for unknown tx',\n    defaultMessage: 'Unknown transaction'\n  },\n  summaryUnknownShort: {\n    id: 'tx-details-expansion-panel.summary-unknown-short',\n    description: 'Summary text for unknown tx (short version)',\n    defaultMessage: 'Unknown transaction'\n  },\n  /// details\n  detailsStatusLabel: {\n    id: 'tx-details-expansion-panel.details-status-label',\n    description: 'Tx details status row label',\n    defaultMessage: 'Status:'\n  },\n  detailsStatusUnconfirmed: {\n    id: 'tx-details-expansion-panel.details-status-unconfirmed',\n    description: 'Tx details unconfirmed status value',\n    defaultMessage: 'Unconfirmed'\n  },\n  detailsStatusUnconfirmedTooltip: {\n    id: 'tx-details-expansion-panel.details-status-unconfirmed-tooltip',\n    description: 'Tx details unconfirmed status tooltip',\n    defaultMessage: 'Not included in a block yet'\n  },\n  detailsStatusUnsettled: {\n    id: 'tx-details-expansion-panel.details-status-unsettled',\n    description: 'Tx details confirmed but unsettled status value',\n    defaultMessage: 'Confirmed (settling - {confirmations}/{needed})'\n  },\n  detailsStatusUnsettledTooltip: {\n    id: 'tx-details-expansion-panel.details-status-unsettled-tooltip',\n    description: 'Tx details confirmed but unsettled status tooltip',\n    defaultMessage: 'With low number of confirmations'\n  },\n  detailsStatusSettled: {\n    id: 'tx-details-expansion-panel.details-status-settled',\n    description: 'Tx details confirmed and settled status value',\n    defaultMessage: 'Confirmed (settled)'\n  },\n  detailsStatusSettledTooltip: {\n    id: 'tx-details-expansion-panel.details-status-settled-tooltip',\n    description: 'Tx details confirmed and settled status tooltip',\n    defaultMessage: 'With high number of confirmations'\n  },\n  detailsTimestampLabel: {\n    id: 'tx-details-expansion-panel.details-timestamp-label',\n    description: 'Tx details timestamp row label',\n    defaultMessage: 'Timestamp:'\n  },\n  detailsTxIdLabel: {\n    id: 'tx-details-expansion-panel.details-txid-label',\n    description: 'Tx details transaction id row label',\n    defaultMessage: 'Transaction ID:'\n  },\n  detailsTxIdCopyTooltip: {\n    id: 'tx-details-expansion-panel.details-txid-copy-tooltip',\n    description: 'Tx details transaction id copy tooltip',\n    defaultMessage: 'Copy ID'\n  },\n  detailsTxIdCopyAria: {\n    id: 'tx-details-expansion-panel.details-txid-copy-aria',\n    description: 'Tx details transaction id copy aria label',\n    defaultMessage: 'Copy transaction ID'\n  },\n  detailsTxIdExplorerTooltip: {\n    id: 'tx-details-expansion-panel.details-txid-explorer-tooltip',\n    description: 'Tx details transaction id open explorer tooltip',\n    defaultMessage: 'View in explorer'\n  },\n  detailsTxIdExplorerAria: {\n    id: 'tx-details-expansion-panel.details-txid-explorer-aria',\n    description: 'Tx details transaction id open explorer aria label',\n    defaultMessage: 'View transaction in explorer'\n  },\n  detailsBlockIdLabel: {\n    id: 'tx-details-expansion-panel.details-blockid-label',\n    description: 'Tx details transaction block id row label',\n    defaultMessage: 'Block ID:'\n  },\n  detailsBlockIdCopyTooltip: {\n    id: 'tx-details-expansion-panel.details-blockid-copy-tooltip',\n    description: 'Tx details transaction block id copy tooltip',\n    defaultMessage: 'Copy ID'\n  },\n  detailsBlockIdCopyAria: {\n    id: 'tx-details-expansion-panel.details-blockid-copy-aria',\n    description: 'Tx details transaction block id copy aria label',\n    defaultMessage: 'Copy block ID'\n  },\n  detailsBlockIdExplorerTooltip: {\n    id: 'tx-details-expansion-panel.details-blockid-explorer-tooltip',\n    description: 'Tx details transaction block id open explorer tooltip',\n    defaultMessage: 'View in explorer'\n  },\n  detailsBlockIdExplorerAria: {\n    id: 'tx-details-expansion-panel.details-blockid-explorer-aria',\n    description: 'Tx details transaction block id open explorer aria label',\n    defaultMessage: 'View block in explorer'\n  },\n  detailsTxTypeLabel: {\n    id: 'tx-details-expansion-panel.details-txtype-label',\n    description: 'Tx details transaction type row label',\n    defaultMessage: 'Transaction type:'\n  },\n  detailsTxTypeSend: {\n    id: 'tx-details-expansion-panel.details-txtype-send',\n    description: 'Tx details transaction type send value',\n    defaultMessage: 'Send'\n  },\n  detailsTxTypeVote: {\n    id: 'tx-details-expansion-panel.details-txtype-vote',\n    description: 'Tx details transaction type vote value',\n    defaultMessage: 'Vote'\n  },\n  detailsTxTypePassphrase: {\n    id: 'tx-details-expansion-panel.details-txtype-passphrase',\n    description: 'Tx details transaction type passphrase value',\n    defaultMessage: '2nd passphrase'\n  },\n  detailsTxTypeDelegate: {\n    id: 'tx-details-expansion-panel.details-txtype-delegate',\n    description: 'Tx details transaction type delegate value',\n    defaultMessage: 'Delegate registration'\n  },\n  detailsTxTypeUnknown: {\n    id: 'tx-details-expansion-panel.details-txtype-unknown',\n    description: 'Tx details transaction type unknown value',\n    defaultMessage: 'Unknown'\n  },\n  detailsAddressAlias: {\n    id: 'tx-details-expansion-panel.details-address-alias-format',\n    description: 'Tx details address with alias format',\n    defaultMessage: '{alias} ({address})'\n  },\n  detailsAddress: {\n    id: 'tx-details-expansion-panel.details-address-format',\n    description: 'Tx details address without alias format',\n    defaultMessage: '{address}'\n  },\n  detailsSenderLabel: {\n    id: 'tx-details-expansion-panel.details-sender-label',\n    description: 'Tx details sender row label',\n    defaultMessage: 'Sender:'\n  },\n  detailsSenderCopyTooltip: {\n    id: 'tx-details-expansion-panel.details-sender-copy-tooltip',\n    description: 'Tx details sender copy tooltip',\n    defaultMessage: 'Copy address'\n  },\n  detailsSenderCopyAria: {\n    id: 'tx-details-expansion-panel.details-sender-copy-aria',\n    description: 'Tx details sender copy aria label',\n    defaultMessage: 'Copy sender address'\n  },\n  detailsSenderAddTooltip: {\n    id: 'tx-details-expansion-panel.details-sender-add-tooltip',\n    description: 'Tx details sender open explorer tooltip',\n    defaultMessage: 'Add contact'\n  },\n  detailsSenderAddAria: {\n    id: 'tx-details-expansion-panel.details-sender-add-aria',\n    description: 'Tx details sender open explorer aria label',\n    defaultMessage: 'Add sender to contacts'\n  },\n  detailsSenderEditTooltip: {\n    id: 'tx-details-expansion-panel.details-sender-edit-tooltip',\n    description: 'Tx details sender open explorer tooltip',\n    defaultMessage: 'Edit contact'\n  },\n  detailsSenderEditAria: {\n    id: 'tx-details-expansion-panel.details-sender-edit-aria',\n    description: 'Tx details sender open explorer aria label',\n    defaultMessage: 'Edit sender contact card'\n  },\n  detailsRecipientLabel: {\n    id: 'tx-details-expansion-panel.details-recipient-label',\n    description: 'Tx details recipient row label',\n    defaultMessage: 'Recipient:'\n  },\n  detailsRecipientCopyTooltip: {\n    id: 'tx-details-expansion-panel.details-recipient-copy-tooltip',\n    description: 'Tx details recipient copy tooltip',\n    defaultMessage: 'Copy address'\n  },\n  detailsRecipientCopyAria: {\n    id: 'tx-details-expansion-panel.details-recipient-copy-aria',\n    description: 'Tx details recipient copy aria label',\n    defaultMessage: 'Copy recipient address'\n  },\n  detailsRecipientAddTooltip: {\n    id: 'tx-details-expansion-panel.details-recipient-add-tooltip',\n    description: 'Tx details recipient open explorer tooltip',\n    defaultMessage: 'Add contact'\n  },\n  detailsRecipientAddAria: {\n    id: 'tx-details-expansion-panel.details-recipient-add-aria',\n    description: 'Tx details recipient open explorer aria label',\n    defaultMessage: 'Add recipient to contacts'\n  },\n  detailsRecipientEditTooltip: {\n    id: 'tx-details-expansion-panel.details-recipient-edit-tooltip',\n    description: 'Tx details recipient open explorer tooltip',\n    defaultMessage: 'Edit contact'\n  },\n  detailsRecipientEditAria: {\n    id: 'tx-details-expansion-panel.details-recipient-edit-aria',\n    description: 'Tx details recipient open explorer aria label',\n    defaultMessage: 'Edit recipient contact card'\n  },\n  detailsSendAmountLabel: {\n    id: 'tx-details-expansion-panel.details-send-amount-label',\n    description: 'Tx details send amount row label',\n    defaultMessage: 'Send amount:'\n  },\n  detailsDelegateUsernameLabel: {\n    id: 'tx-details-expansion-panel.details-delegate-username-label',\n    description: 'Tx details delegate username row label',\n    defaultMessage: 'Registered username:'\n  },\n  detailsVotesAddedLabel: {\n    id: 'tx-details-expansion-panel.details-votes-added-label',\n    description: 'Tx details votes added row label',\n    defaultMessage:\n      '{voteCount, plural,' + '  one {Vote}' + '  other {Votes}' + '} added:'\n  },\n  detailsVotesRemovedLabel: {\n    id: 'tx-details-expansion-panel.details-votes-removed-label',\n    description: 'Tx details votes removed row label',\n    defaultMessage:\n      '{voteCount, plural,' + '  one {Vote}' + '  other {Votes}' + '} removed:'\n  },\n  detailsNetworkFeeLabel: {\n    id: 'tx-details-expansion-panel.details-network-fee-label',\n    description: 'Tx details network fee row label',\n    defaultMessage: 'Network fee:'\n  },\n  detailsReturnFundsLabel: {\n    id: 'tx-details-expansion-panel.details-return-funds-label',\n    description: 'Tx details return funds button label',\n    defaultMessage: 'Return funds'\n  },\n  detailsSendAgainLabel: {\n    id: 'tx-details-expansion-panel.details-send-again-label',\n    description: 'Tx details send again button label',\n    defaultMessage: 'Send again'\n  }\n});\n\nclass TxDetailsExpansionPanel extends React.Component<DecoratedProps> {\n  getSummary() {\n    const { intl, tx } = this.props;\n\n    let summaryShort = '',\n      summaryLong = '';\n    let amount = RawAmount.ZERO;\n\n    const msgStatus = tx.confirmations >= 1 ? '' : 'Unconfirmed';\n\n    if (tx.type === TransactionType.SEND) {\n      const data = tx.isIncoming\n        ? {\n            address: tx.senderId,\n            alias: tx.senderName\n          }\n        : {\n            address: tx.recipientId,\n            alias: tx.recipientName\n          };\n      const msgAction = tx.isIncoming ? 'Receive' : 'Send';\n      const msgAlias = !!data.alias ? 'Alias' : '';\n\n      summaryLong = intl.formatMessage(\n        messages[`summary${msgStatus}${msgAction}${msgAlias}Long`],\n        data\n      );\n      summaryShort = intl.formatMessage(\n        messages[`summary${msgStatus}${msgAction}${msgAlias}Short`],\n        data\n      );\n    } else if (tx.type === TransactionType.SIGNATURE) {\n      summaryLong = intl.formatMessage(\n        messages[`summary${msgStatus}PassphraseLong`]\n      );\n      summaryShort = intl.formatMessage(\n        messages[`summary${msgStatus}PassphraseShort`]\n      );\n    } else if (tx.type === TransactionType.DELEGATE) {\n      const delegate = tx.asset && tx.asset.delegate;\n      const username = delegate ? delegate.username : null;\n      if (username) {\n        const data = {\n          username\n        };\n        summaryLong = intl.formatMessage(\n          messages[`summary${msgStatus}DelegateLong`],\n          data\n        );\n        summaryShort = intl.formatMessage(\n          messages[`summary${msgStatus}DelegateShort`],\n          data\n        );\n      } else {\n        summaryLong = intl.formatMessage(\n          messages[`summary${msgStatus}DelegateGenericLong`]\n        );\n        summaryShort = intl.formatMessage(\n          messages[`summary${msgStatus}DelegateGenericShort`]\n        );\n      }\n    } else if (tx.type === TransactionType.VOTE) {\n      const removedVotes = tx.votes\n        .filter(({ op }) => op === 'remove')\n        .map(({ delegate }) => delegate);\n      const addedVotes = tx.votes\n        .filter(({ op }) => op === 'add')\n        .map(({ delegate }) => delegate);\n\n      if (addedVotes.length > 0) {\n        const data = {\n          address: addedVotes[0].address,\n          username: addedVotes[0].username\n        };\n        summaryLong = intl.formatMessage(\n          messages[`summary${msgStatus}VoteCastLong`],\n          data\n        );\n        summaryShort = intl.formatMessage(\n          messages[`summary${msgStatus}VoteCastShort`],\n          data\n        );\n      } else if (removedVotes.length > 0) {\n        const data = {\n          address: removedVotes[0].address,\n          username: removedVotes[0].username\n        };\n        summaryLong = intl.formatMessage(\n          messages[`summary${msgStatus}VoteRemoveLong`],\n          data\n        );\n        summaryShort = intl.formatMessage(\n          messages[`summary${msgStatus}VoteRemoveShort`],\n          data\n        );\n      } else {\n        summaryLong = intl.formatMessage(\n          messages[`summary${msgStatus}VoteGenericLong`]\n        );\n        summaryShort = intl.formatMessage(\n          messages[`summary${msgStatus}VoteGenericShort`]\n        );\n      }\n    } else {\n      summaryLong = intl.formatMessage(\n        messages[`summary${msgStatus}UnknownLong`]\n      );\n      summaryShort = intl.formatMessage(\n        messages[`summary${msgStatus}UnknownShort`]\n      );\n    }\n\n    // Format amount\n    if (tx.isIncoming) {\n      amount = tx.amount;\n    } else {\n      amount = RawAmount.ZERO.minus(tx.amountFee);\n    }\n    let amountSign = '';\n    if (amount.gt(RawAmount.ZERO)) {\n      amountSign = '+';\n    }\n    let amountShort = amountSign + formatAmount(intl, amount, false);\n    let amountLong = `${amountShort} RISE`;\n\n    return { summaryShort, summaryLong, amount, amountLong, amountShort };\n  }\n\n  render() {\n    const {\n      intl,\n      classes,\n      tx,\n      explorerUrl,\n      getSendLinkProps,\n      expanded,\n      onExpand\n    } = this.props;\n\n    const {\n      summaryShort,\n      summaryLong,\n      amount,\n      amountLong,\n      amountShort\n    } = this.getSummary();\n\n    const timestamp = moment\n      .utc(tx.timestamp)\n      .local()\n      .toDate();\n\n    const removedVotes = (tx.votes || [])\n      .filter(({ op }) => op === 'remove')\n      .map(({ delegate }) => delegate);\n    const addedVotes = (tx.votes || [])\n      .filter(({ op }) => op === 'add')\n      .map(({ delegate }) => delegate);\n\n    // shortcuts\n    const fmt = intl.formatMessage.bind(intl);\n    const msg = messages;\n\n    return (\n      <ExpansionPanel\n        expanded={expanded}\n        onChange={(ch, isExpanded) => {\n          if (onExpand) {\n            onExpand(tx.id, isExpanded);\n          }\n        }}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          classes={{\n            root: classes.summaryRoot,\n            content: classes.summaryContent,\n            expanded: classes.expanded,\n            expandIcon: classes.summaryExpandIcon\n          }}\n        >\n          <Typography\n            className={classNames(classes.summarySummary, classes.longText)}\n          >\n            {summaryLong}\n          </Typography>\n          <Typography\n            className={classNames(classes.summarySummary, classes.shortText)}\n            aria-label={summaryLong}\n          >\n            {/* Use the long summary instead of short one for screen readers */}\n            <span aria-hidden={true}>{summaryShort}</span>\n          </Typography>\n          <div>\n            <Typography\n              className={classNames(classes.summaryAmount, classes.longText, {\n                [classes.summaryIncomingAmount]: amount.gt(RawAmount.ZERO)\n              })}\n            >\n              {amountLong}\n            </Typography>\n            <Typography\n              className={classNames(classes.summaryAmount, classes.shortText, {\n                [classes.summaryIncomingAmount]: amount.gt(RawAmount.ZERO)\n              })}\n              aria-label={amountLong}\n            >\n              {/* Use the long summary instead of short one for screen readers */}\n              <span aria-hidden={true}>{amountShort}</span>\n            </Typography>\n          </div>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails\n          classes={{\n            root: classes.detailsRoot\n          }}\n        >\n          {/* STATUS */}\n          <Typography className={classes.detailsRow}>\n            <span\n              className={classes.detailsRowLabel}\n              children={fmt(msg.detailsStatusLabel)}\n            />\n            <span className={classes.detailsRowValue}>\n              {tx.confirmations >= 101 ? (\n                <Tooltip title={fmt(msg.detailsStatusSettledTooltip)}>\n                  <span children={fmt(msg.detailsStatusSettled)} />\n                </Tooltip>\n              ) : tx.confirmations >= 1 ? (\n                <Tooltip title={fmt(msg.detailsStatusUnsettledTooltip)}>\n                  <span\n                    children={fmt(msg.detailsStatusUnsettled, {\n                      confirmations: tx.confirmations,\n                      needed: 101\n                    })}\n                  />\n                </Tooltip>\n              ) : (\n                <Tooltip title={fmt(msg.detailsStatusUnconfirmedTooltip)}>\n                  <span children={fmt(msg.detailsStatusUnconfirmed)} />\n                </Tooltip>\n              )}\n            </span>\n            <span className={classes.detailsRowActions} />\n          </Typography>\n          {/* TIMESTAMP */}\n          <Typography className={classes.detailsRow}>\n            <span\n              className={classes.detailsRowLabel}\n              children={fmt(msg.detailsTimestampLabel)}\n            />\n            <time\n              className={classes.detailsRowValue}\n              dateTime={timestamp.toISOString()}\n            >\n              {`${intl.formatDate(timestamp)} ${intl.formatTime(timestamp)}`}\n            </time>\n            <span className={classes.detailsRowActions} />\n          </Typography>\n          {/* TX ID */}\n          <Typography className={classes.detailsRow}>\n            <span\n              className={classes.detailsRowLabel}\n              children={fmt(msg.detailsTxIdLabel)}\n            />\n            <span className={classes.detailsRowValue} children={tx.id} />\n            <span className={classes.detailsRowActions}>\n              <Tooltip title={fmt(msg.detailsTxIdCopyTooltip)}>\n                <IconButton\n                  className={classes.detailsRowAction}\n                  aria-label={fmt(msg.detailsTxIdCopyAria)}\n                  onClick={this.handleCopyTxId}\n                >\n                  <ContentCopyIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={fmt(msg.detailsTxIdExplorerTooltip)}>\n                <IconButton\n                  className={classes.detailsRowAction}\n                  component=\"a\"\n                  href={`${explorerUrl}/tx/${tx.id}`}\n                  target=\"_blank\"\n                  aria-label={fmt(msg.detailsTxIdExplorerAria)}\n                >\n                  <LinkIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </span>\n          </Typography>\n          {/* BLOCK ID */}\n          {tx.confirmations >= 1 && (\n            <Typography className={classes.detailsRow}>\n              <span\n                className={classes.detailsRowLabel}\n                children={fmt(msg.detailsBlockIdLabel)}\n              />\n              <span className={classes.detailsRowValue} children={tx.blockId} />\n              <span className={classes.detailsRowActions}>\n                <Tooltip title={fmt(msg.detailsBlockIdCopyTooltip)}>\n                  <IconButton\n                    className={classes.detailsRowAction}\n                    aria-label={fmt(msg.detailsBlockIdCopyAria)}\n                    onClick={this.handleCopyBlockId}\n                  >\n                    <ContentCopyIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title={fmt(msg.detailsBlockIdExplorerTooltip)}>\n                  <IconButton\n                    className={classes.detailsRowAction}\n                    component=\"a\"\n                    href={`${explorerUrl}/block/${tx.blockId}`}\n                    target=\"_blank\"\n                    aria-label={fmt(msg.detailsBlockIdExplorerAria)}\n                  >\n                    <LinkIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </span>\n            </Typography>\n          )}\n          {/* TYPE */}\n          <Typography className={classes.detailsRow}>\n            <span\n              className={classes.detailsRowLabel}\n              children={fmt(msg.detailsTxTypeLabel)}\n            />\n            <span\n              className={classes.detailsRowValue}\n              children={fmt(\n                tx.type === TransactionType.SEND\n                  ? msg.detailsTxTypeSend\n                  : tx.type === TransactionType.VOTE\n                    ? msg.detailsTxTypeVote\n                    : tx.type === TransactionType.SIGNATURE\n                      ? msg.detailsTxTypePassphrase\n                      : tx.type === TransactionType.DELEGATE\n                        ? msg.detailsTxTypeDelegate\n                        : msg.detailsTxTypeUnknown\n              )}\n            />\n            <span className={classes.detailsRowActions} />\n          </Typography>\n          {/* SENDER */}\n          {tx.type === TransactionType.SEND &&\n            this.renderContact(\n              tx.senderId,\n              tx.senderName,\n              true,\n              !tx.isIncoming\n            )}\n          {/* RECIPIENT */}\n          {tx.type === TransactionType.SEND &&\n            this.renderContact(\n              tx.recipientId!,\n              tx.recipientName,\n              false,\n              tx.isIncoming\n            )}\n          {/* SEND INFO (AMOUNT) */}\n          {tx.type === TransactionType.SEND && (\n            <Typography className={classes.detailsRow}>\n              <span\n                className={classes.detailsRowLabel}\n                children={fmt(msg.detailsSendAmountLabel)}\n              />\n              <span className={classes.detailsRowValue}>\n                {formatAmount(intl, tx.amount)}\n              </span>\n              <span className={classes.detailsRowActions} />\n            </Typography>\n          )}\n          {/* DELEGATE INFO */}\n          {tx.type === TransactionType.DELEGATE && (\n            <Typography className={classes.detailsRow}>\n              <span\n                className={classes.detailsRowLabel}\n                children={fmt(msg.detailsDelegateUsernameLabel)}\n              />\n              <span\n                className={classes.detailsRowValue}\n                children={tx.asset.delegate ? tx.asset.delegate.username : ''}\n              />\n              <span className={classes.detailsRowActions} />\n            </Typography>\n          )}\n          {/* VOTE INFO */}\n          {removedVotes.length > 0 && (\n            <Typography className={classes.detailsRow}>\n              <span\n                className={classes.detailsRowLabel}\n                children={fmt(msg.detailsVotesRemovedLabel, {\n                  voteCount: removedVotes.length\n                })}\n              />\n              <span\n                className={classes.detailsRowValue}\n                children={removedVotes\n                  .map(d => d.username)\n                  .reduce(\n                    (a, u) => a.concat(a.length ? ', ' : null, u),\n                    [] as Array<null | string>\n                  )}\n              />\n              <span className={classes.detailsRowActions} />\n            </Typography>\n          )}\n          {/* VOTE INFO */}\n          {addedVotes.length > 0 && (\n            <Typography className={classes.detailsRow}>\n              <span\n                className={classes.detailsRowLabel}\n                children={fmt(msg.detailsVotesAddedLabel, {\n                  voteCount: addedVotes.length\n                })}\n              />\n              <span\n                className={classes.detailsRowValue}\n                children={addedVotes\n                  .map(d => d.username)\n                  .reduce(\n                    (a, u) => a.concat(a.length ? ', ' : null, u),\n                    [] as Array<null | string>\n                  )}\n              />\n              <span className={classes.detailsRowActions} />\n            </Typography>\n          )}\n          {/* FEE */}\n          <Typography className={classes.detailsRow}>\n            <span\n              className={classes.detailsRowLabel}\n              children={fmt(msg.detailsNetworkFeeLabel)}\n            />\n            <span className={classes.detailsRowValue}>\n              {formatAmount(intl, tx.fee)}\n            </span>\n            <span className={classes.detailsRowActions} />\n          </Typography>\n        </ExpansionPanelDetails>\n        {/* BUTTONS */}\n        <ExpansionPanelActions>\n          {tx.type === TransactionType.SEND &&\n            tx.isIncoming && (\n              <Link {...getSendLinkProps(tx.senderId, tx.amount)}>\n                <Button\n                  size=\"small\"\n                  children={fmt(msg.detailsReturnFundsLabel)}\n                />\n              </Link>\n            )}\n          {tx.type === TransactionType.SEND &&\n            !tx.isIncoming && (\n              <Link {...getSendLinkProps(tx.recipientId!, tx.amount)}>\n                <Button\n                  size=\"small\"\n                  children={fmt(msg.detailsSendAgainLabel)}\n                />\n              </Link>\n            )}\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    );\n  }\n\n  handleCopyTxId = () => {\n    const { tx } = this.props;\n    copyToClipboard(tx.id);\n  }\n\n  handleCopyBlockId = () => {\n    const { tx } = this.props;\n    copyToClipboard(tx.blockId);\n  }\n\n  /**\n   * Renders a contact entry, linked to the name edit dialog.\n   *\n   * @param id\n   * @param name\n   * @param sender This contact initiated the transaction.\n   * @param ownAccount\n   */\n  renderContact(\n    id: string,\n    name: string | null,\n    sender: boolean,\n    ownAccount: boolean\n  ) {\n    const { intl, classes, handleContactEdit } = this.props;\n\n    // shortcuts\n    const fmt = intl.formatMessage.bind(intl);\n    const msg = messages;\n\n    const ContactIcon = name ? PersonIcon : PersonAddIcon;\n\n    return (\n      <Typography className={classes.detailsRow}>\n        <span\n          className={classes.detailsRowLabel}\n          children={fmt(\n            sender ? msg.detailsSenderLabel : msg.detailsRecipientLabel\n          )}\n        />\n        <span\n          className={classes.detailsRowValue}\n          children={fmt(name ? msg.detailsAddressAlias : msg.detailsAddress, {\n            alias: name,\n            address: id\n          })}\n        />\n        <span className={classes.detailsRowActions}>\n          <Tooltip title={fmt(msg.detailsSenderCopyTooltip)}>\n            <IconButton\n              className={classes.detailsRowAction}\n              aria-label={fmt(msg.detailsSenderCopyAria)}\n              onClick={() => copyToClipboard(id)}\n            >\n              <ContentCopyIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip\n            title={fmt(\n              sender\n                ? name\n                  ? msg.detailsSenderEditTooltip\n                  : msg.detailsSenderAddTooltip\n                : name\n                  ? msg.detailsRecipientEditTooltip\n                  : msg.detailsRecipientAddTooltip\n            )}\n          >\n            <IconButton\n              className={classes.detailsRowAction}\n              aria-label={fmt(\n                sender\n                  ? name\n                    ? msg.detailsSenderEditAria\n                    : msg.detailsSenderAddAria\n                  : name\n                    ? msg.detailsRecipientEditAria\n                    : msg.detailsRecipientAddAria\n              )}\n              onClick={() => handleContactEdit(id)}\n            >\n              <ContactIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n        </span>\n      </Typography>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(TxDetailsExpansionPanel));\n","import AccountStore from './account';\nimport AddressBookStore from './addressBook';\nimport LangStore from './lang';\nimport LedgerStore from './ledger';\nimport OnboardingStore from './onboarding';\nimport RootStore from './root';\nimport RouterStore from './router';\nimport WalletStore from './wallet';\n\nexport type TConfig = {\n  api_url: string;\n  api_url_testnet: string;\n  api_url_devnet: string;\n  domain: string;\n  explorer_url: string;\n  date_format: string;\n  fiat_currencies: string[];\n  max_drawer_accounts: number;\n  // seconds\n  suggested_delegates_cache_sec: number;\n};\n\nexport type TStores = {\n  store: RootStore;\n  langStore: LangStore;\n  onboardingStore: OnboardingStore;\n  walletStore: WalletStore;\n  routerStore: RouterStore;\n  accountStore?: AccountStore;\n  addressBookStore: AddressBookStore;\n  ledgerStore: LedgerStore;\n};\n\n/**\n * Dynamic store for the currently selected account.\n * @param stores\n */\nexport function accountStore(stores: TStores) {\n  return {\n    accountStore: stores.walletStore.selectedAccount\n  };\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n// @inheritedComponent Modal\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport chainPropTypes from '../utils/chainPropTypes';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none'\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 48,\n    position: 'relative',\n    overflowY: 'auto' // Fix IE 11 issue, to remove at some point.\n\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    flex: '0 1 auto',\n    maxHeight: 'calc(100% - 96px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    margin: '48px auto'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 360),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 360) + 48 * 2)]: {\n        margin: 48\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 48 * 2)]: {\n        margin: 48\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 48 * 2)]: {\n        margin: 48\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 48 * 2)]: {\n        margin: 48\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 48 * 2)]: {\n        margin: 48\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: '100%'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0\n    }\n  }\n});\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nclass Dialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleBackdropClick = event => {\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      if (this.props.onBackdropClick) {\n        this.props.onBackdropClick(event);\n      }\n\n      if (!this.props.disableBackdropClick && this.props.onClose) {\n        this.props.onClose(event, 'backdropClick');\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      BackdropProps,\n      children,\n      classes,\n      className,\n      disableBackdropClick,\n      disableEscapeKeyDown,\n      fullScreen,\n      fullWidth,\n      maxWidth,\n      onBackdropClick,\n      onClose,\n      onEnter,\n      onEntered,\n      onEntering,\n      onEscapeKeyDown,\n      onExit,\n      onExited,\n      onExiting,\n      open,\n      PaperComponent,\n      PaperProps,\n      scroll,\n      TransitionComponent,\n      transitionDuration,\n      TransitionProps\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n    return React.createElement(Modal, _extends({\n      className: classNames(classes.root, className),\n      BackdropProps: _extends({\n        transitionDuration\n      }, BackdropProps),\n      disableBackdropClick: disableBackdropClick,\n      disableEscapeKeyDown: disableEscapeKeyDown,\n      onBackdropClick: onBackdropClick,\n      onEscapeKeyDown: onEscapeKeyDown,\n      onClose: onClose,\n      open: open,\n      role: \"dialog\"\n    }, other), React.createElement(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited\n    }, TransitionProps), React.createElement(\"div\", {\n      className: classNames(classes.container, classes[`scroll${capitalize(scroll)}`]),\n      onClick: this.handleBackdropClick,\n      role: \"document\"\n    }, React.createElement(PaperComponent, _extends({\n      elevation: 24,\n      className: classNames(classes.paper, classes[`paperScroll${capitalize(scroll)}`], {\n        [classes[`paperWidth${maxWidth ? capitalize(maxWidth) : ''}`]]: maxWidth,\n        [classes.paperFullScreen]: fullScreen,\n        [classes.paperFullWidth]: fullWidth\n      })\n    }, PaperProps), children))));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max width of the dialog.\n   * The dialog width grows with the size of the screen, this property is useful\n   * on the desktop where you might need some coherent different width size across your\n   * application. Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: componentPropType,\n\n  /**\n   * Properties applied to the [`Paper`](/api/paper/) element.\n   * If you want to add a class to the `Paper` component use\n   * `classes.paper` in the `Dialog` props instead.\n   */\n  PaperProps: chainPropTypes(PropTypes.object, props => {\n    const {\n      PaperProps = {}\n    } = props;\n\n    if ('className' in PaperProps) {\n      return new Error('Material-UI: `className` overrides all `Dialog` specific styles in `Paper`. ' + 'If you wanted to add ' + 'styles to the `Paper` component use `classes.paper` in the `Dialog` props ' + `instead.${process.env.NODE_ENV === 'test' ? Date.now() : ''}`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: componentPropType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Properties applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nDialog.defaultProps = {\n  disableBackdropClick: false,\n  disableEscapeKeyDown: false,\n  fullScreen: false,\n  fullWidth: false,\n  maxWidth: 'sm',\n  PaperComponent: Paper,\n  scroll: 'paper',\n  TransitionComponent: Fade,\n  transitionDuration: {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  }\n};\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","export { default } from './Dialog';","import MuiDialog from '@material-ui/core/es/Dialog';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport { inject, observer } from 'mobx-react';\nimport React, { ReactElement } from 'react';\nimport RouterStore, { RouteLink } from '../stores/router';\nimport autoId from '../utils/autoId';\nimport { PropsOf } from '../utils/metaTypes';\nimport ModalPaperHeader from './ModalPaperHeader';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'block',\n      marginTop: 20,\n      marginBottom: 20,\n      marginLeft: 10,\n      marginRight: 10,\n      maxWidth: 500,\n      // TODO required for ios\n      ...(window.innerWidth > 500 ? { overflowY: 'initial' } : null)\n    }\n  });\n\ntype BaseProps = PropsOf<typeof MuiDialog> & WithStyles<typeof styles>;\n\ninterface Props extends BaseProps {\n  onClose?: (ev?: React.SyntheticEvent<{}>) => void;\n  onCloseRoute?: RouteLink;\n  onNavigateBack?: (ev?: React.SyntheticEvent<{}>) => void;\n  navigateBackLink?: RouteLink;\n  children: ReactElement<DialogContentProps>;\n}\n\ninterface PropsInjected extends Props {\n  routerStore: RouterStore;\n}\n\ninterface State {\n  title: string | JSX.Element;\n  childContentId: null | string;\n}\n\nconst stylesDecorator = withStyles(styles);\n\n@inject('routerStore')\n@observer\nclass Dialog extends React.Component<Props, State> {\n  @autoId dialogTitleId: string;\n  @autoId dialogContentId: string;\n\n  state = {\n    title: '',\n    childContentId: null\n  };\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  setDialogContent = (dc: DialogContent) => {\n    this.setState({\n      title: dc.title,\n      childContentId: dc.contentId || null\n    });\n  }\n\n  handleCloseDialog = (ev: React.SyntheticEvent<{}>) => {\n    const { onClose, onCloseRoute, routerStore } = this.injected;\n\n    if (onClose) {\n      // @ts-ignore\n      const tagName = ev.currentTarget.tagName;\n      const isButton =\n        tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n      // @ts-ignore\n      if (onClose(ev) === true && !isButton) {\n        // close interrupted, see ICloseInterruptController\n        ev.preventDefault();\n        ev.stopPropagation();\n        // TODO show \"form changed, close with the close or submit button\" msg\n        return;\n      }\n    }\n\n    if (onCloseRoute) {\n      routerStore.navigateTo(onCloseRoute);\n    }\n    return false;\n  }\n\n  render() {\n    const {\n      classes,\n      onClose,\n      onCloseRoute,\n      onNavigateBack,\n      navigateBackLink,\n      children,\n      ...others\n    } = this.injected;\n    const { title, childContentId } = this.state;\n\n    return (\n      <MuiDialog\n        aria-labelledby={this.dialogTitleId}\n        aria-describedby={childContentId || this.dialogContentId}\n        onClose={onClose || onCloseRoute ? this.handleCloseDialog : undefined}\n        classes={{\n          paper: classes.paper\n        }}\n        maxWidth={false}\n        {...others}\n      >\n        <ModalPaperHeader\n          closeLink={onCloseRoute}\n          onCloseClick={onClose}\n          backLink={navigateBackLink}\n          onBackClick={onNavigateBack}\n          children={title}\n        />\n        <div\n          id={this.dialogContentId}\n          key={children.key !== null ? children.key : undefined}\n        >\n          {/* TODO comment needed */}\n          {React.cloneElement(children, {\n            setDialogContent: this.setDialogContent\n          })}\n        </div>\n      </MuiDialog>\n    );\n  }\n}\n\nexport default stylesDecorator(Dialog);\n\nexport interface DialogContentProps {\n  setDialogContent?: (value: DialogContent) => void;\n}\n\nexport interface DialogContent {\n  title: string | JSX.Element;\n  contentId?: null | string;\n}\n\nexport function SetDialogContent(\n  component: React.Component<DialogContentProps>,\n  content: DialogContent\n) {\n  const { setDialogContent } = component.props;\n\n  if (setDialogContent) {\n    setDialogContent(content);\n  }\n}\n\nexport interface ICloseInterruptController {\n  handleFormChanged(changed: boolean): void;\n  handleClose(ev: React.SyntheticEvent<{}>): boolean;\n}\n\nexport interface ICloseInterruptControllerState {\n  formChanged?: boolean;\n}\n\nexport interface ICloseInterruptFormProps {\n  onFormChanged(changed: boolean): void;\n}\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'AccountNameDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'account-name-dialog-content.dialog-title',\n    description: 'Account name dialog title',\n    defaultMessage: 'Update Account Name'\n  },\n  instructions: {\n    id: 'account-name-dialog-content.instructions',\n    description: 'Instructions before the account name input field',\n    defaultMessage:\n      'Assign a new name to account {address}. ' +\n      'This name will only be visible to you and nobody else.'\n  },\n  nameField: {\n    id: 'account-name-dialog-content.name-input-label',\n    description: 'Account name text field label',\n    defaultMessage: 'Account name'\n  },\n  updateButton: {\n    id: 'account-name-dialog-content.update-button-label',\n    description: 'Update account name button label',\n    defaultMessage: 'Update name'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  account: {\n    name: string;\n    address: string;\n  };\n  onSubmit(account: { address: string; name: string }): void;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  name: string;\n}\n\nclass AccountNameDialogContent extends React.Component<DecoratedProps, State> {\n  @autoId dialogContentId: string;\n\n  state = {\n    name: ''\n  };\n\n  constructor(props: DecoratedProps) {\n    super(props);\n\n    const { account } = this.props;\n    this.state.name = account.name;\n  }\n\n  handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const name = ev.target.value;\n    this.props.onFormChanged(this.state.name !== this.props.account.name);\n    this.setState({ name });\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { onSubmit, account } = this.props;\n    const { name } = this.state;\n    onSubmit({\n      address: account.address,\n      name: name.trim()\n    });\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, account } = this.props;\n\n    const { name } = this.state;\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography\n            id={this.dialogContentId}\n            children={intl.formatMessage(messages.instructions, {\n              address: account.address\n            })}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            label={intl.formatMessage(messages.nameField)}\n            autoFocus={true}\n            value={name}\n            onChange={this.handleNameChange}\n            fullWidth={true}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button\n            type=\"submit\"\n            fullWidth={true}\n            children={intl.formatMessage(messages.updateButton)}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AccountNameDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport AccountNameDialogContent from '../../components/content/AccountNameDialogContent';\nimport Dialog, {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport { accountSettingsNameRoute } from '../../routes';\nimport AccountStore from '../../stores/account';\nimport RouterStore, { RouteLink } from '../../stores/router';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n}\n\ninterface State extends ICloseInterruptControllerState {}\n\n@inject('routerStore')\n@observer\nclass AccountNameDialog extends React.Component<Props>\n  implements ICloseInterruptController {\n  state: State = {\n    formChanged: false\n  };\n\n  protected get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleSubmit = (data: { name: string }) => {\n    const { account, navigateBackLink, routerStore } = this.injected;\n    account.name = data.name;\n    routerStore.navigateTo(navigateBackLink);\n  };\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    return Boolean(this.state.formChanged);\n  };\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  };\n\n  render() {\n    const { account, navigateBackLink, routerStore, open } = this.injected;\n\n    const isOpen = open || routerStore.currentView === accountSettingsNameRoute;\n\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={this.handleClose}\n      >\n        <AccountNameDialogContent\n          onFormChanged={this.handleFormChanged}\n          account={{\n            name: account.name,\n            address: account.id\n          }}\n          onSubmit={this.handleSubmit}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default AccountNameDialog;\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport { normalizeAddress } from '../../utils/utils';\nimport AccountIcon from '../AccountIcon';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    accountContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    addressField: {\n      flex: 1\n    },\n    accountIcon: {\n      marginLeft: 10\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'CreateContactDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'create-contact-dialog-content.dialog-title',\n    description: 'Create contact dialog title',\n    defaultMessage: 'New contact'\n  },\n  instructions: {\n    id: 'create-contact-dialog-content.instructions',\n    description: 'Instructions before the create contact fields',\n    defaultMessage:\n      'Add a new contact to your address book. ' +\n      'This info will only be visible to you and nobody else.'\n  },\n  nameField: {\n    id: 'create-contact-dialog-content.name-input-label',\n    description: 'Contact name text field label',\n    defaultMessage: 'Contact name'\n  },\n  invalidName: {\n    id: 'create-contact-dialog-content.invalid-name',\n    description: 'Error label for invalid name text input',\n    defaultMessage: 'Contact name cannot be empty.'\n  },\n  addressField: {\n    id: 'create-contact-dialog-content.address-input-label',\n    description: 'Contact address text field label',\n    defaultMessage: 'Address'\n  },\n  invalidAddress: {\n    id: 'create-contact-dialog-content.invalid-address',\n    description: 'Error label for invalid address text input',\n    defaultMessage: 'Invalid RISE address.'\n  },\n  invalidAddressExists: {\n    id: 'create-contact-dialog-content.invalid-address-exists',\n    description: 'Error label for invalid address text input',\n    defaultMessage: 'A contact with that address already exists.'\n  },\n  createButton: {\n    id: 'create-contact-dialog-content.create-button-label',\n    description: 'Create contact button label',\n    defaultMessage: 'Create'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  checkAddressExists?: (address: string) => boolean;\n  onSubmit: (data: TSubmitData) => void;\n  address?: string;\n}\n\nexport type TSubmitData = { address: string; name: string };\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  name: string;\n  nameNormalized: string;\n  nameInvalid: boolean;\n  address: string;\n  addressNormalized: string;\n  addressInvalid: boolean;\n}\n\nclass CreateContactDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  state = {\n    name: '',\n    nameNormalized: '',\n    nameInvalid: false,\n    address: '',\n    addressNormalized: '',\n    addressInvalid: false\n  };\n\n  formHasChanges(name: string, address: string): boolean {\n    return Boolean(name || address !== this.props.address);\n  }\n\n  handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const name = ev.target.value;\n    this.setState({\n      name,\n      nameNormalized: name.trim(),\n      nameInvalid: false\n    });\n    this.props.onFormChanged(this.formHasChanges(name, this.state.address));\n  };\n\n  handleNameBlur = () => {\n    const { name } = this.state;\n    const nameInvalid = !!name && !!this.nameError();\n    this.setState({ nameInvalid });\n  };\n\n  handleAddressChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const address = ev.target.value;\n    this.setState({\n      address,\n      addressNormalized: normalizeAddress(address.trim()),\n      addressInvalid: false\n    });\n    this.props.onFormChanged(this.formHasChanges(this.state.name, address));\n  };\n\n  handleAddressBlur = () => {\n    const { address } = this.state;\n    const addressInvalid = !!address && !!this.addressError();\n    this.setState({ addressInvalid });\n  };\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { address } = this.props;\n\n    const nameInvalid = !!this.nameError();\n    const addressInvalid = !address && Boolean(this.addressError());\n\n    if (nameInvalid || addressInvalid) {\n      this.setState({\n        nameInvalid,\n        addressInvalid\n      });\n      return;\n    }\n\n    const { onSubmit } = this.props;\n    const { nameNormalized, addressNormalized } = this.state;\n    onSubmit({\n      address: address || addressNormalized,\n      name: nameNormalized\n    });\n  };\n\n  nameError(): string | null {\n    const { intl } = this.props;\n    const { nameNormalized } = this.state;\n\n    if (nameNormalized === '') {\n      return intl.formatMessage(messages.invalidName);\n    } else {\n      return null;\n    }\n  }\n\n  addressError(): string | null {\n    const { intl, checkAddressExists } = this.props;\n    const { addressNormalized } = this.state;\n\n    if (addressNormalized === '') {\n      return intl.formatMessage(messages.invalidAddress);\n    } else if (checkAddressExists && checkAddressExists(addressNormalized)) {\n      return intl.formatMessage(messages.invalidAddressExists);\n    } else {\n      return null;\n    }\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, address: addressOverride } = this.props;\n\n    const {\n      name,\n      nameInvalid,\n      address,\n      addressNormalized,\n      addressInvalid\n    } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography\n            id={this.dialogContentId}\n            children={intl.formatMessage(messages.instructions)}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            label={intl.formatMessage(messages.nameField)}\n            autoFocus={true}\n            value={name}\n            onChange={this.handleNameChange}\n            onBlur={this.handleNameBlur}\n            error={nameInvalid}\n            FormHelperTextProps={{\n              error: nameInvalid\n            }}\n            helperText={nameInvalid ? this.nameError() || '' : ''}\n            fullWidth={true}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <div className={classes.accountContainer}>\n            <TextField\n              className={classes.addressField}\n              label={intl.formatMessage(messages.addressField)}\n              value={addressOverride || address}\n              disabled={!!addressOverride}\n              onChange={this.handleAddressChange}\n              onBlur={this.handleAddressBlur}\n              error={addressInvalid}\n              FormHelperTextProps={{\n                error: addressInvalid\n              }}\n              helperText={addressInvalid ? this.addressError() || '' : ''}\n              fullWidth={true}\n            />\n            <AccountIcon\n              className={classes.accountIcon}\n              size={48}\n              address={addressOverride || addressNormalized}\n            />\n          </div>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button\n            type=\"submit\"\n            fullWidth={true}\n            children={intl.formatMessage(messages.createButton)}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(CreateContactDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport CreateContactDialogContent, { TSubmitData } from '../../components/content/CreateContactDialogContent';\nimport Dialog, {\n  ICloseInterruptControllerState,\n  ICloseInterruptController\n} from '../../components/Dialog';\nimport { addressBookCreateRoute } from '../../routes';\nimport AddressBookStore from '../../stores/addressBook';\nimport RouterStore, { RouteLink } from '../../stores/router';\n\ninterface Props {\n  address?: string;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n  addressBookStore: AddressBookStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  formChanged: boolean;\n}\n\n@inject('routerStore')\n@inject('addressBookStore')\n@observer\nclass CreateContactDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  // TODO move to state\n  address?: string;\n  state: State = {\n    formChanged: false\n  };\n\n  private get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleCreate = (data: TSubmitData) => {\n    const { navigateBackLink, routerStore, addressBookStore } = this.injected;\n    addressBookStore.setContact(data.address, data.name);\n    routerStore.navigateTo(navigateBackLink);\n  }\n\n  checkAddressExists = (address: string): boolean => {\n    return this.injected.addressBookStore.contacts.has(address);\n  }\n\n  handleClose = (ev: React.KeyboardEvent) => {\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n    return false;\n  }\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  }\n\n  render() {\n    const { navigateBackLink, routerStore, open } = this.injected;\n\n    const isOpen = open || routerStore.currentView === addressBookCreateRoute;\n    if (isOpen) {\n      this.address = this.injected.address;\n    }\n\n    // TODO required to keep the proper context, see #235\n    const onClose = this.handleClose.bind(this);\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={onClose}\n      >\n        <CreateContactDialogContent\n          onFormChanged={this.handleFormChanged}\n          checkAddressExists={this.checkAddressExists}\n          address={this.address || undefined}\n          onSubmit={this.handleCreate}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default CreateContactDialog;\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    accountContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    addressField: {\n      flex: 1\n    },\n    accountIcon: {\n      marginLeft: 10\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'ModifyContactDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'modify-contact-dialog-content.dialog-title',\n    description: 'Modify contact dialog title',\n    defaultMessage: 'Modify contact'\n  },\n  instructions: {\n    id: 'modify-contact-dialog-content.instructions',\n    description: 'Instructions before the modify contact fields',\n    defaultMessage:\n      'Contact name for {address}. This info will only be visible ' +\n      'to you and nobody else.'\n  },\n  nameField: {\n    id: 'modify-contact-dialog-content.name-input-label',\n    description: 'Contact name text field label',\n    defaultMessage: 'Contact name'\n  },\n  invalidName: {\n    id: 'modify-contact-dialog-content.invalid-name',\n    description: 'Error label for invalid name text input',\n    defaultMessage: 'Contact name cannot be empty.'\n  },\n  modifyButton: {\n    id: 'modify-contact-dialog-content.modify-button-label',\n    description: 'Modify contact button label',\n    defaultMessage: 'Modify'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  onSubmit: (data: TSubmitData) => void;\n  address: string;\n  name: string;\n}\n\nexport type TSubmitData = { address: string; name: string };\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  name: string;\n  nameNormalized: string;\n  nameInvalid: boolean;\n}\n\nclass ModifyContactDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  state = {\n    name: '',\n    nameNormalized: '',\n    nameInvalid: false\n  };\n\n  constructor(props: DecoratedProps) {\n    super(props);\n    if (props.name) {\n      this.state.name = props.name;\n      this.state.nameNormalized = props.name;\n    }\n  }\n\n  handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const name = ev.target.value;\n    this.setState({\n      name,\n      nameNormalized: name.trim(),\n      nameInvalid: false\n    });\n    this.props.onFormChanged(Boolean(name !== this.props.name));\n  }\n\n  handleNameBlur = () => {\n    const { name } = this.state;\n    const nameInvalid = !!name && !!this.nameError();\n    this.setState({ nameInvalid });\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { address } = this.props;\n\n    const nameInvalid = !!this.nameError();\n\n    if (nameInvalid) {\n      this.setState({\n        nameInvalid\n      });\n      return;\n    }\n\n    const { onSubmit } = this.props;\n    const { nameNormalized } = this.state;\n    onSubmit({\n      address,\n      name: nameNormalized\n    });\n  }\n\n  nameError(): string | null {\n    const { intl } = this.props;\n    const { nameNormalized } = this.state;\n\n    if (nameNormalized === '') {\n      return intl.formatMessage(messages.invalidName);\n    } else {\n      return null;\n    }\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, address } = this.props;\n\n    const { name, nameInvalid } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography\n            id={this.dialogContentId}\n            children={intl.formatMessage(messages.instructions, { address })}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            label={intl.formatMessage(messages.nameField)}\n            autoFocus={true}\n            value={name}\n            onChange={this.handleNameChange}\n            onBlur={this.handleNameBlur}\n            error={nameInvalid}\n            FormHelperTextProps={{\n              error: nameInvalid\n            }}\n            helperText={nameInvalid ? this.nameError() || '' : ''}\n            fullWidth={true}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button\n            type=\"submit\"\n            fullWidth={true}\n            children={intl.formatMessage(messages.modifyButton)}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(ModifyContactDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport ModifyContactDialogContent, { TSubmitData } from '../../components/content/ModifyContactDialogContent';\nimport Dialog, {\n  ICloseInterruptControllerState,\n  ICloseInterruptController\n} from '../../components/Dialog';\nimport { addressBookModifyRoute } from '../../routes';\nimport AddressBookStore from '../../stores/addressBook';\nimport RouterStore, { RouteLink } from '../../stores/router';\n\ninterface Props {\n  navigateBackLink: RouteLink;\n  address?: string;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n  addressBookStore: AddressBookStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  formChanged: boolean;\n}\n\n@inject('store')\n@inject('routerStore')\n@inject('addressBookStore')\n@observer\nexport default class ModifyContactDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  // TODO move to state?\n  address?: string;\n  name?: string;\n\n  state: State = {\n    formChanged: false\n  };\n\n  private get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleEdit = (data: TSubmitData) => {\n    const { navigateBackLink, routerStore, addressBookStore } = this.injected;\n    addressBookStore.setContact(data.address, data.name);\n    routerStore.navigateTo(navigateBackLink);\n  }\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n    return false;\n  }\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  }\n\n  render() {\n    const {\n      navigateBackLink,\n      routerStore,\n      addressBookStore,\n      open\n    } = this.injected;\n\n    const isOpen = open || routerStore.currentView === addressBookModifyRoute;\n    if (isOpen) {\n      // Cache the data locally to prevent content changes when closing the dialog\n      this.address = this.injected.address || routerStore.params.id;\n      this.name = addressBookStore.contacts.get(this.address);\n    }\n\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={this.handleClose}\n      >\n        <ModifyContactDialogContent\n          onFormChanged={this.handleFormChanged}\n          address={this.address || ''}\n          name={this.name || ''}\n          onSubmit={this.handleEdit}\n        />\n      </Dialog>\n    );\n  }\n}\n","function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import computeScrollIntoView from 'compute-scroll-into-view';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isForwardRef } from 'react-is';\n\n// istanbul ignore next\nvar statusDiv = typeof document === 'undefined' ? null : document.getElementById('a11y-status-message');\nvar statuses = [];\n/**\n * @param {String} status the status message\n */\n\nfunction setStatus(status) {\n  var isSameAsLast = statuses[statuses.length - 1] === status;\n\n  if (isSameAsLast) {\n    statuses = statuses.concat([status]);\n  } else {\n    statuses = [status];\n  }\n\n  var div = getStatusDiv(); // Remove previous children\n\n  while (div.lastChild) {\n    div.removeChild(div.firstChild);\n  }\n\n  statuses.filter(Boolean).forEach(function (statusItem, index) {\n    div.appendChild(getStatusChildDiv(statusItem, index));\n  });\n}\n/**\n * @param {String} status the status message\n * @param {Number} index the index\n * @return {HTMLElement} the child node\n */\n\n\nfunction getStatusChildDiv(status, index) {\n  var display = index === statuses.length - 1 ? 'block' : 'none';\n  var childDiv = document.createElement('div');\n  childDiv.style.display = display;\n  childDiv.textContent = status;\n  return childDiv;\n}\n/**\n * Get the status node or create it if it does not already exist\n * @return {HTMLElement} the status node\n */\n\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = document.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'assertive');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  document.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 7;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 8;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 9;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 10;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 11;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 12;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 13;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 14;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} rootNode the root element of the component\n */\n\n\nfunction scrollIntoView(node, rootNode) {\n  if (node === null) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: rootNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child) {\n  return parent === child || parent.contains && parent.contains(child);\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n/**\n * This return a function that will call all the given functions with\n * the arguments with which it's called. It does a null-check before\n * attempting to call the functions and can take any number of functions.\n * @param {...Function} fns the functions to call\n * @return {Function} the function that calls all the functions\n */\n\n\nfunction callAll() {\n  for (var _len4 = arguments.length, fns = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  return function () {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    fns.forEach(function (fn) {\n      if (fn) {\n        fn.apply(void 0, args);\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage(_ref2) {\n  var isOpen = _ref2.isOpen,\n      highlightedItem = _ref2.highlightedItem,\n      selectedItem = _ref2.selectedItem,\n      resultCount = _ref2.resultCount,\n      previousResultCount = _ref2.previousResultCount,\n      itemToString = _ref2.itemToString;\n\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem);\n    } else {\n      return '';\n    }\n  }\n\n  if (!resultCount) {\n    return 'No results.';\n  } else if (!highlightedItem || resultCount !== previousResultCount) {\n    return resultCount + \" \" + (resultCount === 1 ? 'result is' : 'results are') + \" available, use up and down arrow keys to navigate.\";\n  }\n\n  return itemToString(highlightedItem);\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n  // then we assume this is react\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nvar Downshift =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Downshift, _Component);\n\n  function Downshift(_props) {\n    var _this = _Component.call(this, _props) || this;\n\n    _this.id = _this.props.id || \"downshift-\" + generateId();\n    _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n    _this.labelId = _this.props.labelId || _this.id + \"-label\";\n    _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n    _this.getItemId = _this.props.getItemId || function (index) {\n      return _this.id + \"-item-\" + index;\n    };\n\n    _this.input = null;\n    _this.items = [];\n    _this.itemCount = null;\n    _this.previousResultCount = 0;\n    _this.timeoutIds = [];\n\n    _this.internalSetTimeout = function (fn, time) {\n      var id = setTimeout(function () {\n        _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n          return i !== id;\n        });\n        fn();\n      }, time);\n\n      _this.timeoutIds.push(id);\n    };\n\n    _this.setItemCount = function (count) {\n      _this.itemCount = count;\n    };\n\n    _this.unsetItemCount = function () {\n      _this.itemCount = null;\n    };\n\n    _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n      if (highlightedIndex === void 0) {\n        highlightedIndex = _this.props.defaultHighlightedIndex;\n      }\n\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(_extends({\n        highlightedIndex: highlightedIndex\n      }, otherStateToSet));\n    };\n\n    _this.clearSelection = function (cb) {\n      _this.internalSetState({\n        selectedItem: null,\n        inputValue: '',\n        highlightedIndex: _this.props.defaultHighlightedIndex,\n        isOpen: _this.props.defaultIsOpen\n      }, cb);\n    };\n\n    _this.selectItem = function (item, otherStateToSet, cb) {\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(_extends({\n        isOpen: _this.props.defaultIsOpen,\n        highlightedIndex: _this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue: _this.props.itemToString(item)\n      }, otherStateToSet), cb);\n    };\n\n    _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n      var item = _this.items[itemIndex];\n\n      if (item == null) {\n        return;\n      }\n\n      _this.selectItem(item, otherStateToSet, cb);\n    };\n\n    _this.selectHighlightedItem = function (otherStateToSet, cb) {\n      return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n    };\n\n    _this.internalSetState = function (stateToSet, cb) {\n      var isItemSelected, onChangeArg;\n      var onStateChangeArg = {};\n      var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n      // so someone controlling the `inputValue` state gets notified of\n      // the input change as soon as possible. This avoids issues with\n      // preserving the cursor position.\n      // See https://github.com/paypal/downshift/issues/217 for more info.\n\n      if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n        _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), stateToSet));\n      }\n\n      return _this.setState(function (state) {\n        state = _this.getState(state);\n        var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n        newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n\n        isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n        var nextState = {}; // this is just used to tell whether the state changed\n\n        var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n\n        if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n          onChangeArg = newStateToSet.selectedItem;\n        }\n\n        newStateToSet.type = newStateToSet.type || unknown;\n        Object.keys(newStateToSet).forEach(function (key) {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== newStateToSet[key]) {\n            onStateChangeArg[key] = newStateToSet[key];\n          } // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n\n\n          if (key === 'type') {\n            return;\n          }\n\n          nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n          if (!_this.isControlledProp(key)) {\n            nextState[key] = newStateToSet[key];\n          }\n        }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n\n        if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), newStateToSet));\n        }\n\n        return nextState;\n      }, function () {\n        // call the provided callback if it's a function\n        cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n\n        var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n        if (hasMoreStateThanType) {\n          _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n        }\n\n        if (isItemSelected) {\n          _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n        }\n\n        if (onChangeArg !== undefined) {\n          _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n        } // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n\n\n        _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n      });\n    };\n\n    _this.rootRef = function (node) {\n      return _this._rootNode = node;\n    };\n\n    _this.getRootProps = function (_temp, _temp2) {\n      var _extends2;\n\n      var _ref = _temp === void 0 ? {} : _temp,\n          _ref$refKey = _ref.refKey,\n          refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"refKey\"]);\n\n      var _ref2 = _temp2 === void 0 ? {} : _temp2,\n          _ref2$suppressRefErro = _ref2.suppressRefError,\n          suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n      // this is used in the render to know whether the user has called getRootProps.\n      // It uses that to know whether to apply the props automatically\n      _this.getRootProps.called = true;\n      _this.getRootProps.refKey = refKey;\n      _this.getRootProps.suppressRefError = suppressRefError;\n\n      var _this$getState = _this.getState(),\n          isOpen = _this$getState.isOpen;\n\n      return _extends((_extends2 = {}, _extends2[refKey] = _this.rootRef, _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n    };\n\n    _this.keyDownHandlers = {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var amount = event.shiftKey ? 5 : 1;\n        this.moveHighlightedIndex(amount, {\n          type: keyDownArrowDown\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var amount = event.shiftKey ? -5 : -1;\n        this.moveHighlightedIndex(amount, {\n          type: keyDownArrowUp\n        });\n      },\n      Enter: function Enter(event) {\n        var _this$getState2 = this.getState(),\n            isOpen = _this$getState2.isOpen,\n            highlightedIndex = _this$getState2.highlightedIndex;\n\n        if (isOpen && highlightedIndex != null) {\n          event.preventDefault();\n          event.stopPropagation();\n          var item = this.items[highlightedIndex];\n          var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n          if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n            return;\n          }\n\n          this.selectHighlightedItem({\n            type: keyDownEnter\n          });\n        }\n      },\n      Escape: function Escape(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.reset({\n          type: keyDownEscape\n        });\n      }\n    };\n    _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n      ' ': function _(event) {\n        event.preventDefault();\n        this.toggleMenu({\n          type: keyDownSpaceButton\n        });\n      }\n    });\n\n    _this.getToggleButtonProps = function (_temp3) {\n      var _ref3 = _temp3 === void 0 ? {} : _temp3,\n          onClick = _ref3.onClick,\n          onPress = _ref3.onPress,\n          onKeyDown = _ref3.onKeyDown,\n          onKeyUp = _ref3.onKeyUp,\n          onBlur = _ref3.onBlur,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"]);\n\n      var _this$getState3 = _this.getState(),\n          isOpen = _this$getState3.isOpen;\n\n      var enabledEventHandlers = {\n        onClick: callAllEventHandlers(onClick, _this.button_handleClick),\n        onKeyDown: callAllEventHandlers(onKeyDown, _this.button_handleKeyDown),\n        onKeyUp: callAllEventHandlers(onKeyUp, _this.button_handleKeyUp),\n        onBlur: callAllEventHandlers(onBlur, _this.button_handleBlur)\n      };\n      var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n      return _extends({\n        type: 'button',\n        role: 'button',\n        'aria-label': isOpen ? 'close menu' : 'open menu',\n        'aria-haspopup': true,\n        'data-toggle': true\n      }, eventHandlers, rest);\n    };\n\n    _this.button_handleKeyUp = function (event) {\n      // Prevent click event from emitting in Firefox\n      event.preventDefault();\n    };\n\n    _this.button_handleKeyDown = function (event) {\n      var key = normalizeArrowKey(event);\n\n      if (_this.buttonKeyDownHandlers[key]) {\n        _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_assertThisInitialized(_this)), event);\n      }\n    };\n\n    _this.button_handleClick = function (event) {\n      event.preventDefault(); // handle odd case for Safari and Firefox which\n      // don't give the button the focus properly.\n\n      /* istanbul ignore if (can't reasonably test this) */\n\n      if (_this.props.environment.document.activeElement === _this.props.environment.document.body) {\n        event.target.focus();\n      } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n      // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n      // when building for production and should therefore have no impact on production code.\n\n\n      if (process.env.NODE_ENV === 'test') {\n        _this.toggleMenu({\n          type: clickButton\n        });\n      } else {\n        // Ensure that toggle of menu occurs after the potential blur event in iOS\n        _this.internalSetTimeout(function () {\n          return _this.toggleMenu({\n            type: clickButton\n          });\n        });\n      }\n    };\n\n    _this.button_handleBlur = function (event) {\n      var blurTarget = event.target; // Save blur target for comparison with activeElement later\n      // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n      _this.internalSetTimeout(function () {\n        if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n        ) {\n            _this.reset({\n              type: blurButton\n            });\n          }\n      });\n    };\n\n    _this.getLabelProps = function (props) {\n      return _extends({\n        htmlFor: _this.inputId,\n        id: _this.labelId\n      }, props);\n    };\n\n    _this.getInputProps = function (_temp4) {\n      var _ref4 = _temp4 === void 0 ? {} : _temp4,\n          onKeyDown = _ref4.onKeyDown,\n          onBlur = _ref4.onBlur,\n          onChange = _ref4.onChange,\n          onInput = _ref4.onInput,\n          onChangeText = _ref4.onChangeText,\n          rest = _objectWithoutPropertiesLoose(_ref4, [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"]);\n\n      var onChangeKey;\n      var eventHandlers = {};\n      /* istanbul ignore next (preact) */\n\n      onChangeKey = 'onChange';\n\n      var _this$getState4 = _this.getState(),\n          inputValue = _this$getState4.inputValue,\n          isOpen = _this$getState4.isOpen,\n          highlightedIndex = _this$getState4.highlightedIndex;\n\n      if (!rest.disabled) {\n        var _eventHandlers;\n\n        eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.input_handleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.input_handleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.input_handleBlur), _eventHandlers);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      return _extends({\n        'aria-autocomplete': 'list',\n        'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n        'aria-controls': isOpen ? _this.menuId : null,\n        'aria-labelledby': _this.labelId,\n        // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n        // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n        autoComplete: 'off',\n        value: inputValue,\n        id: _this.inputId\n      }, eventHandlers, rest);\n    };\n\n    _this.input_handleKeyDown = function (event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && _this.keyDownHandlers[key]) {\n        _this.keyDownHandlers[key].call(_assertThisInitialized(_assertThisInitialized(_this)), event);\n      }\n    };\n\n    _this.input_handleChange = function (event) {\n      _this.internalSetState({\n        type: changeInput,\n        isOpen: true,\n        inputValue: event.target.value\n      });\n    };\n\n    _this.input_handleTextChange\n    /* istanbul ignore next (react-native) */\n    = function (text) {\n      _this.internalSetState({\n        type: changeInput,\n        isOpen: true,\n        inputValue: text\n      });\n    };\n\n    _this.input_handleBlur = function () {\n      // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n      _this.internalSetTimeout(function () {\n        var downshiftButtonIsActive = _this.props.environment.document && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n        if (!_this.isMouseDown && !downshiftButtonIsActive) {\n          _this.reset({\n            type: blurInput\n          });\n        }\n      });\n    };\n\n    _this.menuRef = function (node) {\n      _this._menuNode = node;\n    };\n\n    _this.getMenuProps = function (_temp5, _temp6) {\n      var _extends3;\n\n      var _ref5 = _temp5 === void 0 ? {} : _temp5,\n          _ref5$refKey = _ref5.refKey,\n          refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n          ref = _ref5.ref,\n          props = _objectWithoutPropertiesLoose(_ref5, [\"refKey\", \"ref\"]);\n\n      var _ref6 = _temp6 === void 0 ? {} : _temp6,\n          _ref6$suppressRefErro = _ref6.suppressRefError,\n          suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n\n      _this.getMenuProps.called = true;\n      _this.getMenuProps.refKey = refKey;\n      _this.getMenuProps.suppressRefError = suppressRefError;\n      return _extends((_extends3 = {}, _extends3[refKey] = callAll(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n    };\n\n    _this.getItemProps = function (_temp7) {\n      var _enabledEventHandlers;\n\n      var _ref7 = _temp7 === void 0 ? {} : _temp7,\n          onMouseMove = _ref7.onMouseMove,\n          onMouseDown = _ref7.onMouseDown,\n          onClick = _ref7.onClick,\n          onPress = _ref7.onPress,\n          index = _ref7.index,\n          _ref7$item = _ref7.item,\n          item = _ref7$item === void 0 ? process.env.NODE_ENV === 'production' ?\n      /* istanbul ignore next */\n      undefined : requiredProp('getItemProps', 'item') : _ref7$item,\n          rest = _objectWithoutPropertiesLoose(_ref7, [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"]);\n\n      if (index === undefined) {\n        _this.items.push(item);\n\n        index = _this.items.indexOf(item);\n      } else {\n        _this.items[index] = item;\n      }\n\n      var onSelectKey = 'onClick';\n      var customClickHandler = onClick;\n      var enabledEventHandlers = (_enabledEventHandlers = {\n        // onMouseMove is used over onMouseEnter here. onMouseMove\n        // is only triggered on actual mouse movement while onMouseEnter\n        // can fire on DOM changes, interrupting keyboard navigation\n        onMouseMove: callAllEventHandlers(onMouseMove, function () {\n          if (index === _this.getState().highlightedIndex) {\n            return;\n          }\n\n          _this.setHighlightedIndex(index, {\n            type: itemMouseEnter\n          }); // We never want to manually scroll when changing state based\n          // on `onMouseMove` because we will be moving the element out\n          // from under the user which is currently scrolling/moving the\n          // cursor\n\n\n          _this.avoidScrolling = true;\n\n          _this.internalSetTimeout(function () {\n            return _this.avoidScrolling = false;\n          }, 250);\n        }),\n        onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n          // This prevents the activeElement from being changed\n          // to the item so it can remain with the current activeElement\n          // which is a more common use case.\n          event.preventDefault();\n        })\n      }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n        _this.selectItemAtIndex(index, {\n          type: clickItem\n        });\n      }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n      // of the activeElement if clicking on disabled items\n\n      var eventHandlers = rest.disabled ? {\n        onMouseDown: enabledEventHandlers.onMouseDown\n      } : enabledEventHandlers;\n      return _extends({\n        id: _this.getItemId(index),\n        role: 'option',\n        'aria-selected': _this.getState().selectedItem === item\n      }, eventHandlers, rest);\n    };\n\n    _this.clearItems = function () {\n      _this.items = [];\n    };\n\n    _this.reset = function (otherStateToSet, cb) {\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(function (_ref8) {\n        var selectedItem = _ref8.selectedItem;\n        return _extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          inputValue: _this.props.itemToString(selectedItem)\n        }, otherStateToSet);\n      }, cb);\n    };\n\n    _this.toggleMenu = function (otherStateToSet, cb) {\n      if (otherStateToSet === void 0) {\n        otherStateToSet = {};\n      }\n\n      otherStateToSet = pickState(otherStateToSet);\n\n      _this.internalSetState(function (_ref9) {\n        var isOpen = _ref9.isOpen;\n        return _extends({\n          isOpen: !isOpen\n        }, otherStateToSet);\n      }, function () {\n        var _this$getState5 = _this.getState(),\n            isOpen = _this$getState5.isOpen;\n\n        if (isOpen) {\n          // highlight default index\n          _this.setHighlightedIndex(undefined, otherStateToSet);\n        }\n\n        cbToCb(cb)();\n      });\n    };\n\n    _this.openMenu = function (cb) {\n      _this.internalSetState({\n        isOpen: true\n      }, cb);\n    };\n\n    _this.closeMenu = function (cb) {\n      _this.internalSetState({\n        isOpen: false\n      }, cb);\n    };\n\n    _this.updateStatus = debounce(function () {\n      var state = _this.getState();\n\n      var item = _this.items[state.highlightedIndex];\n\n      var resultCount = _this.getItemCount();\n\n      var status = _this.props.getA11yStatusMessage(_extends({\n        itemToString: _this.props.itemToString,\n        previousResultCount: _this.previousResultCount,\n        resultCount: resultCount,\n        highlightedItem: item\n      }, state));\n\n      _this.previousResultCount = resultCount;\n      setStatus(status);\n    }, 200);\n\n    // fancy destructuring + defaults + aliases\n    // this basically says each value of state should either be set to\n    // the initial value or the default value if the initial value is not provided\n    var _this$props = _this.props,\n        defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n        _this$props$initialHi = _this$props.initialHighlightedIndex,\n        _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n        defaultIsOpen = _this$props.defaultIsOpen,\n        _this$props$initialIs = _this$props.initialIsOpen,\n        _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n        _this$props$initialIn = _this$props.initialInputValue,\n        _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n        _this$props$initialSe = _this$props.initialSelectedItem,\n        _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n    var _state = _this.getState({\n      highlightedIndex: _highlightedIndex,\n      isOpen: _isOpen,\n      inputValue: _inputValue,\n      selectedItem: _selectedItem\n    });\n\n    if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n      _state.inputValue = _this.props.itemToString(_state.selectedItem);\n    }\n\n    _this.state = _state;\n    return _this;\n  }\n\n  var _proto = Downshift.prototype;\n\n  /**\n   * Clear all running timeouts\n   */\n  _proto.internalClearTimeouts = function internalClearTimeouts() {\n    this.timeoutIds.forEach(function (id) {\n      clearTimeout(id);\n    });\n    this.timeoutIds = [];\n  };\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n\n\n  _proto.getState = function getState(stateToMerge) {\n    var _this2 = this;\n\n    if (stateToMerge === void 0) {\n      stateToMerge = this.state;\n    }\n\n    return Object.keys(stateToMerge).reduce(function (state, key) {\n      state[key] = _this2.isControlledProp(key) ? _this2.props[key] : stateToMerge[key];\n      return state;\n    }, {});\n  };\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n\n\n  _proto.isControlledProp = function isControlledProp(key) {\n    return this.props[key] !== undefined;\n  };\n\n  _proto.getItemCount = function getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    var itemCount = this.items.length;\n\n    if (this.itemCount != null) {\n      itemCount = this.itemCount;\n    } else if (this.props.itemCount !== undefined) {\n      itemCount = this.props.itemCount;\n    }\n\n    return itemCount;\n  };\n\n  _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n    return this.props.environment.document.getElementById(this.getItemId(index));\n  };\n\n  _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n    /* istanbul ignore else (react-native) */\n    {\n      var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n      this.props.scrollIntoView(node, this._rootNode);\n    }\n  };\n\n  _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n    var _this3 = this;\n\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet);\n    } else {\n      this.openMenu(function () {\n        var type = otherStateToSet.type;\n\n        var itemCount = _this3.getItemCount();\n\n        var newHighlightedIndex; // if there are items in the menu and event type is present.\n\n        if (itemCount && type) {\n          // on Arrow Down we highlight first option.\n          if (type === keyDownArrowDown) {\n            newHighlightedIndex = 0;\n          } // on Arrow Up we highlight last option\n\n\n          if (type === keyDownArrowUp) {\n            newHighlightedIndex = itemCount - 1;\n          }\n        }\n\n        _this3.setHighlightedIndex(newHighlightedIndex, _extends({}, otherStateToSet));\n      });\n    }\n  };\n\n  _proto.changeHighlightedIndex = function changeHighlightedIndex(moveAmount, otherStateToSet) {\n    var itemsLastIndex = this.getItemCount() - 1;\n\n    if (itemsLastIndex < 0) {\n      return;\n    }\n\n    var _this$getState6 = this.getState(),\n        highlightedIndex = _this$getState6.highlightedIndex;\n\n    var baseIndex = highlightedIndex;\n\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n    }\n\n    var newIndex = baseIndex + moveAmount;\n\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex;\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0;\n    }\n\n    this.setHighlightedIndex(newIndex, otherStateToSet);\n  };\n\n  _proto.getStateAndHelpers = function getStateAndHelpers() {\n    var _this$getState7 = this.getState(),\n        highlightedIndex = _this$getState7.highlightedIndex,\n        inputValue = _this$getState7.inputValue,\n        selectedItem = _this$getState7.selectedItem,\n        isOpen = _this$getState7.isOpen;\n\n    var itemToString = this.props.itemToString;\n    var id = this.id;\n    var getRootProps = this.getRootProps,\n        getToggleButtonProps = this.getToggleButtonProps,\n        getLabelProps = this.getLabelProps,\n        getMenuProps = this.getMenuProps,\n        getInputProps = this.getInputProps,\n        getItemProps = this.getItemProps,\n        openMenu = this.openMenu,\n        closeMenu = this.closeMenu,\n        toggleMenu = this.toggleMenu,\n        selectItem = this.selectItem,\n        selectItemAtIndex = this.selectItemAtIndex,\n        selectHighlightedItem = this.selectHighlightedItem,\n        setHighlightedIndex = this.setHighlightedIndex,\n        clearSelection = this.clearSelection,\n        clearItems = this.clearItems,\n        reset = this.reset,\n        setItemCount = this.setItemCount,\n        unsetItemCount = this.unsetItemCount,\n        setState = this.internalSetState;\n    return {\n      // prop getters\n      getRootProps: getRootProps,\n      getToggleButtonProps: getToggleButtonProps,\n      getLabelProps: getLabelProps,\n      getMenuProps: getMenuProps,\n      getInputProps: getInputProps,\n      getItemProps: getItemProps,\n      // actions\n      reset: reset,\n      openMenu: openMenu,\n      closeMenu: closeMenu,\n      toggleMenu: toggleMenu,\n      selectItem: selectItem,\n      selectItemAtIndex: selectItemAtIndex,\n      selectHighlightedItem: selectHighlightedItem,\n      setHighlightedIndex: setHighlightedIndex,\n      clearSelection: clearSelection,\n      clearItems: clearItems,\n      setItemCount: setItemCount,\n      unsetItemCount: unsetItemCount,\n      setState: setState,\n      // props\n      itemToString: itemToString,\n      // derived\n      id: id,\n      // state\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      selectedItem: selectedItem\n    };\n  }; //////////////////////////// ROOT\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this4 = this;\n\n    /* istanbul ignore if (react-native) */\n    if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n      validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n    }\n    /* istanbul ignore if (react-native) */\n\n\n    {\n      var targetWithinDownshift = function (target, checkActiveElement) {\n        if (checkActiveElement === void 0) {\n          checkActiveElement = true;\n        }\n\n        var document = _this4.props.environment.document;\n        return [_this4._rootNode, _this4._menuNode].some(function (contextNode) {\n          return contextNode && (isOrContainsNode(contextNode, target) || checkActiveElement && isOrContainsNode(contextNode, document.activeElement));\n        });\n      }; // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n\n\n      var onMouseDown = function () {\n        _this4.isMouseDown = true;\n      };\n\n      var onMouseUp = function (event) {\n        _this4.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n        // then we don't want to reset downshift\n\n        var contextWithinDownshift = targetWithinDownshift(event.target);\n\n        if (!contextWithinDownshift && _this4.getState().isOpen) {\n          _this4.reset({\n            type: mouseUp\n          }, function () {\n            return _this4.props.onOuterClick(_this4.getStateAndHelpers());\n          });\n        }\n      }; // Touching an element in iOS gives focus and hover states, but touching out of\n      // the element will remove hover, and persist the focus state, resulting in the\n      // blur event not being triggered.\n      // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n      // If the user taps outside of Downshift, the component should be reset,\n      // but not if the user is swiping\n\n\n      var onTouchStart = function () {\n        _this4.isTouchMove = false;\n      };\n\n      var onTouchMove = function () {\n        _this4.isTouchMove = true;\n      };\n\n      var onTouchEnd = function (event) {\n        var contextWithinDownshift = targetWithinDownshift(event.target, false);\n\n        if (!_this4.isTouchMove && !contextWithinDownshift && _this4.getState().isOpen) {\n          _this4.reset({\n            type: touchEnd\n          }, function () {\n            return _this4.props.onOuterClick(_this4.getStateAndHelpers());\n          });\n        }\n      };\n\n      this.props.environment.addEventListener('mousedown', onMouseDown);\n      this.props.environment.addEventListener('mouseup', onMouseUp);\n      this.props.environment.addEventListener('touchstart', onTouchStart);\n      this.props.environment.addEventListener('touchmove', onTouchMove);\n      this.props.environment.addEventListener('touchend', onTouchEnd);\n\n      this.cleanup = function () {\n        _this4.internalClearTimeouts();\n\n        _this4.updateStatus.cancel();\n\n        _this4.props.environment.removeEventListener('mousedown', onMouseDown);\n\n        _this4.props.environment.removeEventListener('mouseup', onMouseUp);\n\n        _this4.props.environment.removeEventListener('touchstart', onTouchStart);\n\n        _this4.props.environment.removeEventListener('touchmove', onTouchMove);\n\n        _this4.props.environment.removeEventListener('touchend', onTouchEnd);\n      };\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateControlledUnchanged(prevProps, this.props);\n      /* istanbul ignore if (react-native) */\n\n      if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n    }\n\n    if (this.isControlledProp('selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n      this.internalSetState({\n        type: controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem)\n      });\n    }\n\n    var current = this.props.highlightedIndex === undefined ? this.state : this.props;\n    var prev = prevProps.highlightedIndex === undefined ? prevState : prevProps;\n\n    if (current.highlightedIndex !== prev.highlightedIndex && !this.avoidScrolling) {\n      this.scrollHighlightedItemIntoView();\n    }\n    /* istanbul ignore else (react-native) */\n\n\n    this.updateStatus();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cleanup(); // avoids memory leak\n  };\n\n  _proto.render = function render() {\n    var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n    // we clear this out each render and it will be populated again as\n    // getItemProps is called.\n\n    this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n\n    this.getRootProps.called = false;\n    this.getRootProps.refKey = undefined;\n    this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n    this.getMenuProps.called = false;\n    this.getMenuProps.refKey = undefined;\n    this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n    this.getLabelProps.called = false; // and something similar for getInputProps\n\n    this.getInputProps.called = false;\n    var element = unwrapArray(children(this.getStateAndHelpers()));\n\n    if (!element) {\n      return null;\n    }\n\n    if (this.getRootProps.called || this.props.suppressRefError) {\n      if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n      }\n\n      return element;\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(element, this.getRootProps(getElementProps(element)));\n    }\n    /* istanbul ignore else */\n\n\n    if (process.env.NODE_ENV !== 'production') {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error('downshift: If you return a non-DOM element, you must use apply the getRootProps function');\n    }\n    /* istanbul ignore next */\n\n\n    return undefined;\n  };\n\n  return Downshift;\n}(Component);\n\nDownshift.defaultProps = {\n  defaultHighlightedIndex: null,\n  defaultIsOpen: false,\n  getA11yStatusMessage: getA11yStatusMessage,\n  itemToString: function itemToString(i) {\n    if (i == null) {\n      return '';\n    }\n\n    if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n      // eslint-disable-next-line no-console\n      console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n    }\n\n    return String(i);\n  },\n  onStateChange: noop,\n  onInputValueChange: noop,\n  onUserAction: noop,\n  onChange: noop,\n  onSelect: noop,\n  onOuterClick: noop,\n  selectedItemChanged: function selectedItemChanged(prevItem, item) {\n    return prevItem !== item;\n  },\n  environment: typeof window === 'undefined'\n  /* istanbul ignore next (ssr) */\n  ? {} : window,\n  stateReducer: function stateReducer(state, stateToSet) {\n    return stateToSet;\n  },\n  suppressRefError: false,\n  scrollIntoView: scrollIntoView\n};\nDownshift.stateChangeTypes = stateChangeTypes;\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref10) {\n  var refKey = _ref10.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref11) {\n  var refKey = _ref11.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nfunction validateControlledUnchanged(prevProps, nextProps) {\n  var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/paypal/downshift#control-props\";\n  ['selectedItem', 'isOpen', 'inputValue', 'highlightedIndex'].forEach(function (propKey) {\n    if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n    } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n    }\n  });\n}\n\nexport default Downshift;\nexport { resetIdCounter };\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n// @inheritedComponent ListItem\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.subheading, {\n    height: 24,\n    boxSizing: 'content-box',\n    width: 'auto',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    '&$selected': {}\n  }),\n\n  /* Styles applied to the root element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the root element if `selected={true}`. */\n  selected: {}\n});\n\nfunction MenuItem(props) {\n  const {\n    classes,\n    className,\n    component,\n    disableGutters,\n    role,\n    selected\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\"]);\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: -1,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    className: classNames(classes.root, {\n      [classes.selected]: selected,\n      [classes.gutters]: !disableGutters\n    }, className)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool\n} : void 0;\nMenuItem.defaultProps = {\n  component: 'li',\n  disableGutters: false,\n  role: 'menuitem'\n};\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","export { default } from './MenuItem';","import Avatar from '@material-ui/core/es/Avatar';\nimport ListItemAvatar from '@material-ui/core/es/ListItemAvatar';\nimport ListItemText from '@material-ui/core/es/ListItemText';\nimport MenuItem from '@material-ui/core/es/MenuItem';\nimport Paper from '@material-ui/core/es/Paper';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport classNames from 'classnames';\nimport { PropGetters } from 'downshift';\nimport React from 'react';\nimport { TAddressRecord } from '../utils/utils';\nimport AccountIcon from './AccountIcon';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      top: '100%',\n      left: 0,\n      right: 0\n    },\n    menuItemRoot: {\n      height: 'initial'\n    },\n    accountIcon: {\n      backgroundColor: 'white'\n    },\n    accountName: {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    selected: {\n      fontWeight: 500\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  suggestions: TAddressRecord[];\n  highlightedIndex: number | null;\n  selectedItem: TAddressRecord;\n  getItemProps: PropGetters<TAddressRecord>['getItemProps'];\n}\n\nconst stylesDecorator = withStyles(styles, { name: 'AddressSuggestionsMenu' });\n\nclass AddressSuggestionsMenu extends React.Component<Props> {\n  render() {\n    const { classes, suggestions, getItemProps } = this.props;\n\n    return (\n      <Paper className={classes.root} square={true}>\n        {suggestions.map((item, index) => (\n          <MenuItem\n            key={`${item.source}-${item.id}`}\n            component=\"div\"\n            selected={this.isItemHighlighted(index)}\n            classes={{\n              root: classes.menuItemRoot\n            }}\n            {...getItemProps({ index, item })}\n          >\n            <ListItemText\n              classes={{\n                primary: classNames(\n                  classes.accountName,\n                  this.isItemSelected(item) && classes.selected\n                ),\n                secondary: classNames(\n                  this.isItemSelected(item) && classes.selected\n                )\n              }}\n              primary={item.name}\n              secondary={item.id}\n            />\n            <ListItemAvatar>\n              <Avatar className={classes.accountIcon}>\n                <AccountIcon size={24} address={item.id} />\n              </Avatar>\n            </ListItemAvatar>\n          </MenuItem>\n        ))}\n      </Paper>\n    );\n  }\n\n  private isItemHighlighted(index: number): boolean {\n    const { highlightedIndex } = this.props;\n    return index === highlightedIndex;\n  }\n\n  private isItemSelected(rec: TAddressRecord): boolean {\n    const { selectedItem } = this.props;\n    return selectedItem.id === rec.id && selectedItem.source === rec.source;\n  }\n}\n\nexport default stylesDecorator(AddressSuggestionsMenu);\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport Downshift, { StateChangeOptions } from 'downshift';\nimport { deburr, take } from 'lodash';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport AccountIcon from '../../components/AccountIcon';\nimport AddressSuggestionsMenu from '../../components/AddressSuggestionsMenu';\nimport { RawAmount } from '../../utils/amounts';\nimport autoId from '../../utils/autoId';\nimport {\n  normalizeAddress,\n  normalizeNumber,\n  TAddressRecord,\n  TAddressSource,\n  formatAmount\n} from '../../utils/utils';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    accountContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    recipientField: {\n      flex: 1\n    },\n    accountIcon: {\n      marginLeft: 10\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, { name: 'SendCoinsDialogContent' });\n\nexport interface SendFormState {\n  recipientID: string;\n  amount: RawAmount;\n}\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  onSubmit: (state: SendFormState) => void;\n  amount: RawAmount | null;\n  sendFee: RawAmount;\n  balance: RawAmount;\n  // pre-filled recipient\n  recipientID?: string;\n  recipientName?: string;\n  // all the contacts\n  contacts: TAddressRecord[];\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  recipient: TAddressRecord;\n  recipientInvalid: boolean;\n  normalizedAddress: string;\n  amount: string;\n  amountInvalid: boolean;\n  parsedAmount: RawAmount | null;\n}\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'send-coins-dialog-content.dialog-title',\n    description: 'Send coins dialog title',\n    defaultMessage: 'Send RISE'\n  },\n  invalidAddress: {\n    id: 'send-coins-dialog-content.invalid-address',\n    description: 'Error label for invalid address text input',\n    defaultMessage:\n      'Invalid RISE address.'\n  },\n  invalidAmount: {\n    id: 'send-coins-dialog-content.invalid-amount',\n    description: 'Error label for invalid amount text input',\n    defaultMessage: 'Invalid amount.'\n  },\n  insufficientBalance: {\n    id: 'send-coins-dialog-content.insufficient-balance',\n    description: 'Error label for too high amount text input',\n    defaultMessage: 'This amount exceeds your account balance.'\n  },\n  recipientFromAddressBook: {\n    id: 'send-coins-dialog-content.recipient-from-address-book',\n    description: 'Info label for recipient field when filled via suggestions',\n    defaultMessage: 'Address for {name} (from your address book)'\n  },\n  recipientFromWallet: {\n    id: 'send-coins-dialog-content.recipient-from-wallet',\n    description: 'Info label for recipient field when filled via suggestions',\n    defaultMessage: 'Address for {name} (from your wallet)'\n  },\n  recipientIsDelegate: {\n    id: 'send-coins-dialog-content.recipient-is-delegate',\n    description: 'Info label for recipient field when filled via suggestions',\n    defaultMessage: 'Address for {name} (a registered delegate)'\n  }\n});\n\nclass SendCoinsDialogContent extends React.Component<DecoratedProps, State> {\n  @autoId dialogContentId: string;\n\n  state: State = {\n    recipient: {\n      id: '',\n      name: '',\n      source: TAddressSource.INPUT\n    },\n    recipientInvalid: false,\n    normalizedAddress: '',\n    amount: '',\n    amountInvalid: false,\n    parsedAmount: null\n  };\n\n  constructor(props: DecoratedProps) {\n    super(props);\n\n    const { intl, recipientID, recipientName, amount } = this.props;\n\n    if (recipientID) {\n      this.state.recipient = {\n        id: recipientID,\n        name: recipientName || '',\n        source: TAddressSource.PREFILLED\n      };\n      this.state.normalizedAddress = normalizeAddress(recipientID);\n    }\n    if (amount) {\n      this.state.amount = formatAmount(intl, amount, false);\n      this.state.parsedAmount = amount;\n    }\n  }\n\n  handleRecipientStateChange = (\n    options: StateChangeOptions<TAddressRecord>\n  ) => {\n    const { type, inputValue } = options;\n    if (type === Downshift.stateChangeTypes.changeInput && inputValue) {\n      // Handle user typing\n      const normalizedAddress = normalizeAddress(inputValue.trim());\n\n      this.setState({\n        recipient: {\n          id: inputValue,\n          // TODO get the name from contacts\n          name: '',\n          source: TAddressSource.INPUT\n        },\n        recipientInvalid: false,\n        normalizedAddress\n      });\n    } else if (type === Downshift.stateChangeTypes.blurInput) {\n      // Handle user leaving the input\n      const { id } = this.state.recipient;\n      const recipientInvalid = !!id && !!this.recipientError();\n      this.setState({ recipientInvalid });\n    }\n  }\n\n  handleRecipientChange = (recipient: TAddressRecord) => {\n    // Handle user selecting a suggestion\n    const normalizedAddress = normalizeAddress(recipient.id.trim());\n\n    this.setState({\n      recipient,\n      recipientInvalid: false,\n      normalizedAddress\n    });\n    this.props.onFormChanged(\n      this.formHasChanges(this.state.amount, recipient.name)\n    );\n  }\n\n  handleAmountChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const { intl } = this.props;\n    const amount = ev.target.value;\n    const normalizedAmount = normalizeNumber(intl, amount.trim());\n\n    let parsedAmount = null;\n    if (normalizedAmount) {\n      parsedAmount = RawAmount.fromUnit(normalizedAmount);\n    }\n\n    this.setState({\n      amount,\n      amountInvalid: normalizedAmount.length < 1,\n      parsedAmount\n    });\n    this.props.onFormChanged(\n      this.formHasChanges(amount, this.state.recipient.name)\n    );\n  }\n\n  formHasChanges(amount: string, recipient: string): boolean {\n    return Boolean(amount || recipient);\n  }\n\n  handleAmountBlur = () => {\n    const amountInvalid = !!this.state.amount && !!this.amountError();\n    const amount = this.state.parsedAmount\n      ? this.state.parsedAmount.unit.toString()\n      : '';\n    this.setState({\n      amountInvalid,\n      amount\n    });\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { normalizedAddress, parsedAmount } = this.state;\n\n    const recipientInvalid = !!this.recipientError();\n    const amountInvalid = !!this.amountError();\n    if (recipientInvalid || amountInvalid) {\n      this.setState({\n        recipientInvalid,\n        amountInvalid\n      });\n      return;\n    }\n\n    this.props.onSubmit({\n      recipientID: normalizedAddress,\n      amount: parsedAmount!\n    });\n  }\n\n  recipientError(): string | null {\n    const { intl } = this.props;\n    const { normalizedAddress } = this.state;\n\n    if (normalizedAddress === '') {\n      return intl.formatMessage(messages.invalidAddress);\n    } else {\n      return null;\n    }\n  }\n\n  amountError(): string | null {\n    const { intl, balance, sendFee } = this.props;\n    const { parsedAmount } = this.state;\n\n    if (parsedAmount === null || parsedAmount.lte(RawAmount.ZERO)) {\n      return intl.formatMessage(messages.invalidAmount);\n    } else if (parsedAmount.plus(sendFee).gt(balance)) {\n      return intl.formatMessage(messages.insufficientBalance);\n    } else {\n      return null;\n    }\n  }\n\n  recipientSummary(rec: TAddressRecord): string {\n    const { intl } = this.props;\n    const source = TAddressSource;\n\n    switch (rec.source) {\n      case source.ADDRESS_BOOK:\n        return intl.formatMessage(messages.recipientFromAddressBook, {\n          name: rec.name\n        });\n      case source.DELEGATE:\n        return intl.formatMessage(messages.recipientIsDelegate, {\n          name: rec.name\n        });\n      case source.WALLET:\n        return intl.formatMessage(messages.recipientFromWallet, {\n          name: rec.name\n        });\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * TODO move to an external component\n   * @param query\n   */\n  getSuggestions(query: string): TAddressRecord[] {\n    // For a valid address don't show suggestions\n    const normalizedAddress = normalizeAddress(query.trim());\n    if (normalizedAddress !== '') {\n      return [];\n    }\n\n    // Run through a very simple scoring algorithm\n    const queryPlain = deburr(query)\n      .toLowerCase()\n      .replace(/\\s/giu, '');\n\n    let suggestions = this.props.contacts;\n\n    if (query.trim().length > 0) {\n      let arr = suggestions\n        .map(data => {\n          const labelPlain = deburr(data.name)\n            .toLowerCase()\n            .replace(/\\s/giu, '');\n\n          let score = 0;\n          if (data.id.startsWith(query)) {\n            score += 2;\n          }\n          if (data.name.trim() === query) {\n            score += 3;\n          } else if (labelPlain.startsWith(queryPlain)) {\n            score += 2;\n          } else if (labelPlain.indexOf(queryPlain) >= 0) {\n            score += 1;\n          }\n\n          return { data, score };\n        })\n        .filter(({ score }) => score > 0);\n\n      // Sort in descending score order\n      arr.sort((a, b) => b.score - a.score);\n\n      suggestions = arr.map(({ data }) => data);\n    }\n\n    // Limit to 5 results per search\n    return take(suggestions, 5);\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes } = this.props;\n    const {\n      recipient,\n      recipientInvalid,\n      normalizedAddress,\n      amount,\n      amountInvalid\n    } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography id={this.dialogContentId}>\n            <FormattedMessage\n              id=\"send-coins-dialog-content.instructions\"\n              description=\"Instructions for Send RISE form\"\n              defaultMessage={\n                'Please enter the recipient address and RISE amount that you ' +\n                'wish to send below.'\n              }\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Downshift\n            itemToString={(rec: TAddressRecord) => rec.id}\n            selectedItem={recipient}\n            onStateChange={this.handleRecipientStateChange}\n            onChange={this.handleRecipientChange}\n          >\n            {({\n              getInputProps,\n              getItemProps,\n              isOpen,\n              inputValue,\n              highlightedIndex\n            }) => (\n              <div className={classes.accountContainer}>\n                <TextField\n                  autoFocus={true}\n                  className={classes.recipientField}\n                  label={\n                    <FormattedMessage\n                      id=\"send-coins-dialog-content.recipient-input-label\"\n                      description=\"Label for recipient address text field.\"\n                      defaultMessage=\"Recipient address\"\n                    />\n                  }\n                  InputProps={getInputProps()}\n                  fullWidth={true}\n                  error={recipientInvalid}\n                  FormHelperTextProps={{\n                    error: recipientInvalid\n                  }}\n                  helperText={\n                    recipientInvalid\n                      ? this.recipientError() || ''\n                      : this.recipientSummary(recipient)\n                  }\n                />\n                {isOpen && (\n                  <AddressSuggestionsMenu\n                    suggestions={this.getSuggestions(inputValue || '')}\n                    highlightedIndex={highlightedIndex}\n                    selectedItem={recipient}\n                    getItemProps={getItemProps}\n                  />\n                )}\n                <AccountIcon\n                  className={classes.accountIcon}\n                  size={48}\n                  address={normalizedAddress}\n                />\n              </div>\n            )}\n          </Downshift>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            label={\n              <FormattedMessage\n                id=\"send-coins-dialog-content.amount-input-label\"\n                description=\"Label for amount text field.\"\n                defaultMessage=\"RISE amount\"\n              />\n            }\n            value={amount}\n            fullWidth={true}\n            error={amountInvalid}\n            FormHelperTextProps={{\n              error: amountInvalid\n            }}\n            helperText={amountInvalid ? this.amountError() || '' : ''}\n            onChange={this.handleAmountChange}\n            onBlur={this.handleAmountBlur}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Typography>\n            <FormattedMessage\n              id=\"send-coins-dialog-content.balance-fee\"\n              description=\"Account balance & network fee label\"\n              defaultMessage=\"Balance: {balance} | Fee: {fee}\"\n              values={{\n                balance: formatAmount(intl, this.props.balance),\n                fee: formatAmount(intl, this.props.sendFee)\n              }}\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button type=\"submit\" fullWidth={true}>\n            <FormattedMessage\n              id=\"send-coins-dialog-content.send-button\"\n              description=\"Send button label\"\n              defaultMessage=\"Review & send\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(SendCoinsDialogContent));\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport { Rise } from 'dpos-offline';\nimport React, { FormEvent } from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport {\n  AccountIDVersion,\n  NetworkTXType,\n  derivePublicKey\n} from '../utils/utils';\nimport AccountTip from './AccountTip';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2,\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      textAlign: 'center',\n      '&:first-child': {\n        paddingTop: theme.spacing.unit * 2\n      },\n      '&:last-child': {\n        paddingBottom: theme.spacing.unit * 2\n      }\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'ConfirmTxEnterSecretsFooter'\n});\n\nconst messages = defineMessages({\n  invalidMnemonicMissing: {\n    id: 'confirm-tx-enter-secrets-footer.invalid-mnemonic-missing',\n    description: 'Error label for an invalid mnemonic (missing)',\n    defaultMessage:\n      'Missing secret. Please enter the mnemonic secret for your account.'\n  },\n  invalidMnemonicIncorrect: {\n    id: 'confirm-tx-enter-secrets-footer.invalid-mnemonic-incorrect',\n    description: 'Error label for an invalid mnemonic',\n    defaultMessage:\n      'Incorrect secret. The secret you entered is not associated with this account.'\n  },\n  invalidMnemonicNoWords: {\n    id: 'confirm-tx-enter-secrets-footer.invalid-mnemonic-no-words',\n    description: 'Error label for an invalid mnemonic (no words)',\n    defaultMessage:\n      'Incorrect secret. The mnemonic usually consists of 12 words separated with spaces.'\n  },\n  invalidPassphraseMissing: {\n    id: 'confirm-tx-enter-secrets-footer.invalid-passphrase-missing',\n    description: 'Error label for an invalid passphrase',\n    defaultMessage:\n      'Missing passphrase. Please enter the passphrase for your account.'\n  },\n  invalidPassphraseIncorrect: {\n    id: 'confirm-tx-enter-secrets-footer.invalid-passphrase-incorrect',\n    description: 'Error label for an invalid passphrase',\n    defaultMessage:\n      'Incorrect passphrase. The passphrase you entered is not associated with this account.'\n  },\n  mnemonicOK: {\n    id: 'confirm-tx-enter-secrets-footer.mnemonic-ok',\n    description: 'Info about auto-accepted mnemonic',\n    defaultMessage: 'Entered mnemonic is correct'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles>;\n\ninterface Props extends BaseProps {\n  address: string;\n  addressVersion: AccountIDVersion;\n  networkType: NetworkTXType;\n  publicKey: string | null;\n  secondPublicKey: string | null;\n  onConfirm: (data: { mnemonic: string; passphrase: null | string }) => void;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  mnemonic: string;\n  mnemonicInvalid: boolean;\n  passphrase: string;\n  passphraseInvalid: boolean;\n  removeInput1: boolean;\n}\n\nclass ConfirmTxEnterSecretsFooter extends React.Component<\n  DecoratedProps,\n  State\n> {\n  state = {\n    mnemonic: '',\n    mnemonicInvalid: false,\n    passphrase: '',\n    passphraseInvalid: false,\n    removeInput1: false\n  };\n\n  // We rely on ref based access to the input elements here because\n  // iOS safari auto-fill doesn't work too well with regular onChange\n  // and state updates.\n  passphraseRef: HTMLInputElement;\n  mnemonicRef: HTMLInputElement;\n\n  handleMnemonicChange = () => {\n    if (!this.mnemonicRef) {\n      return;\n    }\n    const mnemonic = this.mnemonicRef.value;\n    this.setState({\n      mnemonic: mnemonic,\n      mnemonicInvalid: false\n    });\n    this.setState({\n      removeInput1: !this.mnemonicError(mnemonic)\n    });\n  }\n\n  handleMnemonicBlur = () => {\n    const { mnemonic } = this.state;\n    const mnemonicInvalid = !!mnemonic && !!this.mnemonicError();\n    this.setState({ mnemonicInvalid });\n  }\n\n  handlePassphraseChange = () => {\n    if (!this.passphraseRef) {\n      return;\n    }\n    const passphrase = this.passphraseRef.value;\n    this.setState({\n      passphrase,\n      passphraseInvalid: false\n    });\n  }\n\n  handlePassphraseBlur = () => {\n    const { passphrase } = this.state;\n    const passphraseInvalid = !!passphrase && !!this.passphraseError();\n    this.setState({ passphraseInvalid });\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { secondPublicKey, onConfirm } = this.props;\n\n    this.handleMnemonicChange();\n    this.handlePassphraseChange();\n\n    const mnemonicInvalid = !!this.mnemonicError();\n    const passphraseInvalid = !!secondPublicKey && !!this.passphraseError();\n\n    if (mnemonicInvalid || passphraseInvalid) {\n      this.setState({\n        mnemonicInvalid,\n        passphraseInvalid: passphraseInvalid && this.state.removeInput1,\n        removeInput1: !this.mnemonicError()\n      });\n      return;\n    }\n\n    const { mnemonic, passphrase } = this.state;\n    onConfirm({\n      mnemonic,\n      passphrase: secondPublicKey ? passphrase : null\n    });\n  }\n\n  mnemonicError(secret?: string): string | null {\n    const {\n      intl,\n      address,\n      publicKey,\n      networkType,\n      addressVersion\n    } = this.props;\n    const mnemonic = secret || this.state.mnemonic;\n\n    if (!mnemonic.trim()) {\n      return intl.formatMessage(messages.invalidMnemonicMissing);\n    }\n\n    // The derivation takes some CPU cycles, so only do it after the empty check\n    let isValid = false;\n    if (mnemonic) {\n      const derivedKey = derivePublicKey(mnemonic);\n\n      if (publicKey) {\n        // Prefer to validate against the account publicKey\n        isValid = derivedKey === publicKey;\n      } else {\n        // Fallback to comparing addresses instead of public\n        isValid = Rise.calcAddress(derivedKey) === address;\n        isValid =\n          address === Rise.calcAddress(derivedKey, networkType, addressVersion);\n      }\n    }\n\n    if (isValid) {\n      return null;\n    } else if (mnemonic.indexOf(' ') < 0) {\n      return intl.formatMessage(messages.invalidMnemonicNoWords);\n    } else {\n      return intl.formatMessage(messages.invalidMnemonicIncorrect);\n    }\n  }\n\n  passphraseError(): string | null {\n    const { intl, secondPublicKey } = this.props;\n    const { passphrase } = this.state;\n\n    if (!passphrase.trim()) {\n      return intl.formatMessage(messages.invalidPassphraseMissing);\n    }\n\n    // The derivation takes some CPU cycles, so only do it after the empty check\n    let isValid = false;\n    if (passphrase) {\n      const publicKey = derivePublicKey(passphrase);\n      isValid = publicKey === secondPublicKey;\n    }\n\n    if (isValid) {\n      return null;\n    } else {\n      return intl.formatMessage(messages.invalidPassphraseIncorrect);\n    }\n  }\n\n  render() {\n    const { classes, secondPublicKey, intl } = this.props;\n    const {\n      mnemonic,\n      mnemonicInvalid,\n      passphrase,\n      passphraseInvalid,\n      removeInput1\n    } = this.state;\n    const isPassphraseSet = !!secondPublicKey;\n    const showMnemonicInput = !isPassphraseSet || !removeInput1;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography>\n            {isPassphraseSet ? (\n              <FormattedMessage\n                id=\"confirm-tx-enter-secrets-footer.instructions-with-passphrase\"\n                description=\"Instructions on how to confirm the transaction (with 2nd passphrase set).\"\n                defaultMessage={\n                  'To confirm this transaction, enter your mnemonic secret ' +\n                  'and the 2nd passphrase into the text fields below.'\n                }\n              />\n            ) : (\n              <FormattedMessage\n                id=\"confirm-tx-enter-secrets-footer.instructions\"\n                description=\"Instructions on how to confirm the transaction.\"\n                defaultMessage={\n                  'To confirm this transaction, enter your mnemonic secret ' +\n                  'into the text field below.'\n                }\n              />\n            )}\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          {showMnemonicInput ? (\n            <TextField\n              key=\"mnemonic\"\n              type=\"password\"\n              label={\n                <FormattedMessage\n                  id=\"confirm-tx-enter-secrets-footer.mnemonic-input-label\"\n                  description=\"Label for mnemonic text field.\"\n                  defaultMessage=\"Account mnemonic secret\"\n                />\n              }\n              value={mnemonic}\n              onChange={this.handleMnemonicChange}\n              onBlur={this.handleMnemonicBlur}\n              error={mnemonicInvalid}\n              helperText={mnemonicInvalid ? this.mnemonicError() : ''}\n              autoFocus={true}\n              fullWidth={true}\n              inputRef={ref => (this.mnemonicRef = ref)}\n            />\n          ) : (\n            <>\n              <AccountTip\n                key=\"__mnemonic_ok__\"\n                open={true}\n                message={intl.formatMessage(messages.mnemonicOK)}\n              />\n              <TextField\n                key=\"passphrase\"\n                type=\"password\"\n                label={\n                  <FormattedMessage\n                    id=\"confirm-tx-enter-secrets-footer.passphrase-input-label\"\n                    description=\"Label for 2nd passphrase text field.\"\n                    defaultMessage=\"Second passphrase\"\n                  />\n                }\n                autoFocus={true}\n                value={passphrase}\n                onChange={this.handlePassphraseChange}\n                onBlur={this.handlePassphraseBlur}\n                error={passphraseInvalid}\n                helperText={passphraseInvalid ? this.passphraseError() : ''}\n                fullWidth={true}\n                inputRef={ref => (this.passphraseRef = ref)}\n              />\n            </>\n          )}\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button type=\"submit\" fullWidth={true}>\n            <FormattedMessage\n              id=\"confirm-tx-enter-secrets-footer.sign-button\"\n              description=\"Label for sign & broadcast button.\"\n              defaultMessage=\"Sign & broadcast\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(ConfirmTxEnterSecretsFooter));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n})), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n})), 'ErrorOutline');\n\nexports.default = _default;","import Button from '@material-ui/core/es/Button';\nimport CircularProgress from '@material-ui/core/es/CircularProgress';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport InfoIcon from '@material-ui/icons/Info';\nimport React, { ReactEventHandler } from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2,\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      textAlign: 'center',\n      '&:first-child': {\n        paddingTop: theme.spacing.unit * 2\n      },\n      '&:last-child': {\n        paddingBottom: theme.spacing.unit * 2\n      }\n    },\n    statusContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: 2 * theme.spacing.unit,\n      marginRight: 2 * theme.spacing.unit,\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit,\n      '& > * + *': {\n        marginLeft: 2 * theme.spacing.unit\n      }\n    },\n    statusIcon: {\n      fontSize: 48\n    },\n    statusMessage: {\n      textAlign: 'left'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, { name: 'ConfirmTxStatusFooter' });\n\nconst messages = defineMessages({\n  errorIconAria: {\n    id: 'confirm-tx-status-footer.error-icon-aria',\n    description: 'Error status icon label for accessibility',\n    defaultMessage: 'Error indicator icon'\n  },\n  infoIconAria: {\n    id: 'confirm-tx-status-footer.info-icon-aria',\n    description: 'Info status icon label for accessibility',\n    defaultMessage: 'Info indicator icon'\n  },\n  successIconAria: {\n    id: 'confirm-tx-status-footer.success-icon-aria',\n    description: 'Success status icon label for accessibility',\n    defaultMessage: 'Success indicator icon'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles>;\n\ninterface Props extends BaseProps {\n  type:\n    | 'broadcasting'\n    | 'broadcast-succeeded'\n    | 'broadcast-failed'\n    | 'ledger-not-supported'\n    | 'ledger-not-connected'\n    | 'ledger-another-device'\n    | 'ledger-confirming';\n  onRetry?: ReactEventHandler<{}>;\n  onClose?: ReactEventHandler<{}>;\n  reason?: string;\n  timeout?: number;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nclass ConfirmTxStatusFooter extends React.Component<DecoratedProps> {\n  render() {\n    const {\n      intl,\n      classes,\n      type,\n      reason,\n      timeout,\n      onRetry,\n      onClose\n    } = this.props;\n\n    return (\n      <Grid className={classes.content} container={true} spacing={16}>\n        <Grid item={true} xs={12} className={classes.statusContainer}>\n          {type === 'broadcasting' || type === 'ledger-not-connected' ? (\n            <div>\n              <CircularProgress color=\"primary\" />\n            </div>\n          ) : type === 'broadcast-succeeded' ? (\n            <DoneIcon\n              className={classes.statusIcon}\n              color=\"primary\"\n              aria-label={intl.formatMessage(messages.successIconAria)}\n            />\n          ) : type === 'broadcast-failed' ||\n          type === 'ledger-another-device' ||\n          type === 'ledger-not-supported' ? (\n            <ErrorOutlineIcon\n              className={classes.statusIcon}\n              color=\"error\"\n              aria-label={intl.formatMessage(messages.errorIconAria)}\n            />\n          ) : type === 'ledger-confirming' ? (\n            <InfoIcon\n              className={classes.statusIcon}\n              color=\"inherit\"\n              aria-label={intl.formatMessage(messages.infoIconAria)}\n            />\n          ) : null}\n          <Typography className={classes.statusMessage}>\n            {type === 'broadcasting' ? (\n              <FormattedMessage\n                id=\"confirm-tx-dialog-content.broadcasting-msg\"\n                description=\"Message for when a transaction is being broadcast.\"\n                defaultMessage=\"Broadcasting transaction to the network. Please wait...\"\n              />\n            ) : type === 'broadcast-succeeded' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.success-msg\"\n                description=\"Message for when a transaction broadcast succeeded.\"\n                defaultMessage=\"The transaction was successfully broadcast to the network!\"\n              />\n            ) : type === 'broadcast-failed' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.error-msg\"\n                description=\"Message for when a transaction failed to broadcast.\"\n                defaultMessage={\n                  'Failed to broadcast the transaction to the network: {error}'\n                }\n                values={{\n                  error: reason || 'N/A'\n                }}\n              />\n            ) : type === 'ledger-not-supported' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.ledger-not-supported-msg\"\n                description=\"Message for when the browser doesn't support Ledger.\"\n                defaultMessage=\"Your browser doesn't support interfacing with Ledger devices.\"\n              />\n            ) : type === 'ledger-another-device' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.ledger-another-device-msg\"\n                description=\"Message for when the user has connected the wrong Ledger.\"\n                defaultMessage={\n                  \"The connected Ledger doesn't manage this account. Either you used \" +\n                  'an additional passphrase (in your Ledger) when adding this account ' +\n                  'or you have plugged in a device with a different mnemonic.'\n                }\n              />\n            ) : type === 'ledger-not-connected' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.ledger-not-connected-msg-v2\"\n                description=\"Message for when the Ledger device isn't connected.\"\n                defaultMessage={\n                  'Connect your Ledger, open the RISE app and click Discover Device below.' +\n                  'Waiting for Ledger...'\n                }\n              />\n            ) : type === 'ledger-confirming' ? (\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.ledger-confirming-msg\"\n                description=\"Message for when the user needs to confirm the transaction on Ledger.\"\n                defaultMessage={\n                  'Please confirm the transaction on your Ledger. Waiting for confirmation... ' +\n                  '({seconds} {seconds, plural,' +\n                  '  one {second}' +\n                  '  other {seconds}' +\n                  '} remaining)'\n                }\n                values={{ seconds: timeout || 0 }}\n              />\n            ) : null}\n          </Typography>\n        </Grid>\n        {onRetry && (\n          <Grid item={true} xs={12} sm={onClose ? 6 : 12}>\n            <Button onClick={onRetry} fullWidth={true}>\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.try-again-button\"\n                description=\"Label for try again button.\"\n                defaultMessage=\"Try again\"\n              />\n            </Button>\n          </Grid>\n        )}\n        {onClose && (\n          <Grid item={true} xs={12} sm={onRetry ? 6 : 12}>\n            <Button\n              onClick={onClose}\n              fullWidth={true}\n              buttonRef={ref => {\n                // focus on render\n                if (ref) {\n                  ref.focus();\n                }\n              }}\n            >\n              <FormattedMessage\n                id=\"confirm-tx-status-footer.close-button\"\n                description=\"Label for close button.\"\n                defaultMessage=\"Close\"\n              />\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(ConfirmTxStatusFooter));\n","import Divider from '@material-ui/core/es/Divider';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport classNames from 'classnames';\nimport React from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport { RawAmount } from '../../utils/amounts';\nimport { formatAmount } from '../../utils/utils';\nimport AccountIcon from '../AccountIcon';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2,\n      paddingTop: theme.spacing.unit,\n      paddingBottom: theme.spacing.unit,\n      textAlign: 'center',\n      '&:first-child': {\n        paddingTop: theme.spacing.unit * 2\n      },\n      '&:last-child': {\n        paddingBottom: theme.spacing.unit * 2\n      }\n    },\n    viz: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    vizArrow: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginLeft: 2 * theme.spacing.unit,\n      marginRight: 2 * theme.spacing.unit\n    },\n    vizAmount: {\n      paddingLeft: 16,\n      paddingRight: 16,\n      marginTop: '-1em'\n    },\n    arrow: {\n      position: 'relative',\n      height: 15,\n      width: '100%',\n      maxWidth: 120,\n      '& > *': {\n        borderColor: '#999'\n      },\n      '&$inactive > *': {\n        borderColor: '#eee'\n      }\n    },\n    inactive: {},\n    arrowShaft: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      height: 7,\n      borderBottomWidth: 1,\n      borderBottomStyle: 'solid',\n      boxSizing: 'content-box'\n    },\n    arrowEnd: {\n      position: 'absolute',\n      top: 2,\n      right: 0,\n      width: 10,\n      height: 10,\n      borderTopWidth: 1,\n      borderTopStyle: 'solid',\n      borderRightWidth: 1,\n      borderRightStyle: 'solid',\n      transform: 'rotate(45deg)'\n    },\n    senderInfo: {\n      textAlign: 'left'\n    },\n    recipientInfo: {\n      textAlign: 'right'\n    },\n    accountAlias: {\n      ...theme.typography.body2,\n      fontWeight: 500\n    },\n    accountAddress: {},\n    txDetails: {\n      textAlign: 'left'\n    },\n    txBreakdown: {\n      textAlign: 'right',\n      marginLeft: 'auto',\n      // Display the cost breakdown as a table for easier visual digestion\n      flex: 'none',\n      display: 'table',\n      '& > *': {\n        display: 'table-row',\n        '& > *': {\n          display: 'table-cell',\n          '&:first-child': {\n            paddingRight: theme.spacing.unit\n          }\n        }\n      }\n    },\n    totalAmount: {\n      fontWeight: 500\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'ConfirmTransactionDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'confirm-tx-dialog-content.dialog-title',\n    description: 'Confirm transaction dialog title',\n    defaultMessage: 'Confirm transaction'\n  },\n  unnamedSender: {\n    id: 'confirm-tx-dialog-content.unnamed-sender',\n    description: 'Unnamed sender account',\n    defaultMessage: 'Unnamed account ({id})'\n  },\n  unnamedRecipient: {\n    id: 'confirm-tx-dialog-content.unnamed-recipient',\n    description: 'Unnamed recipient account',\n    defaultMessage: 'Unknown recipient'\n  },\n  sendTxTitleAria: {\n    id: 'confirm-tx-dialog-content.send-title-aria',\n    description: 'Send transaction title for accessibility',\n    defaultMessage: 'Send transaction of {amount}'\n  },\n  passphraseTxTitleAria: {\n    id: 'confirm-tx-dialog-content.passphrase-title-aria',\n    description: '2nd passphrase transaction title for accessibility',\n    defaultMessage: 'Setup 2nd passphrase transaction'\n  },\n  delegateTxTitleAria: {\n    id: 'confirm-tx-dialog-content.delegate-title-aria',\n    description: 'Register as delegate transaction title for accessibility',\n    defaultMessage: 'Register as a delegate transaction'\n  },\n  voteTxTitleAria: {\n    id: 'confirm-tx-dialog-content.vote-title-aria',\n    description: 'Vote transaction title for accessibility',\n    defaultMessage: 'Vote transaction'\n  },\n  senderSummaryAria: {\n    id: 'confirm-tx-dialog-content.sender-summary-aria',\n    description: 'Sender summary for accessibility',\n    defaultMessage: 'From {account} ({address})'\n  },\n  recipientSummaryAria: {\n    id: 'confirm-tx-dialog-content.recipient-summary-aria',\n    description: 'Recipient summary for accessibility',\n    defaultMessage: 'To {account} ({address})'\n  },\n  txDetailsAria: {\n    id: 'confirm-tx-dialog-content.details-section-aria',\n    description: 'Transaction details section title for accessibility',\n    defaultMessage: 'Transaction details'\n  },\n  txBreakdownAria: {\n    id: 'confirm-tx-dialog-content.breakdown-section-aria',\n    description: 'Transaction breakdown section title for accessibility',\n    defaultMessage: 'Transaction cost breakdown'\n  }\n});\n\ntype SendTxData = {\n  kind: 'send';\n  recipientAddress: string;\n  recipientName: string | null;\n  amount: RawAmount;\n};\n\ntype PassphraseTxData = {\n  kind: 'passphrase';\n};\n\ntype DelegateTxData = {\n  kind: 'delegate';\n  username: string;\n  forgingPK: string;\n};\n\ntype VoteTxData = {\n  kind: 'vote';\n  remove: string[];\n  add: string[];\n};\n\ntype TxData = SendTxData | PassphraseTxData | DelegateTxData | VoteTxData;\n\nfunction throwInvalidTxKind(tx: never): never;\nfunction throwInvalidTxKind(tx: TxData) {\n  throw new Error(`Invalid transaction kind ${tx.kind}`);\n}\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  data: TxData;\n  fee: RawAmount;\n  senderName: string | null;\n  senderLocalId: number;\n  senderAddress: string;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nclass ConfirmTransactionDialogContent extends React.Component<DecoratedProps> {\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle)\n    });\n  }\n\n  render() {\n    const { intl, classes, data, fee, senderAddress, children } = this.props;\n\n    const total = fee.plus(data.kind === 'send' ? data.amount : RawAmount.ZERO);\n    const recipientAddress = data.kind === 'send' ? data.recipientAddress : '';\n    let senderName = this.props.senderName;\n    if (!senderName) {\n      senderName = intl.formatMessage(messages.unnamedSender, {\n        id: this.props.senderLocalId\n      });\n    }\n    let recipientName = data.kind === 'send' ? data.recipientName : null;\n    if (!recipientName) {\n      recipientName = intl.formatMessage(messages.unnamedRecipient);\n    }\n\n    let txTitleAria = '';\n    if (data.kind === 'send') {\n      txTitleAria = intl.formatMessage(messages.sendTxTitleAria, {\n        amount: formatAmount(intl, data.amount)\n      });\n    } else if (data.kind === 'passphrase') {\n      txTitleAria = intl.formatMessage(messages.passphraseTxTitleAria);\n    } else if (data.kind === 'delegate') {\n      txTitleAria = intl.formatMessage(messages.delegateTxTitleAria);\n    } else if (data.kind === 'vote') {\n      txTitleAria = intl.formatMessage(messages.voteTxTitleAria);\n    } else {\n      throwInvalidTxKind(data);\n    }\n\n    return (\n      <>\n        <Grid className={classes.content} container={true} spacing={16}>\n          <Grid\n            item={true}\n            xs={12}\n            className={classes.viz}\n            aria-label={txTitleAria}\n          >\n            <AccountIcon size={64} address={senderAddress} />\n            <div className={classes.vizArrow}>\n              {data.kind === 'send' && (\n                <Typography className={classes.vizAmount} aria-hidden={true}>\n                  {formatAmount(intl, data.amount)}\n                </Typography>\n              )}\n              <div\n                className={classNames(\n                  classes.arrow,\n                  data.kind !== 'send' && classes.inactive\n                )}\n              >\n                <div className={classes.arrowShaft} />\n                <div className={classes.arrowEnd} />\n              </div>\n            </div>\n            <AccountIcon size={64} address={recipientAddress} />\n          </Grid>\n          <Grid\n            item={true}\n            xs={12}\n            sm={6}\n            className={classes.senderInfo}\n            aria-label={intl.formatMessage(messages.senderSummaryAria, {\n              account: senderName,\n              address: senderAddress\n            })}\n          >\n            <Typography\n              className={classes.accountAlias}\n              aria-hidden={true}\n              children={senderName}\n            />\n            <Typography\n              className={classes.accountAddress}\n              aria-hidden={true}\n              children={senderAddress}\n            />\n          </Grid>\n          {data.kind === 'send' && (\n            <Grid\n              item={true}\n              xs={12}\n              sm={6}\n              className={classes.recipientInfo}\n              aria-label={intl.formatMessage(messages.recipientSummaryAria, {\n                account: recipientName,\n                address: recipientAddress\n              })}\n            >\n              <Typography\n                className={classes.accountAlias}\n                aria-hidden={true}\n                children={recipientName}\n              />\n              <Typography\n                className={classes.accountAddress}\n                aria-hidden={true}\n                children={recipientAddress}\n              />\n            </Grid>\n          )}\n        </Grid>\n        {data.kind !== 'send' && (\n          <>\n            <Divider aria-hidden={true} />\n            <Grid\n              className={classNames(classes.content, classes.txDetails)}\n              container={true}\n              spacing={16}\n              aria-label={intl.formatMessage(messages.txDetailsAria)}\n            >\n              <Grid item={true} xs={12}>\n                {data.kind === 'passphrase' && (\n                  <Typography>\n                    <FormattedMessage\n                      id=\"confirm-tx-dialog-content.details-add-passphrase\"\n                      description=\"Transaction detail row for 2nd passphrase setup.\"\n                      defaultMessage=\"Setup 2nd passphrase for account.\"\n                    />\n                  </Typography>\n                )}\n                {data.kind === 'delegate' && (\n                  <Typography>\n                    <FormattedMessage\n                      id=\"confirm-tx-dialog-content.details-register-delegate\"\n                      description=\"Transaction detail row for delegate registration.\"\n                      defaultMessage=\"Register as a delegate with username {username}.\"\n                      values={{\n                        username: <em>{data.username}</em>\n                      }}\n                    />\n                  </Typography>\n                )}\n                {data.kind === 'vote' && (\n                  <>\n                    {data.remove.length > 0 && (\n                      <Typography>\n                        <FormattedMessage\n                          id=\"confirm-tx-dialog-content.details-remove-votes\"\n                          description=\"Transaction detail row for vote removal.\"\n                          defaultMessage={\n                            'Remove {delegateCount, plural,' +\n                            '  one {vote}' +\n                            '  other {votes}' +\n                            '} form {delegates}.'\n                          }\n                          values={{\n                            delegateCount: data.remove.length,\n                            delegates: emphasizeAndJoin(data.remove)\n                          }}\n                        />\n                      </Typography>\n                    )}\n                    {data.add.length > 0 && (\n                      <Typography>\n                        <FormattedMessage\n                          id=\"confirm-tx-dialog-content.details-add-votes\"\n                          description=\"Transaction detail row for vote addition.\"\n                          defaultMessage={\n                            'Cast {delegateCount, plural,' +\n                            '  one {vote}' +\n                            '  other {votes}' +\n                            '} for {delegates}.'\n                          }\n                          values={{\n                            delegateCount: data.add.length,\n                            delegates: emphasizeAndJoin(data.add)\n                          }}\n                        />\n                      </Typography>\n                    )}\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </>\n        )}\n        <Divider aria-hidden={true} />\n        <Grid className={classes.content} container={true} spacing={16}>\n          <Grid\n            item={true}\n            xs={12}\n            className={classes.txBreakdown}\n            aria-label={intl.formatMessage(messages.txBreakdownAria)}\n          >\n            {data.kind === 'send' && (\n              <Typography>\n                <FormattedMessage\n                  id=\"confirm-tx-dialog-content.breakdown-amount-label\"\n                  description=\"Label for transfer amount in transaction breakdown.\"\n                  defaultMessage=\"Transfer amount:\"\n                />{' '}\n                <span>{formatAmount(intl, data.amount)}</span>\n              </Typography>\n            )}\n            <Typography>\n              <FormattedMessage\n                id=\"confirm-tx-dialog-content.breakdown-fee-label\"\n                description=\"Label for network fee in transaction breakdown.\"\n                defaultMessage=\"Network fee:\"\n              />{' '}\n              <span>{formatAmount(intl, fee)}</span>\n            </Typography>\n            <Typography>\n              <FormattedMessage\n                id=\"confirm-tx-dialog-content.breakdown-total-label\"\n                description=\"Label for total cost in transaction breakdown.\"\n                defaultMessage=\"Total:\"\n              />{' '}\n              <span className={classes.totalAmount}>\n                {formatAmount(intl, total)}\n              </span>\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider aria-hidden={true} />\n        {children}\n      </>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(ConfirmTransactionDialogContent));\n\nfunction emphasizeAndJoin(\n  labels: string[],\n  separator: string = ', '\n): JSX.Element {\n  return (\n    <>\n      {labels\n        .map(u => <em key={u}>{u}</em>)\n        .reduce((a, u) => a.concat(a.length ? ', ' : null, u), [] as Array<\n          null | string | JSX.Element\n        >)}\n    </>\n  );\n}\n","import { observable, runInAction, reaction, IReactionDisposer } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport ConfirmTxEnterSecretsFooter\n  from '../../components/ConfirmTxEnterSecretsFooter';\nimport ConfirmTxStatusFooter from '../../components/ConfirmTxStatusFooter';\nimport ConfirmTransactionDialogContent\n  from '../../components/content/ConfirmTransactionDialogContent';\nimport Dialog, {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport AccountStore, { AccountType } from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore from '../../stores/router';\nimport WalletStore, {\n  PostableRiseTransaction,\n  RiseTransaction,\n  TFeeTypes\n} from '../../stores/wallet';\nimport { RawAmount } from '../../utils/amounts';\nimport { PropsOf } from '../../utils/metaTypes';\nimport { derivePublicKey } from '../../utils/utils';\n\ntype Secrets = {\n  mnemonic: string;\n  passphrase: null | string;\n};\n\ntype DialogProps = PropsOf<typeof Dialog>;\ntype ConfirmTransactionDialogContentProps = PropsOf<\n  typeof ConfirmTransactionDialogContent\n>;\n\ntype Transaction = ConfirmTransactionDialogContentProps['data'];\n\ninterface Props extends DialogProps {\n  account: AccountStore;\n  transaction: null | Transaction;\n  passphrasePublicKey?: string;\n  onCreateTransaction: () => Promise<RiseTransaction>;\n  onSuccess?: () => void;\n  onError?: () => void;\n}\n\ninterface PropsInjected extends Props {\n  ledgerStore: LedgerStore;\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  transaction: Props['transaction'];\n  step: 'confirm' | 'sending' | 'failure' | 'sent';\n  signedTx: null | PostableRiseTransaction;\n  sendError: string;\n}\n\n@inject('ledgerStore')\n@inject('routerStore')\n@inject('walletStore')\n@observer\nclass ConfirmTransactionDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  state: State = {\n    transaction: null,\n    step: 'confirm',\n    signedTx: null,\n    sendError: ''\n  };\n\n  open: boolean = false;\n  private lastLedgerSignId = 0;\n  private disposeLedgerMonitor: null | IReactionDisposer = null;\n\n  private countdownId: null | number = null;\n  @observable private confirmationTimeout: null | Date = null;\n  @observable private countdownSeconds: number = 0;\n\n  static getDerivedStateFromProps(\n    nextProps: Readonly<Props>,\n    prevState: State\n  ): State {\n    const hadTx = !!prevState.transaction;\n    const hasTx = !!nextProps.transaction;\n\n    if (!hadTx && hasTx) {\n      // When transitioning into the tx flow, make sure that we start on a clean slate\n      return {\n        transaction: nextProps.transaction,\n        step: 'confirm',\n        signedTx: null,\n        sendError: ''\n      };\n    } else {\n      return {\n        ...prevState,\n        transaction: nextProps.transaction\n      };\n    }\n  }\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  goBack = () => {\n    const { routerStore, onNavigateBack, navigateBackLink } = this.injected;\n    if (onNavigateBack) {\n      onNavigateBack();\n    } else if (navigateBackLink) {\n      routerStore.navigateTo(navigateBackLink);\n    }\n  };\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // close interrupt\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n\n    // mark the dialog as closed\n    if (!this.open) {\n      return false;\n    }\n    this.dialogWillClose();\n\n    // navigation part\n    const { routerStore, onClose, onCloseRoute } = this.injected;\n    if (onClose) {\n      onClose(ev);\n    } else if (onCloseRoute) {\n      // Fallback to the closeLink as we use this event handler for the\n      // dialog content close buttons as well\n      routerStore.navigateTo(onCloseRoute);\n    }\n    return false;\n  };\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  };\n\n  handleConfirmTransaction = async (secrets: Secrets) => {\n    const { account, walletStore, onCreateTransaction } = this.injected;\n\n    this.setState({ step: 'sending' });\n\n    // Ensure that the account publicKey is set\n    if (!account.publicKey) {\n      const publicKey = derivePublicKey(secrets.mnemonic);\n      runInAction(() => {\n        account.publicKey = publicKey;\n      });\n    }\n\n    const unsignedTx = await onCreateTransaction();\n    const signedTx = walletStore.signTransaction(\n      unsignedTx,\n      secrets.mnemonic,\n      account.secondPublicKey ? secrets.passphrase : null\n    );\n\n    this.broadcastTransaction(signedTx);\n  };\n\n  handleRetryTransaction = () => {\n    const { signedTx } = this.state;\n    if (signedTx !== null) {\n      this.broadcastTransaction(signedTx);\n    }\n  };\n\n  async broadcastTransaction(signedTx: PostableRiseTransaction) {\n    const { walletStore, onSuccess, onError } = this.injected;\n\n    this.setState({ step: 'sending' });\n\n    let success = false;\n    let errorSummary = '';\n\n    try {\n      const result = await walletStore.broadcastTransaction(signedTx);\n      // this supports only a single transaction per request\n      success = Boolean(result.accepted && result.accepted.length);\n      if (!success) {\n        // get the error\n        errorSummary = result.invalid![0].reason;\n      }\n    } catch (e) {\n      success = false;\n      // connection aborted after sending it\n      if (e && e.code === 'ECONNABORTED') {\n        // try to request the transaction\n        // if successful, consider the whole dialog as error-less\n        success = await this.checkTransactionExists(signedTx.id);\n      } else {\n        // all the other errors\n        errorSummary = e.toString();\n      }\n    }\n\n    if (success) {\n      this.setState({\n        step: 'sent',\n        signedTx: null\n      });\n      if (onSuccess) {\n        onSuccess();\n      }\n    } else {\n      this.setState({\n        step: 'failure',\n        signedTx,\n        sendError: errorSummary\n      });\n      if (onError) {\n        onError();\n      }\n    }\n  }\n\n  async checkTransactionExists(id: string): Promise<boolean> {\n    const { walletStore } = this.injected;\n\n    try {\n      // try to request the transaction\n      const tx = await walletStore.dposAPI.transactions.get(id);\n      return Boolean(tx.transaction);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  get fee(): RawAmount {\n    const { walletStore } = this.injected;\n    const { transaction } = this.state;\n\n    if (!transaction) {\n      return RawAmount.ZERO;\n    }\n\n    const feeMap: { [K in Transaction['kind']]: TFeeTypes } = {\n      vote: 'vote',\n      passphrase: 'secondsignature',\n      delegate: 'delegate',\n      send: 'send'\n    };\n\n    return walletStore.fees.get(feeMap[transaction.kind])!;\n  }\n\n  dialogWillOpen() {\n    if (this.open) {\n      return;\n    }\n    this.open = true;\n    const { account } = this.injected;\n\n    if (account.type === AccountType.LEDGER) {\n      // TODO change reaction to a state change listener\n      this.disposeLedgerMonitor = reaction(\n        this.canSignOnLedger,\n        this.beginLedgerSigning\n      );\n    }\n  }\n\n  dialogWillClose() {\n    if (!this.open) {\n      return;\n    }\n    this.open = false;\n    // close the ledger\n    this.injected.ledgerStore.close();\n\n    if (this.disposeLedgerMonitor !== null) {\n      this.disposeLedgerMonitor();\n      this.disposeLedgerMonitor = null;\n    }\n  }\n\n  componentWillUnmount() {\n    this.dialogWillClose();\n  }\n\n  canSignOnLedger = () => {\n    const { transaction, ledgerStore } = this.injected;\n    const { step } = this.state;\n\n    return (\n      step === 'confirm' &&\n      transaction !== null &&\n      ledgerStore.hasSupport &&\n      ledgerStore.isOpen\n    );\n  };\n\n  beginLedgerSigning = async () => {\n    const { account, onCreateTransaction, ledgerStore } = this.injected;\n\n    const ledgerSignId = ++this.lastLedgerSignId;\n\n    if (\n      !ledgerStore.isOpen ||\n      !this.canSignOnLedger() ||\n      // !this.canSignOnLedger() ||\n      account.hwSlot === null\n    ) {\n      return;\n    }\n    const accountSlot = account.hwSlot || 0;\n\n    // Ensure that the account publicKey is set before calling onCreateTransaction\n    if (!account.publicKey) {\n      const info = await ledgerStore.getAccount(accountSlot);\n      runInAction(() => {\n        account.publicKey = info.publicKey;\n      });\n    }\n\n    let unsignedTx = await onCreateTransaction();\n    if (ledgerSignId !== this.lastLedgerSignId) {\n      return;\n    }\n\n    this.confirmationTimeout = new Date(\n      new Date().getTime() + ledgerStore.confirmationTimeout\n    );\n    this.updateConfirmationCountdown();\n\n    let signedTx;\n    try {\n      signedTx = await ledgerStore.signTransaction(accountSlot, unsignedTx);\n      if (ledgerSignId !== this.lastLedgerSignId) {\n        return;\n      }\n    } catch (ex) {\n      signedTx = null;\n    }\n\n    if (signedTx) {\n      this.broadcastTransaction(signedTx);\n    } else {\n      this.goBack();\n    }\n  };\n\n  render() {\n    const { open } = this.injected;\n\n    if (open) {\n      this.dialogWillOpen();\n    } else {\n      this.dialogWillClose();\n    }\n\n    return <Dialog open={open} {...this.dialogProps} />;\n  }\n\n  // TODO simplify, describe\n  get dialogProps(): Pick<\n    DialogProps,\n    | 'onClose'\n    | 'onCloseRoute'\n    | 'onNavigateBack'\n    | 'navigateBackLink'\n    | 'children'\n  > {\n    const { transaction, step } = this.state;\n    const {\n      onClose,\n      onCloseRoute,\n      onNavigateBack,\n      navigateBackLink\n    } = this.injected;\n\n    // TODO comment needed\n    if (!transaction) {\n      const { children } = this.injected;\n      return {\n        onClose,\n        onCloseRoute,\n        onNavigateBack,\n        navigateBackLink,\n        children\n      };\n    }\n\n    const closeProps: Pick<DialogProps, 'onClose' | 'onCloseRoute'> = {};\n    closeProps.onClose = this.handleClose;\n\n    const backProps: Pick<\n      DialogProps,\n      'onNavigateBack' | 'navigateBackLink'\n    > = {};\n    if (navigateBackLink) {\n      backProps.navigateBackLink = navigateBackLink;\n    } else {\n      backProps.onNavigateBack = onNavigateBack;\n    }\n\n    switch (step) {\n      default:\n        return {\n          ...closeProps,\n          ...backProps,\n          children: this.renderConfirmTxContent()\n        };\n      case 'sending':\n        return {\n          children: this.renderSendingTxContent()\n        };\n      case 'failure':\n        return {\n          ...closeProps,\n          children: this.renderFailedTxContent()\n        };\n      case 'sent':\n        return {\n          ...closeProps,\n          children: this.renderSentTxContent()\n        };\n    }\n  }\n\n  renderConfirmTxContent() {\n    const {\n      account,\n      passphrasePublicKey,\n      ledgerStore,\n      walletStore\n    } = this.injected;\n    const { transaction } = this.state;\n\n    return (\n      <ConfirmTransactionDialogContent\n        onFormChanged={this.handleFormChanged}\n        data={transaction!}\n        fee={this.fee}\n        senderName={account.name}\n        senderLocalId={account.localId}\n        senderAddress={account.id}\n      >\n        {account.type === AccountType.LEDGER ? (\n          !ledgerStore.hasSupport ? (\n            <ConfirmTxStatusFooter type=\"ledger-not-supported\" />\n          ) : !ledgerStore.isOpen ? (\n            <ConfirmTxStatusFooter type=\"ledger-not-connected\" />\n          ) : (\n            <ConfirmTxStatusFooter\n              type=\"ledger-confirming\"\n              timeout={this.countdownSeconds}\n            />\n          )\n        ) : (\n          <ConfirmTxEnterSecretsFooter\n            addressVersion={account.version}\n            networkType={walletStore.getTxNetwork()}\n            address={account.id}\n            publicKey={account.publicKey}\n            secondPublicKey={passphrasePublicKey || account.secondPublicKey}\n            onConfirm={this.handleConfirmTransaction}\n          />\n        )}\n      </ConfirmTransactionDialogContent>\n    );\n  }\n\n  renderSendingTxContent() {\n    const { account } = this.injected;\n    const { transaction } = this.state;\n\n    return (\n      <ConfirmTransactionDialogContent\n        onFormChanged={this.handleFormChanged}\n        data={transaction!}\n        fee={this.fee}\n        senderName={account.name}\n        senderLocalId={account.localId}\n        senderAddress={account.id}\n      >\n        <ConfirmTxStatusFooter type=\"broadcasting\" />\n      </ConfirmTransactionDialogContent>\n    );\n  }\n\n  renderFailedTxContent() {\n    const { account } = this.injected;\n    const { transaction, signedTx, sendError } = this.state;\n\n    const canRetry = !!signedTx;\n\n    return (\n      <ConfirmTransactionDialogContent\n        onFormChanged={this.handleFormChanged}\n        data={transaction!}\n        fee={this.fee}\n        senderName={account.name}\n        senderLocalId={account.localId}\n        senderAddress={account.id}\n      >\n        <ConfirmTxStatusFooter\n          type=\"broadcast-failed\"\n          reason={sendError}\n          onRetry={canRetry ? this.handleRetryTransaction : undefined}\n          onClose={this.handleClose}\n        />\n      </ConfirmTransactionDialogContent>\n    );\n  }\n\n  renderSentTxContent() {\n    const { account } = this.injected;\n    const { transaction } = this.state;\n\n    return (\n      <ConfirmTransactionDialogContent\n        onFormChanged={this.handleFormChanged}\n        data={transaction!}\n        fee={this.fee}\n        senderName={account.name}\n        senderLocalId={account.localId}\n        senderAddress={account.id}\n      >\n        <ConfirmTxStatusFooter\n          type=\"broadcast-succeeded\"\n          onClose={this.handleClose}\n        />\n      </ConfirmTransactionDialogContent>\n    );\n  }\n\n  private updateConfirmationCountdown = () => {\n    const now = new Date();\n    const remainMs =\n      this.confirmationTimeout !== null\n        ? this.confirmationTimeout.getTime() - now.getTime()\n        : 0;\n    const isCountdownActive = remainMs > 0;\n\n    runInAction(() => {\n      if (isCountdownActive) {\n        this.countdownSeconds = Math.ceil(remainMs / 1000);\n      } else {\n        // Make sure that the timeout clears the selected account\n        this.lastLedgerSignId += 1;\n      }\n    });\n\n    if (isCountdownActive && this.countdownId === null) {\n      this.countdownId = window.setInterval(\n        this.updateConfirmationCountdown,\n        250\n      );\n    } else if (!isCountdownActive && this.countdownId !== null) {\n      window.clearInterval(this.countdownId);\n      this.countdownId = null;\n    }\n  };\n}\n\nexport default ConfirmTransactionDialog;\n","import { reaction, IReactionDisposer } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport RouterStore from '../../stores/router';\nimport React from 'react';\nimport SendCoinsDialogContent\n  from '../../components/content/SendCoinsDialogContent';\nimport {\n  ICloseInterruptControllerState,\n  ICloseInterruptController\n} from '../../components/Dialog';\nimport { accountSendRoute } from '../../routes';\nimport AccountStore, { AccountType } from '../../stores/account';\nimport AddressBookStore from '../../stores/addressBook';\nimport LedgerStore from '../../stores/ledger';\nimport WalletStore from '../../stores/wallet';\nimport { RawAmount } from '../../utils/amounts';\nimport ConfirmTransactionDialog from './ConfirmTransactionDialog';\n\ninterface Props {\n  account: AccountStore;\n  amount?: RawAmount;\n  recipientID?: string;\n  onNavigateBack: () => void;\n  open?: boolean;\n}\n\ninterface PropsInjected extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n  addressBookStore: AddressBookStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  amount: null | RawAmount;\n  recipientID: string;\n  step: 'form' | 'transaction';\n  transaction: null | {\n    recipientID: string;\n    amount: RawAmount;\n  };\n}\n\n@inject('routerStore')\n@inject('ledgerStore')\n@inject('walletStore')\n@inject('addressBookStore')\n@observer\nclass SendCoinsDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  disposeOpenMonitor: null | IReactionDisposer = null;\n  state: State = {\n    recipientID: '',\n    amount: null,\n    step: 'form',\n    transaction: null\n  };\n\n  get account(): AccountStore {\n    return this.injected.account;\n  }\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n\n    const { onNavigateBack } = this.injected;\n    onNavigateBack();\n    return false;\n  }\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  }\n\n  handleNavigateBack = (ev: React.SyntheticEvent<{}>) => {\n    const { onNavigateBack } = this.injected;\n    const { step } = this.state;\n\n    if (step === 'form') {\n      onNavigateBack();\n    } else {\n      this.setState({\n        step: 'form',\n        transaction: null\n      });\n    }\n  }\n\n  handleSubmit = (data: { recipientID: string; amount: RawAmount }) => {\n    const { recipientID, amount } = data;\n\n    // ledger requires to be open in a click handler\n    if (this.account.type === AccountType.LEDGER) {\n      this.injected.ledgerStore.open();\n    }\n\n    this.setState({\n      recipientID,\n      amount,\n      step: 'transaction',\n      transaction: {\n        recipientID,\n        amount\n      }\n    });\n  }\n\n  handleCreateTransaction = () => {\n    const { account, walletStore } = this.injected;\n    const { step, transaction } = this.state;\n\n    if (step === 'transaction' && transaction !== null) {\n      return walletStore.createSendTx(\n        transaction.recipientID,\n        transaction.amount,\n        account.id\n      );\n    } else {\n      throw new Error('Invalid internal state');\n    }\n  }\n\n  resetState() {\n    const { recipientID, amount } = this.props;\n\n    this.setState({\n      recipientID: recipientID || '',\n      amount: amount || null,\n      step: 'form',\n      transaction: null\n    });\n  }\n\n  componentWillMount() {\n    this.disposeOpenMonitor = reaction(\n      () => this.isOpen,\n      isOpen => {\n        if (isOpen) {\n          // TODO explain in a comment\n          this.resetState();\n        }\n      }\n    );\n\n    // TODO explain in a comment\n    this.resetState();\n\n    const params = (this.injected.routerStore.queryParams || {}) as {\n      address?: string;\n      amount?: string;\n    };\n    if (params.address) {\n      this.setState({ recipientID: params.address });\n    }\n    if (params.amount) {\n      this.setState({\n        amount: RawAmount.fromUnit(params.amount)\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.disposeOpenMonitor) {\n      this.disposeOpenMonitor();\n      this.disposeOpenMonitor = null;\n    }\n  }\n\n  get isOpen() {\n    const { routerStore, open } = this.injected;\n    return open || routerStore.currentView === accountSendRoute;\n  }\n\n  render() {\n    const { account, walletStore } = this.injected;\n    const { step, transaction } = this.state;\n\n    const canGoBack = step !== 'form';\n\n    return (\n      <ConfirmTransactionDialog\n        open={this.isOpen}\n        account={account}\n        transaction={\n          transaction\n            ? {\n                kind: 'send',\n                recipientAddress: transaction.recipientID,\n                recipientName: walletStore.idToName(transaction.recipientID),\n                amount: transaction.amount\n              }\n            : null\n        }\n        onCreateTransaction={this.handleCreateTransaction}\n        onClose={this.handleClose}\n        onNavigateBack={canGoBack ? this.handleNavigateBack : undefined}\n        children={this.renderSendCoins()}\n      />\n    );\n  }\n\n  renderSendCoins() {\n    const { account, walletStore } = this.injected;\n    const { recipientID, amount } = this.state;\n    const fee = walletStore.fees.get('send')!;\n\n    return (\n      <SendCoinsDialogContent\n        onFormChanged={this.handleFormChanged}\n        onSubmit={this.handleSubmit}\n        recipientID={recipientID}\n        recipientName={walletStore.idToName(recipientID)}\n        amount={amount}\n        sendFee={fee}\n        balance={account.balance}\n        contacts={walletStore.getContacts()}\n      />\n    );\n  }\n}\n\nexport default SendCoinsDialog;\n","import Button from '@material-ui/core/es/Button';\nimport Fab from '@material-ui/core/es/Fab';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Tooltip from '@material-ui/core/es/Tooltip';\nimport Typography from '@material-ui/core/es/Typography';\nimport SendIcon from '@material-ui/icons/Send';\nimport classNames from 'classnames';\nimport { toPairs } from 'lodash';\nimport { action, runInAction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport RouterStore from '../../stores/router';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport AccountOverviewHeader from '../../components/AccountOverviewHeader';\nimport AccountTip from '../../components/AccountTip';\nimport Link from '../../components/Link';\nimport LoadingIndicator from '../../components/LoadingIndicator';\nimport TxDetailsExpansionPanel from '../../components/TxDetailsExpansionPanel';\nimport { accountOverviewRoute, accountSendRoute } from '../../routes';\nimport { accountStore } from '../../stores';\nimport AccountStore, { AccountType, LoadingState } from '../../stores/account';\nimport AddressBookStore from '../../stores/addressBook';\nimport { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport { RawAmount } from '../../utils/amounts';\nimport AccountNameDialog from './AccountNameDialog';\nimport CreateContactDialog from './CreateContactDialog';\nimport ModifyContactDialog from './ModifyContactDialog';\nimport SendCoinsDialog from './SendCoinsDialog';\n\n// TODO move to the config\nconst HIGH_VALUE_ACCOUNT_THRESHOLD = RawAmount.fromUnit(1000);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column',\n      // Override the overflow setting from `.Wallet-content > :last-child`\n      overflow: 'visible !important'\n    },\n    header: {\n      zIndex: 100\n    },\n    headerFixed: {\n      flexShrink: 0,\n      [theme.breakpoints.down('xs')]: {\n        display: 'none'\n      }\n    },\n    headerInline: {\n      marginBottom: theme.spacing.unit * 2,\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    },\n    content: {\n      padding: theme.spacing.unit * 2,\n      overflow: 'auto',\n      zIndex: 50\n    },\n    fab: {\n      position: 'fixed',\n      right: 3 * theme.spacing.unit,\n      bottom: 3 * theme.spacing.unit,\n      zIndex: 1100\n    },\n    dateGroupTitle: {\n      marginTop: theme.spacing.unit * 2,\n      marginBottom: theme.spacing.unit,\n      ['&:first-child']: {\n        marginTop: 0\n      },\n      ...theme.typography.body2,\n      color: theme.palette.text.secondary,\n      fontWeight: 500\n    },\n    loadMore: {\n      textAlign: 'center',\n      marginTop: 10\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  account?: AccountStore;\n}\n\ninterface PropsInjected extends Props {\n  accountStore: AccountStore;\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  addressBookStore: AddressBookStore;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'AccountOverview' });\n\nconst messages = defineMessages({\n  unnamedAccountLabel: {\n    id: 'wallet-account-overview.unnamed-account-label',\n    description: \"Label for accounts that user hasn't named yet\",\n    defaultMessage: 'Unnamed account ({id})'\n  },\n  noPubkeyAccountTip: {\n    id: 'wallet-account-overview.no-pubkey-account-tip',\n    description:\n      'Tip about increasing the security of the account by making a transaction',\n    defaultMessage:\n      'You should make a transaction (send some RISE or cast a vote) to bind ' +\n      'your public key with this account to increase the security of your funds.'\n  },\n  highValueAccountTip: {\n    id: 'wallet-account-overview.high-value-account-tip',\n    description:\n      'Tip about using more secure ways to store RISE for high value accounts',\n    defaultMessage:\n      'You have quite a few RISE on this account. You should consider using a ' +\n      'hardware wallet for added security. If that is not an option, at the very ' +\n      'least you should start using the RISE desktop application instead of the ' +\n      'web app.'\n  },\n  sendFabTooltip: {\n    id: 'wallet-account-overview.send-funds-fab-tooltip',\n    description: 'Tooltip for send floating action button',\n    defaultMessage: 'Send RISE'\n  }\n});\n\ntype State = {\n  editContactID: string | null;\n};\n\n@inject(accountStore)\n@inject('routerStore')\n@inject('walletStore')\n@inject('addressBookStore')\n@observer\nclass AccountOverview extends React.Component<DecoratedProps, State> {\n  state: State = {\n    editContactID: null\n  };\n\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  get account() {\n    return this.injected.account || this.injected.accountStore;\n  }\n\n  handleNavigateBack = () => {\n    this.injected.routerStore.goTo(accountOverviewRoute, {\n      id: this.account.id\n    });\n  };\n\n  handleLoadMore = () => {\n    this.account.recentTransactions.loadMore();\n  };\n\n  handleContactEdit = (id: string) => {\n    this.setState({ editContactID: id });\n  };\n\n  renderContactDialog = () => {\n    const {\n      walletStore: wallet,\n      addressBookStore: addressBook\n    } = this.injected;\n    const { editContactID: id } = this.state;\n\n    const backLink: RouteLink = {\n      route: accountOverviewRoute,\n      params: {\n        id: this.account.id\n      },\n      onBeforeNavigate: () => {\n        this.setState({\n          editContactID: null\n        });\n      }\n    };\n\n    let showAccountName = false;\n    let showCreateContact = false;\n    let showModifyContact = false;\n\n    if (!id) {\n      // No-op on purpose\n    } else if (wallet.accounts.has(id)) {\n      showAccountName = true;\n    } else if (addressBook.contacts.has(id)) {\n      showModifyContact = true;\n    } else {\n      showCreateContact = true;\n    }\n\n    return (\n      <>\n        <AccountNameDialog\n          // @ts-ignore TODO avoid rendering data-less dialogs\n          account={wallet.accounts.get(id) || { id: '', name: '' }}\n          navigateBackLink={backLink}\n          open={showAccountName}\n        />\n        <CreateContactDialog\n          navigateBackLink={backLink}\n          address={id || ''}\n          open={showCreateContact}\n        />\n        <ModifyContactDialog\n          navigateBackLink={backLink}\n          address={id || ''}\n          open={showModifyContact}\n        />\n      </>\n    );\n  };\n\n  getSendLinkProps = (address: string, amount: RawAmount) => {\n    return {\n      route: accountSendRoute,\n      params: {\n        id: this.account.id\n      },\n      queryParams: {\n        address,\n        amount: amount.unit.toString()\n      }\n    };\n  };\n\n  @action\n  handleExpand = (id: string, expanded: boolean) => {\n    const account = this.account;\n    if (expanded) {\n      account.recentTransactions.expanded.push(id);\n    } else {\n      account.recentTransactions.expanded.remove(id);\n    }\n  };\n\n  render() {\n    const { intl, classes, walletStore } = this.injected;\n\n    // mark the current account as visible and umark others\n    for (const account of walletStore.accounts.values()) {\n      runInAction(() => {\n        account.visible = account.id === this.account.id;\n      });\n    }\n\n    const readOnly = this.account && this.account.type === AccountType.READONLY;\n    const headerProps = {\n      address: this.account.id,\n      alias:\n        this.account.name ||\n        intl.formatMessage(messages.unnamedAccountLabel, {\n          id: this.account.localId\n        }),\n      balance: this.account.balance,\n      balanceFiat: this.account.balanceFiat,\n      fiatCurrency: this.account.fiatCurrency\n    };\n\n    const recentTransactions = this.account.recentTransactions;\n\n    return (\n      <div className={classes.container}>\n        {this.renderContactDialog()}\n        <AccountOverviewHeader\n          className={classNames(classes.header, classes.headerFixed)}\n          {...headerProps}\n        />\n        {!readOnly && (\n          <Tooltip\n            placement=\"left\"\n            title={intl.formatMessage(messages.sendFabTooltip)}\n          >\n            <Link\n              route={accountSendRoute}\n              params={{\n                id: this.account.id\n              }}\n            >\n              <Fab classes={{ root: classes.fab }} color=\"secondary\">\n                <SendIcon />\n              </Fab>\n            </Link>\n          </Tooltip>\n        )}\n        <SendCoinsDialog\n          account={this.account}\n          onNavigateBack={this.handleNavigateBack}\n        />\n        <div className={classes.content}>\n          <AccountOverviewHeader\n            key=\"__header__\"\n            className={classNames(classes.header, classes.headerInline)}\n            {...headerProps}\n          />\n          <AccountTip\n            key=\"__no_pubkey_tip__\"\n            open={\n              this.account.balance.gt(RawAmount.ZERO) &&\n              !this.account.broadcastedPublicKey\n            }\n            message={intl.formatMessage(messages.noPubkeyAccountTip)}\n          />\n          <AccountTip\n            key=\"__high_value_acc_tip__\"\n            open={\n              this.account.balance.gt(HIGH_VALUE_ACCOUNT_THRESHOLD) &&\n              this.account.type === AccountType.MNEMONIC &&\n              typeof carlo === 'undefined'\n            }\n            message={intl.formatMessage(messages.highValueAccountTip)}\n          />\n          {recentTransactions.items.length === 0 &&\n            recentTransactions.isLoading && <LoadingIndicator />}\n          {toPairs(recentTransactions.groupedByDay).map(\n            ([group, transactions]) => (\n              <React.Fragment key={`${this.account.id}-${group}`}>\n                <Typography className={classes.dateGroupTitle}>\n                  {group}\n                </Typography>\n                <div>\n                  {transactions.map(transaction => {\n                    return (\n                      <TxDetailsExpansionPanel\n                        expanded={this.account.recentTransactions.expanded.includes(\n                          transaction.id\n                        )}\n                        onExpand={this.handleExpand}\n                        getSendLinkProps={this.getSendLinkProps}\n                        key={transaction.id}\n                        tx={transaction}\n                        explorerUrl={this.account.config.explorer_url}\n                        handleContactEdit={this.handleContactEdit}\n                      />\n                    );\n                  })}\n                </div>\n              </React.Fragment>\n            )\n          )}\n          {recentTransactions.hasMore && (\n            <div className={classes.loadMore}>\n              <Button\n                disabled={\n                  recentTransactions.isLoading ||\n                  walletStore.connected !== LoadingState.LOADED\n                }\n                onClick={this.handleLoadMore}\n              >\n                Load more\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AccountOverview));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Add');\n\nexports.default = _default;","import Avatar from '@material-ui/core/es/Avatar';\nimport Fab from '@material-ui/core/es/Fab';\nimport List from '@material-ui/core/es/List/List';\nimport ListItem from '@material-ui/core/es/ListItem';\nimport ListItemAvatar from '@material-ui/core/es/ListItemAvatar';\nimport ListItemText from '@material-ui/core/es/ListItemText';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Tooltip from '@material-ui/core/es/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport classNames from 'classnames';\nimport { orderBy } from 'lodash';\nimport { inject, observer } from 'mobx-react';\nimport RouterStore from '../../stores/router';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport AccountIcon from '../../components/AccountIcon';\nimport Link from '../../components/Link';\nimport { accountOverviewRoute, onboardingAddAccountRoute } from '../../routes';\nimport AccountStore from '../../stores/account';\nimport AddressBookStore from '../../stores/addressBook';\nimport WalletStore from '../../stores/wallet';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      backgroundColor: theme.palette.background.paper\n    },\n    accountAvatar: {\n      backgroundColor: 'white',\n      border: '2px solid white'\n    },\n    accountAvatarSelected: {\n      borderColor: theme.palette.primary.dark\n    },\n    accountName: {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    fab: {\n      position: 'fixed',\n      right: 3 * theme.spacing.unit,\n      bottom: 3 * theme.spacing.unit,\n      zIndex: 1100\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface PropsInjected extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  addressBookStore: AddressBookStore;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'AccountOverview' });\n\nconst messages = defineMessages({\n  accountsListAriaLabel: {\n    id: 'accounts-list.accounts-list-aria-label',\n    description:\n      'Accessibility label for the accounts section in accounts list page',\n    defaultMessage: 'Accounts'\n  },\n  unnamedAccountLabel: {\n    id: 'accounts-list.unnamed-account-label',\n    description: 'Label for accounts that user hasn\\'t named yet',\n    defaultMessage: 'Unnamed account ({id})'\n  },\n  addAccountTooltip: {\n    id: 'accounts-list.add-account-fab-tooltip',\n    description: 'Tooltip for add account floating action button',\n    defaultMessage: 'Add an account'\n  }\n});\n\ntype State = {\n  editContactID: string | null;\n};\n\n@inject('routerStore')\n@inject('walletStore')\n@observer\nclass AccountOverview extends React.Component<DecoratedProps, State> {\n  state: State = {\n    editContactID: null\n  };\n\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  render() {\n    const { walletStore, classes, intl } = this.injected;\n    const { selectedAccount } = walletStore;\n\n    return (\n      <div className={classes.content}>\n        <List aria-label={intl.formatMessage(messages.accountsListAriaLabel)}>\n          {orderBy(\n            walletStore.listAccounts(),\n            ['pinned', 'name'],\n            ['desc', 'asc']\n          ).map((account: AccountStore) => (\n            <Link\n              key={account.id}\n              route={accountOverviewRoute}\n              params={{\n                id: account.id\n              }}\n            >\n              <ListItem button={true}>\n                <ListItemAvatar>\n                  <Avatar\n                    className={classNames(\n                      classes.accountAvatar,\n                      selectedAccount && selectedAccount.id === account.id\n                        ? classes.accountAvatarSelected\n                        : null\n                    )}\n                  >\n                    <AccountIcon size={24} address={account.id} />\n                  </Avatar>\n                </ListItemAvatar>\n                {/* TODO this doesnt observe */}\n                <ListItemText\n                  classes={{\n                    primary: classes.accountName\n                  }}\n                  primary={\n                    account.name ||\n                    intl.formatMessage(messages.unnamedAccountLabel, {\n                      id: account.localId\n                    })\n                  }\n                  secondary={account.id}\n                />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n        <Tooltip\n          placement=\"left\"\n          title={intl.formatMessage(messages.addAccountTooltip)}\n        >\n          <Link route={onboardingAddAccountRoute}>\n            <Fab classes={{ root: classes.fab }} color=\"secondary\">\n              <AddIcon />\n            </Fab>\n          </Link>\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AccountOverview));\n","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = React.createContext();\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table',\n    fontFamily: theme.typography.fontFamily,\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0\n  }\n});\n\nclass Table extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.memoizedContextValue = {};\n  }\n\n  // To replace with the corresponding Hook once Material-UI v4.0.0 is out:\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n  useMemo(contextValue) {\n    const objectKeys = Object.keys(contextValue);\n\n    for (let i = 0; i < objectKeys.length; i += 1) {\n      const objectKey = objectKeys[i];\n\n      if (contextValue[objectKey] !== this.memoizedContextValue[objectKey]) {\n        this.memoizedContextValue = contextValue;\n        break;\n      }\n    }\n\n    return this.memoizedContextValue;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      classes,\n      className,\n      component: Component,\n      padding\n    } = _this$props,\n          other = _objectWithoutPropertiesLoose(_this$props, [\"classes\", \"className\", \"component\", \"padding\"]);\n\n    return React.createElement(TableContext.Provider, {\n      value: this.useMemo({\n        padding\n      })\n    }, React.createElement(Component, _extends({\n      className: classNames(classes.root, className)\n    }, other)));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'dense', 'none'])\n} : void 0;\nTable.defaultProps = {\n  component: 'table',\n  padding: 'default'\n};\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","export { default } from './Table';","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = React.createContext();\nexport default Tablelvl2Context;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nconst contextValue = {\n  variant: 'body'\n};\n\nfunction TableBody(props) {\n  const {\n    classes,\n    className,\n    component: Component\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: contextValue\n  }, React.createElement(Component, _extends({\n    className: classNames(classes.root, className)\n  }, other)));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType\n} : void 0;\nTableBody.defaultProps = {\n  component: 'tbody'\n};\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","export { default } from './TableBody';","function deprecatedPropType(validator, reason) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n\n    return null;\n  };\n}\n\nexport default deprecatedPropType;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-cell',\n    verticalAlign: 'inherit',\n    // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n    // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n    borderBottom: `1px solid\n    ${theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)}`,\n    textAlign: 'left',\n    padding: '4px 56px 4px 24px',\n    '&:last-child': {\n      paddingRight: 24\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n  head: {\n    color: theme.palette.text.secondary,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n  body: {\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.pxToRem(13),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n  footer: {\n    borderBottom: 0,\n    color: theme.palette.text.secondary,\n    fontSize: theme.typography.pxToRem(12)\n  },\n\n  /* Styles applied to the root element if `numeric={true}`. */\n  numeric: {\n    textAlign: 'right',\n    flexDirection: 'row-reverse' // can be dynamically inherited at runtime by contents\n\n  },\n\n  /* Styles applied to the root element if `padding=\"dense\"`. */\n  paddingDense: {\n    paddingRight: 24\n  },\n\n  /* Styles applied to the root element if `padding=\"checkbox\"`. */\n  paddingCheckbox: {\n    padding: '0 12px',\n    '&:last-child': {\n      paddingRight: 12\n    }\n  },\n\n  /* Styles applied to the root element if `padding=\"none\"`. */\n  paddingNone: {\n    padding: 0,\n    '&:last-child': {\n      padding: 0\n    }\n  },\n\n  /* Styles applied to the root element if `align=\"left\"`. */\n  alignLeft: {\n    textAlign: 'left'\n  },\n\n  /* Styles applied to the root element if `align=\"center\"`. */\n  alignCenter: {\n    textAlign: 'center'\n  },\n\n  /* Styles applied to the root element if `align=\"right\"`. */\n  alignRight: {\n    textAlign: 'right',\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the root element if `align=\"justify\"`. */\n  alignJustify: {\n    textAlign: 'justify'\n  }\n});\n\nfunction TableCell(props) {\n  const {\n    align,\n    children,\n    classes,\n    className: classNameProp,\n    component,\n    sortDirection,\n    numeric = false,\n    padding: paddingProp,\n    scope: scopeProp,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"children\", \"classes\", \"className\", \"component\", \"sortDirection\", \"numeric\", \"padding\", \"scope\", \"variant\"]);\n\n  return React.createElement(TableContext.Consumer, null, table => React.createElement(Tablelvl2Context.Consumer, null, tablelvl2 => {\n    let Component;\n\n    if (component) {\n      Component = component;\n    } else {\n      Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n    }\n\n    let scope = scopeProp;\n\n    if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n      scope = 'col';\n    }\n\n    const padding = paddingProp || (table && table.padding ? table.padding : 'default');\n    const className = classNames(classes.root, {\n      [classes.head]: variant ? variant === 'head' : tablelvl2 && tablelvl2.variant === 'head',\n      [classes.body]: variant ? variant === 'body' : tablelvl2 && tablelvl2.variant === 'body',\n      [classes.footer]: variant ? variant === 'footer' : tablelvl2 && tablelvl2.variant === 'footer',\n      [classes[`align${capitalize(align)}`]]: align !== 'inherit',\n      [classes.numeric]: numeric,\n      [classes[`padding${capitalize(padding)}`]]: padding !== 'default'\n    }, classNameProp);\n    let ariaSort = null;\n\n    if (sortDirection) {\n      ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n    }\n\n    return React.createElement(Component, _extends({\n      className: className,\n      \"aria-sort\": ariaSort,\n      scope: scope\n    }, other), children);\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, content will align to the right.\n   */\n  numeric: deprecatedPropType(PropTypes.bool, 'Instead, use the `align` property.'),\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'dense', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nTableCell.defaultProps = {\n  align: 'inherit'\n};\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","export { default } from './TableCell';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nconst contextValue = {\n  variant: 'head'\n};\n\nfunction TableHead(props) {\n  const {\n    classes,\n    className,\n    component: Component\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: contextValue\n  }, React.createElement(Component, _extends({\n    className: classNames(classes.root, className)\n  }, other)));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType\n} : void 0;\nTableHead.defaultProps = {\n  component: 'thead'\n};\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","export { default } from './TableHead';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: 'inherit',\n    display: 'table-row',\n    height: 48,\n    verticalAlign: 'middle',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none',\n    '&$selected': {\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n      : 'rgba(255, 255, 255, 0.08)'\n    },\n    '&$hover:hover': {\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n      : 'rgba(255, 255, 255, 0.14)'\n    }\n  },\n\n  /* Styles applied to the root element if `selected={true}`. */\n  selected: {},\n\n  /* Styles applied to the root element if `hover={true}`. */\n  hover: {},\n\n  /* Styles applied to the root element if table variant = 'head'. */\n  head: {\n    height: 56\n  },\n\n  /* Styles applied to the root element if table variant = 'footer'. */\n  footer: {\n    height: 56\n  }\n});\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nfunction TableRow(props) {\n  const {\n    classes,\n    className: classNameProp,\n    component: Component,\n    hover,\n    selected\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  return React.createElement(Tablelvl2Context.Consumer, null, tablelvl2 => {\n    const className = classNames(classes.root, {\n      [classes.head]: tablelvl2 && tablelvl2.variant === 'head',\n      [classes.footer]: tablelvl2 && tablelvl2.variant === 'footer',\n      [classes.hover]: hover,\n      [classes.selected]: selected\n    }, classNameProp);\n    return React.createElement(Component, _extends({\n      className: className\n    }, other));\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nTableRow.defaultProps = {\n  component: 'tr',\n  hover: false,\n  selected: false\n};\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","export { default } from './TableRow';","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n})), 'People');\n\nexports.default = _default;","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { FormEvent } from 'react';\nimport {\n  FormattedMessage,\n  defineMessages,\n  injectIntl,\n  InjectedIntlProps\n} from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport { DialogContentProps, SetDialogContent } from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      maxWidth: 360,\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'RemoveContactDialogContent'\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps {\n  onConfirm: () => void;\n  address: string;\n  name: string;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'remove-contact-dialog-content.dialog-title',\n    description: 'Remove contact dialog title',\n    defaultMessage: 'Remove contact?'\n  }\n});\n\nclass RemoveContactDialogContent extends React.Component<DecoratedProps> {\n  @autoId dialogContentId: string;\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    const { onConfirm } = this.props;\n    ev.preventDefault();\n\n    onConfirm();\n  };\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { classes, name, address } = this.props;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography id={this.dialogContentId}>\n            <FormattedMessage\n              id=\"remove-contact-dialog-content.prompt-text-with-name\"\n              description=\"Prompt for contact removal form\"\n              defaultMessage={\n                'Are you sure you want to remove {name} ({address}) ' +\n                'from your address book?'\n              }\n              values={{ name, address }}\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Button type=\"submit\" fullWidth={true} autoFocus={true}>\n            <FormattedMessage\n              id=\"remove-contact-dialog-content.remove-button\"\n              description=\"Label for remove contact button.\"\n              defaultMessage=\"Remove contact\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(RemoveContactDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport RemoveContactDialogContent\n  from '../../components/content/RemoveContactDialogContent';\nimport Dialog from '../../components/Dialog';\nimport { addressBookRemoveRoute } from '../../routes';\nimport AddressBookStore from '../../stores/addressBook';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport { normalizeAddress } from '../../utils/utils';\n\ninterface Props {\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n  addressBookStore: AddressBookStore;\n}\n\n@inject('addressBookStore')\n@inject('routerStore')\n@observer\nclass RemoveContactDialog extends React.Component<Props> {\n  address = '';\n  name = '';\n\n  private get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleConfirm = () => {\n    const { navigateBackLink, routerStore, addressBookStore } = this.injected;\n    addressBookStore.contacts.delete(this.address);\n    routerStore.navigateTo(navigateBackLink);\n  }\n\n  render() {\n    const {\n      navigateBackLink,\n      routerStore,\n      addressBookStore,\n      open\n    } = this.injected;\n\n    const isOpen = open || routerStore.currentView === addressBookRemoveRoute;\n\n    if (isOpen) {\n      // Cache the data locally to prevent content changes when closing the dialog\n      this.address = normalizeAddress(routerStore.params.id);\n      this.name = addressBookStore.contacts.get(this.address) || '';\n    }\n\n    return (\n      <Dialog open={isOpen} onCloseRoute={navigateBackLink}>\n        <RemoveContactDialogContent\n          address={this.address}\n          name={this.name}\n          onConfirm={this.handleConfirm}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default RemoveContactDialog;\n","import Fab from '@material-ui/core/es/Fab';\nimport IconButton from '@material-ui/core/es/IconButton';\nimport Paper from '@material-ui/core/es/Paper';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Table from '@material-ui/core/es/Table';\nimport TableBody from '@material-ui/core/es/TableBody';\nimport TableCell from '@material-ui/core/es/TableCell';\nimport TableHead from '@material-ui/core/es/TableHead';\nimport TableRow from '@material-ui/core/es/TableRow';\nimport Tooltip from '@material-ui/core/es/Tooltip';\nimport Typography from '@material-ui/core/es/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport SendIcon from '@material-ui/icons/Send';\nimport classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport Link from '../../components/Link';\nimport {\n  addressBookRoute,\n  addressBookCreateRoute,\n  addressBookModifyRoute,\n  addressBookRemoveRoute,\n  accountSendRoute\n} from '../../routes';\nimport { AccountType } from '../../stores/account';\nimport { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport CreateContactDialog from './CreateContactDialog';\nimport ModifyContactDialog from './ModifyContactDialog';\nimport RemoveContactDialog from './RemoveContactDialog';\n\nconst styles = (theme: Theme) => {\n  const normalLayout = theme.breakpoints.up('sm');\n  const compactLayout = theme.breakpoints.down('xs');\n\n  return createStyles({\n    content: {\n      padding: theme.spacing.unit * 2\n    },\n    contentEmpty: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    fab: {\n      position: 'fixed',\n      right: 3 * theme.spacing.unit,\n      bottom: 3 * theme.spacing.unit,\n      zIndex: 1100\n    },\n    actionButton: {\n      width: 28,\n      height: 28,\n      fontSize: theme.typography.pxToRem(14)\n    },\n    cell: {\n      height: 'unset',\n      minHeight: 54,\n      padding: `${theme.spacing.unit}px ${2 * theme.spacing.unit}px`,\n      '&:last-child': {\n        padding: `${theme.spacing.unit}px ${2 * theme.spacing.unit}px`\n      },\n      wordBreak: 'break-all'\n    },\n    compactName: {\n      marginTop: 4\n    },\n    compactAddress: {\n      marginTop: 4,\n      marginBottom: 4,\n      fontStyle: 'italic'\n    },\n    actionsCell: {\n      textAlign: 'right'\n    },\n    onlyNormal: {\n      [compactLayout]: {\n        display: 'none'\n      }\n    },\n    onlyCompact: {\n      [normalLayout]: {\n        display: 'none'\n      }\n    },\n    emptyPlaceholder: {\n      textAlign: 'center',\n      maxWidth: 320\n    },\n    emptyIcon: {\n      color: theme.palette.text.secondary,\n      fontSize: '4rem',\n      opacity: 0.35\n    },\n    emptyTitle: {\n      marginBottom: 1 * theme.spacing.unit,\n      fontWeight: 500\n    },\n    emptyText: {}\n  });\n};\n\ninterface Props extends WithStyles<typeof styles> {}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface PropsInjected extends DecoratedProps {\n  walletStore: WalletStore;\n}\n\nconst stylesDecorator = withStyles(styles, { name: 'AddressBook' });\n\nconst messages = defineMessages({\n  sendFabTooltip: {\n    id: 'wallet-address-book.send-funds-fab-tooltip',\n    description: 'Tooltip for the contact list Send action button',\n    defaultMessage: 'Send RISE'\n  },\n  newContactFabTooltip: {\n    id: 'wallet-address-book.new-contact-fab-tooltip',\n    description: 'Tooltip for new contact floating action button',\n    defaultMessage: 'New contact'\n  },\n  compactColumnHeader: {\n    id: 'wallet-address-book.compact-column-header',\n    description: 'Label for the compact column in address book',\n    defaultMessage: 'Contact details'\n  },\n  nameColumnHeader: {\n    id: 'wallet-address-book.name-column-header',\n    description: 'Label for the name column in address book',\n    defaultMessage: 'Contact name'\n  },\n  addressColumnHeader: {\n    id: 'wallet-address-book.address-column-header',\n    description: 'Label for the address column in address book',\n    defaultMessage: 'Address'\n  },\n  actionsColumnHeader: {\n    id: 'wallet-address-book.actions-column-header',\n    description: 'Label for the actions column in address book',\n    defaultMessage: 'Actions'\n  },\n  actionModifyTooltip: {\n    id: 'wallet-address-book.modify-action-tooltip',\n    description: 'Label for the modify contact action button',\n    defaultMessage: 'Modify contact'\n  },\n  actionDeleteTooltip: {\n    id: 'wallet-address-book.delete-action-tooltip',\n    description: 'Label for the delete contact action button',\n    defaultMessage: 'Delete contact'\n  },\n  emptyTitle: {\n    id: 'wallet-address-book.empty-title',\n    description: 'Title for the empty address book placeholder',\n    defaultMessage: 'Your address book is empty'\n  },\n  emptyText: {\n    id: 'wallet-address-book.empty-text',\n    description: 'Text for the empty address book placeholder',\n    defaultMessage:\n      'You can create contacts in your address book to associate RISE addresses with easy to read names.'\n  }\n});\n\n@inject('walletStore')\n@observer\nclass AddressBook extends React.Component<DecoratedProps> {\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  render() {\n    const { intl, classes, walletStore } = this.injected;\n\n    const backLink: RouteLink = {\n      route: addressBookRoute\n    };\n\n    const contacts = walletStore.getAddressBook();\n    const selectedAccount = walletStore.selectedAccount;\n\n    return (\n      <div\n        className={classNames(\n          classes.content,\n          !contacts.length && classes.contentEmpty\n        )}\n      >\n        <CreateContactDialog navigateBackLink={backLink} />\n        <ModifyContactDialog navigateBackLink={backLink} />\n        <RemoveContactDialog navigateBackLink={backLink} />\n        <Tooltip\n          placement=\"left\"\n          title={intl.formatMessage(messages.newContactFabTooltip)}\n        >\n          <Link route={addressBookCreateRoute}>\n            <Fab classes={{ root: classes.fab }} color=\"secondary\">\n              <PersonAddIcon />\n            </Fab>\n          </Link>\n        </Tooltip>\n        {contacts.length > 0 ? (\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell\n                    className={classNames(classes.cell, classes.onlyCompact)}\n                    children={intl.formatMessage(messages.compactColumnHeader)}\n                  />\n                  <TableCell\n                    className={classNames(classes.cell, classes.onlyNormal)}\n                    children={intl.formatMessage(messages.nameColumnHeader)}\n                  />\n                  <TableCell\n                    className={classNames(classes.cell, classes.onlyNormal)}\n                    children={intl.formatMessage(messages.addressColumnHeader)}\n                  />\n                  <TableCell\n                    className={classNames(classes.cell, classes.actionsCell)}\n                    children={intl.formatMessage(messages.actionsColumnHeader)}\n                  />\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {contacts.map(entry => (\n                  <TableRow key={entry.id}>\n                    <TableCell\n                      className={classNames(classes.cell, classes.onlyCompact)}\n                    >\n                      <div\n                        className={classes.compactName}\n                        children={entry.name}\n                      />\n                      <div\n                        className={classes.compactAddress}\n                        children={entry.id}\n                      />\n                    </TableCell>\n                    <TableCell\n                      className={classNames(classes.cell, classes.onlyNormal)}\n                      children={entry.name}\n                    />\n                    <TableCell\n                      className={classNames(classes.cell, classes.onlyNormal)}\n                      children={entry.id}\n                    />\n                    <TableCell\n                      className={classNames(classes.cell, classes.actionsCell)}\n                    >\n                      {selectedAccount.type !== AccountType.READONLY && (\n                        <Tooltip\n                          placement=\"left\"\n                          title={intl.formatMessage(messages.sendFabTooltip)}\n                        >\n                          <Link\n                            route={accountSendRoute}\n                            params={{ id: selectedAccount.id }}\n                            queryParams={{\n                              address: entry.id\n                            }}\n                          >\n                            <IconButton className={classes.actionButton}>\n                              <SendIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          </Link>\n                        </Tooltip>\n                      )}\n                      <Tooltip\n                        title={intl.formatMessage(messages.actionModifyTooltip)}\n                      >\n                        <Link\n                          route={addressBookModifyRoute}\n                          params={{ id: entry.id }}\n                        >\n                          <IconButton className={classes.actionButton}>\n                            <EditIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Link>\n                      </Tooltip>\n                      <Tooltip\n                        title={intl.formatMessage(messages.actionDeleteTooltip)}\n                      >\n                        <Link\n                          route={addressBookRemoveRoute}\n                          params={{ id: entry.id }}\n                        >\n                          <IconButton className={classes.actionButton}>\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Link>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        ) : (\n          <div className={classes.emptyPlaceholder}>\n            <PeopleIcon className={classes.emptyIcon} />\n            <Typography\n              className={classes.emptyTitle}\n              variant=\"body2\"\n              color=\"textSecondary\"\n              children={intl.formatMessage(messages.emptyTitle)}\n            />\n            <Typography\n              className={classes.emptyText}\n              color=\"textSecondary\"\n              children={intl.formatMessage(messages.emptyText)}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AddressBook));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 4,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n\nfunction ListItemSecondaryAction(props) {\n  const {\n    children,\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, className)\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","export { default } from './ListItemSecondaryAction';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { componentPropType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    lineHeight: '48px',\n    listStyle: 'none',\n    color: theme.palette.text.secondary,\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(14)\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 72\n  },\n\n  /* Styles applied to the root element if `disableSticky={false}`. */\n  sticky: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    backgroundColor: 'inherit'\n  }\n});\n\nfunction ListSubheader(props) {\n  const {\n    classes,\n    className,\n    color,\n    component: Component,\n    disableGutters,\n    disableSticky,\n    inset\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return React.createElement(Component, _extends({\n    className: classNames(classes.root, {\n      [classes[`color${capitalize(color)}`]]: color !== 'default',\n      [classes.inset]: inset,\n      [classes.sticky]: !disableSticky,\n      [classes.gutters]: !disableGutters\n    }, className)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: componentPropType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nListSubheader.defaultProps = {\n  color: 'default',\n  component: 'li',\n  disableGutters: false,\n  disableSticky: false,\n  inset: false\n};\nListSubheader.muiName = 'ListSubheader';\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","export { default } from './ListSubheader';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    width: 62,\n    position: 'relative',\n    flexShrink: 0,\n    zIndex: 0,\n    // Reset the stacking context.\n    // For correct alignment with the text.\n    verticalAlign: 'middle'\n  },\n\n  /* Styles used to create the `icon` passed to the internal `SwitchBase` component `icon` prop. */\n  icon: {\n    boxShadow: theme.shadows[1],\n    backgroundColor: 'currentColor',\n    width: 20,\n    height: 20,\n    borderRadius: '50%'\n  },\n\n  /* Styles applied the icon element component if `checked={true}`. */\n  iconChecked: {\n    boxShadow: theme.shadows[2]\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  switchBase: {\n    padding: 0,\n    height: 48,\n    width: 48,\n    color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n\n  /* Styles applied to the internal `SwitchBase` component's `checked` class. */\n  checked: {\n    transform: 'translateX(14px)',\n    '& + $bar': {\n      opacity: 0.5\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main,\n      '& + $bar': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main,\n      '& + $bar': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the internal SwitchBase component's disabled class. */\n  disabled: {\n    '& + $bar': {\n      opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n    },\n    '& $icon': {\n      boxShadow: theme.shadows[1]\n    },\n    '&$switchBase': {\n      color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800],\n      '& + $bar': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    }\n  },\n\n  /* Styles applied to the bar element. */\n  bar: {\n    borderRadius: 14 / 2,\n    display: 'block',\n    position: 'absolute',\n    zIndex: -1,\n    width: 34,\n    height: 14,\n    top: '50%',\n    left: '50%',\n    marginTop: -7,\n    marginLeft: -17,\n    transition: theme.transitions.create(['opacity', 'background-color'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n    opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n  }\n});\n\nfunction Switch(props) {\n  const {\n    classes,\n    className,\n    color\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\"]);\n\n  return React.createElement(\"span\", {\n    className: classNames(classes.root, className)\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: React.createElement(\"span\", {\n      className: classes.icon\n    }),\n    classes: {\n      root: classNames(classes.switchBase, classes[`color${capitalize(color)}`]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    checkedIcon: React.createElement(\"span\", {\n      className: classNames(classes.icon, classes.iconChecked)\n    })\n  }, other)), React.createElement(\"span\", {\n    className: classes.bar\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Attributes applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\n} : void 0;\nSwitch.defaultProps = {\n  color: 'secondary'\n};\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","export { default } from './Switch';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withFormControlContext from '../FormControl/withFormControlContext';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    marginLeft: -14,\n    marginRight: 16,\n    // used for row presentation of radio/checkbox\n    '&$disabled': {\n      cursor: 'default'\n    }\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n  labelPlacementStart: {\n    flexDirection: 'row-reverse',\n    marginLeft: 16,\n    // used for row presentation of radio/checkbox\n    marginRight: -14\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n  labelPlacementTop: {\n    flexDirection: 'column-reverse',\n    marginLeft: 16\n  },\n\n  /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n  labelPlacementBottom: {\n    flexDirection: 'column',\n    marginLeft: 16\n  },\n\n  /* Styles applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the label's Typography component. */\n  label: {\n    '&$disabled': {\n      color: theme.palette.text.disabled\n    }\n  }\n});\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nfunction FormControlLabel(props) {\n  const {\n    classes,\n    className: classNameProp,\n    control,\n    disabled: disabledProp,\n    label,\n    labelPlacement,\n    muiFormControl\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"muiFormControl\", \"name\", \"onChange\", \"value\"]);\n\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: classNames(classes.root, {\n      [classes[`labelPlacement${capitalize(labelPlacement)}`]]: labelPlacement !== 'end',\n      [classes.disabled]: disabled\n    }, classNameProp)\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: classNames(classes.label, {\n      [classes.disabled]: disabled\n    })\n  }, label));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.string\n} : void 0;\nFormControlLabel.defaultProps = {\n  labelPlacement: 'end'\n};\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(withFormControlContext(FormControlLabel));","import { Checkbox } from '@material-ui/core';\nimport Button from '@material-ui/core/es/Button';\nimport FormControlLabel from '@material-ui/core/es/FormControlLabel/FormControlLabel';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport bip39 from 'bip39';\nimport React, { ChangeEvent, FormEvent, ReactEventHandler } from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport { RawAmount } from '../../utils/amounts';\nimport autoId from '../../utils/autoId';\nimport { formatAmount } from '../../utils/utils';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    error: {\n      color: theme.palette.error.main\n    },\n    checkbox: {\n      textAlign: 'left',\n      width: '100%'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'AddSecondPassphraseDialogContent'\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  onSubmit: (passphrase: string) => void;\n  onClose: ReactEventHandler<{}>;\n  passphrase?: string;\n  passphraseFee: RawAmount;\n  error?: null | 'already-set' | 'insufficient-funds';\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nexport interface State {\n  passphrase: string;\n  passphraseInvalid: boolean;\n  passphraseConfirmed: boolean;\n  passphraseConfirmedError?: boolean;\n}\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'add-second-passphrase-dialog-content.dialog-title',\n    description: 'Add second passphrase dialog title',\n    defaultMessage: 'Setup 2nd passphrase'\n  },\n  invalidPassphrase: {\n    id: 'add-second-passphrase-dialog-content.invalid-passphrase',\n    description: 'Error label for invalid passphrase text input',\n    defaultMessage: 'Invalid passphrase. Passphrase cannot be empty.'\n  }\n});\n\nclass AddSecondPassphraseDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  state: State = {\n    passphrase: '',\n    passphraseInvalid: false,\n    passphraseConfirmed: false\n  };\n\n  constructor(props: DecoratedProps) {\n    super(props);\n    this.state.passphrase = props.passphrase || bip39.generateMnemonic();\n  }\n\n  handlePassphraseChanged = (ev: ChangeEvent<HTMLInputElement>) => {\n    const passphrase = ev.target.value.trim();\n\n    this.props.onFormChanged(Boolean(passphrase));\n\n    this.setState({\n      passphrase,\n      passphraseInvalid: false\n    });\n  };\n\n  handlePassphraseBlur = () => {\n    const { passphrase } = this.state;\n    const passphraseInvalid = !!passphrase && !!this.passphraseError();\n    this.setState({ passphraseInvalid });\n  };\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { onSubmit } = this.props;\n    const { passphrase, passphraseConfirmed } = this.state;\n\n    const passphraseInvalid = !!this.passphraseError();\n    if (passphraseInvalid) {\n      return this.setState({\n        passphraseInvalid\n      });\n    }\n    if (!passphraseConfirmed) {\n      return this.setState({\n        passphraseConfirmedError: true\n      });\n    }\n\n    onSubmit(passphrase);\n  };\n\n  handlePassphraseConfirmed = (ev: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      passphraseConfirmed: Boolean(ev.target.checked),\n      passphraseConfirmedError: false\n    });\n  };\n\n  passphraseError(): string | null {\n    const { intl } = this.props;\n    const { passphrase } = this.state;\n\n    return passphrase ? null : intl.formatMessage(messages.invalidPassphrase);\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, error, passphraseFee } = this.props;\n    const {\n      passphrase,\n      passphraseInvalid,\n      passphraseConfirmed,\n      passphraseConfirmedError\n    } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography id={this.dialogContentId}>\n            <FormattedMessage\n              id=\"add-second-passphrase-dialog-content.instructions-about\"\n              description=\"Instructions for setup 2nd passphrase form\"\n              defaultMessage={\n                'The second passphrase offers an extra layer of protection for forgers ' +\n                'whose primary mnemonic is stored on servers which can potentially get ' +\n                'hacked and compromise the primary mnemonic.'\n              }\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <Typography>\n            <FormattedMessage\n              id=\"add-second-passphrase-dialog-content.instructions-immutable-pregenerated\"\n              description={\n                'Warning about the 2nd passphrase being immutable and ' +\n                'suggesting the pre-generated one'\n              }\n              defaultMessage={\n                'Once the 2nd passphrase has been set it cannot be changed ' +\n                'nor removed. Your passphrase depends totally on you, but we ' +\n                'recommend using the pre-generated one.'\n              }\n            />\n          </Typography>\n        </Grid>\n        {error === 'insufficient-funds' && (\n          <Grid item={true} xs={12}>\n            <Typography color=\"error\">\n              <FormattedMessage\n                id=\"add-second-passphrase-dialog-content.insufficient-funds-error\"\n                description=\"Error about not having enough funds to setup a passphrase\"\n                defaultMessage={\n                  \"You don't have enough funds in your account to pay the network fee \" +\n                  'of {fee} to setup a 2nd passphrase!'\n                }\n                values={{ fee: formatAmount(intl, passphraseFee) }}\n              />\n            </Typography>\n          </Grid>\n        )}\n        {error === 'already-set' && (\n          <Grid item={true} xs={12}>\n            <Typography color=\"error\">\n              <FormattedMessage\n                id=\"add-second-passphrase-dialog-content.already-set-error\"\n                description=\"Error about the 2nd passphrase being set already\"\n                defaultMessage={\n                  \"You've already set a 2nd passphrase for this account. You need to \" +\n                  'create a new account if you wish to change your passphrase.'\n                }\n              />\n            </Typography>\n          </Grid>\n        )}\n        {!error && (\n          <Grid item={true} xs={12}>\n            <TextField\n              autoFocus={true}\n              label={\n                <FormattedMessage\n                  id=\"add-second-passphrase-dialog-content.passphrase-input-label\"\n                  description=\"Label for 2nd passphrase text field.\"\n                  defaultMessage=\"2nd passphrase\"\n                />\n              }\n              value={passphrase}\n              onChange={this.handlePassphraseChanged}\n              onBlur={this.handlePassphraseBlur}\n              fullWidth={true}\n              error={passphraseInvalid}\n              FormHelperTextProps={{ error: passphraseInvalid }}\n              helperText={passphraseInvalid ? this.passphraseError() || '' : ''}\n            />\n\n            <FormControlLabel\n              className={classes.checkbox}\n              control={\n                <Checkbox\n                  className={passphraseConfirmedError ? classes.error : ''}\n                  checked={passphraseConfirmed}\n                  onChange={this.handlePassphraseConfirmed}\n                />\n              }\n              label={\n                <FormattedMessage\n                  id=\"add-second-passphrase-dialog-content.passphrase-stored\"\n                  description=\"Checkbox confirming the users stored the passphrase\"\n                  defaultMessage=\"I have securely stored the second passphrase\"\n                />\n              }\n            />\n          </Grid>\n        )}\n        <Grid item={true} xs={12}>\n          {!error ? (\n            <Button type=\"submit\" fullWidth={true}>\n              <FormattedMessage\n                id=\"add-second-passphrase-dialog-content.continue-button\"\n                description=\"Label for continue button.\"\n                defaultMessage=\"Continue\"\n              />\n            </Button>\n          ) : (\n            <Button onClick={this.props.onClose} fullWidth={true}>\n              <FormattedMessage\n                id=\"add-second-passphrase-dialog-content.close-button\"\n                description=\"Label for close button.\"\n                defaultMessage=\"Close\"\n              />\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AddSecondPassphraseDialogContent));\n","import { reaction, IReactionDisposer, runInAction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport AddSecondPassphraseDialogContent\n  from '../../components/content/AddSecondPassphraseDialogContent';\nimport {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport { accountSettingsPassphraseRoute } from '../../routes';\nimport AccountStore, { AccountType } from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport { derivePublicKey } from '../../utils/utils';\nimport ConfirmTransactionDialog from './ConfirmTransactionDialog';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface PropsInjected extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  step: 'form' | 'transaction';\n  transaction: null | {\n    passphrase: string;\n    publicKey: string;\n  };\n}\n\n@inject('ledgerStore')\n@inject('routerStore')\n@inject('walletStore')\n@observer\nclass AddSecondPassphraseDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  disposeOpenMonitor: null | IReactionDisposer = null;\n  state: State = {\n    step: 'form',\n    transaction: null\n  };\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  get account(): AccountStore {\n    return this.injected.account;\n  }\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n\n    const { navigateBackLink, routerStore } = this.injected;\n    routerStore.navigateTo(navigateBackLink);\n    return false;\n  }\n\n  handleNavigateBack = (ev: React.SyntheticEvent<{}>) => {\n    this.setState({\n      step: 'form',\n      transaction: null\n    });\n  }\n\n  handleAddPassphrase = (passphrase: string) => {\n    // ledger requires to be open in a click handler\n    if (this.account.type === AccountType.LEDGER) {\n      this.injected.ledgerStore.open();\n    }\n\n    this.setState({\n      step: 'transaction',\n      transaction: {\n        passphrase,\n        publicKey: derivePublicKey(passphrase)\n      }\n    });\n  }\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  }\n\n  createTransaction = () => {\n    const { account, walletStore } = this.injected;\n    const { step, transaction } = this.state;\n\n    if (step === 'transaction') {\n      return walletStore.createPassphraseTx(\n        transaction!.passphrase!,\n        account.id\n      );\n    } else {\n      throw new Error('Invalid internal state');\n    }\n  }\n\n  onSuccess = () => {\n    const { transaction } = this.state;\n    const { account } = this.injected;\n    // set the passphrase locally\n    const publicKey = derivePublicKey(transaction!.passphrase!);\n    runInAction(() => {\n      account.secondPublicKey = publicKey;\n      account.secondSignature = true;\n    });\n  }\n\n  resetState() {\n    this.setState({\n      step: 'form',\n      transaction: null\n    });\n  }\n\n  componentWillMount() {\n    this.disposeOpenMonitor = reaction(\n      () => this.isOpen,\n      isOpen => {\n        if (isOpen) {\n          this.resetState();\n        }\n      }\n    );\n\n    this.resetState();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeOpenMonitor) {\n      this.disposeOpenMonitor();\n      this.disposeOpenMonitor = null;\n    }\n  }\n\n  get isOpen() {\n    const { routerStore, open } = this.injected;\n    return open || routerStore.currentView === accountSettingsPassphraseRoute;\n  }\n\n  render() {\n    const { account, navigateBackLink } = this.injected;\n    const { step, transaction } = this.state;\n\n    const canGoBack = step !== 'form';\n\n    return (\n      <ConfirmTransactionDialog\n        open={this.isOpen}\n        account={account}\n        transaction={\n          transaction\n            ? {\n                kind: 'passphrase'\n              }\n            : null\n        }\n        passphrasePublicKey={transaction ? transaction.publicKey : ''}\n        onCreateTransaction={this.createTransaction}\n        onSuccess={this.onSuccess}\n        onClose={this.handleClose}\n        onCloseRoute={navigateBackLink}\n        onNavigateBack={canGoBack ? this.handleNavigateBack : undefined}\n        children={this.renderPassphraseContent()}\n      />\n    );\n  }\n\n  renderPassphraseContent() {\n    const { account, walletStore } = this.injected;\n    const fee = walletStore.fees.get('secondsignature')!;\n    const isSet = account.secondSignature;\n\n    return (\n      <AddSecondPassphraseDialogContent\n        onFormChanged={this.handleFormChanged}\n        onSubmit={this.handleAddPassphrase}\n        onClose={this.handleClose}\n        passphraseFee={fee}\n        error={\n          isSet\n            ? 'already-set'\n            : account.balance.lt(fee)\n              ? 'insufficient-funds'\n              : null\n        }\n      />\n    );\n  }\n}\n\nexport default AddSecondPassphraseDialog;\n","export { default } from './NativeSelect';","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport NativeSelect from '@material-ui/core/es/NativeSelect';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport {\n  FormattedMessage,\n  defineMessages,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, { name: 'ChooseFiatDialogContent' });\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'choose-fiat-dialog-content.dialog-title',\n    description: 'Choose FIAT dialog title',\n    defaultMessage: 'Displayed FIAT currency'\n  },\n  instructions: {\n    id: 'choose-fiat-dialog-content.instructions',\n    description: 'Instructions before the fiat currency selection field',\n    defaultMessage:\n      'Select which FIAT currency you prefer to see your ' +\n      'RISE account value in.'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  onSubmit: (value: { fiat: string; global: boolean }) => void;\n  fiat: string;\n  options: string[];\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  fiat: string;\n}\n\nclass ChooseFiatDialogContent extends React.Component<DecoratedProps, State> {\n  @autoId dialogContentId: string;\n\n  constructor(props: DecoratedProps) {\n    super(props);\n\n    const { fiat } = this.props;\n    this.state = { fiat };\n  }\n\n  handleFiatChange = (ev: ChangeEvent<HTMLSelectElement>) => {\n    const fiat = ev.target.value;\n    this.setState({ fiat });\n    this.props.onFormChanged(this.props.fiat !== fiat);\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { onSubmit } = this.props;\n    const { fiat } = this.state;\n    onSubmit({\n      fiat,\n      global: false\n    });\n  }\n\n  handleUpdateForAllClick = () => {\n    const { onSubmit } = this.props;\n    const { fiat } = this.state;\n    onSubmit({\n      fiat,\n      global: true\n    });\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, options } = this.props;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography\n            id={this.dialogContentId}\n            children={intl.formatMessage(messages.instructions)}\n          />\n        </Grid>\n        <Grid item={true} xs={12}>\n          <NativeSelect\n            autoFocus={true}\n            value={this.state.fiat}\n            onChange={this.handleFiatChange}\n            fullWidth={true}\n          >\n            {options.map(name => (\n              <option key={name} value={name}>\n                {name}\n              </option>\n            ))}\n          </NativeSelect>\n        </Grid>\n        <Grid item={true} xs={12} sm={6}>\n          <Button type=\"submit\" fullWidth={true}>\n            <FormattedMessage\n              id=\"choose-fiat-dialog-content.update-for-one\"\n              description=\"Update FIAT for one account button label\"\n              defaultMessage=\"Set for this account\"\n            />\n          </Button>\n        </Grid>\n        <Grid item={true} xs={12} sm={6}>\n          <Button onClick={this.handleUpdateForAllClick} fullWidth={true}>\n            <FormattedMessage\n              id=\"choose-fiat-dialog-content.update-for-all\"\n              description=\"Update FIAT for all accounts button label\"\n              defaultMessage=\"Set for all accounts\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(ChooseFiatDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport ChooseFiatDialogContent\n  from '../../components/content/ChooseFiatDialogContent';\nimport Dialog, {\n  ICloseInterruptControllerState,\n  ICloseInterruptController\n} from '../../components/Dialog';\nimport { accountSettingsFiatRoute } from '../../routes';\nimport AccountStore from '../../stores/account';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n}\n\ninterface State extends ICloseInterruptControllerState {}\n\n@inject('routerStore')\n@inject('walletStore')\n@observer\nclass ChooseFiatDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  state: State = {};\n\n  protected get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleSubmit = (data: { fiat: string; global: boolean }) => {\n    const { account, navigateBackLink, routerStore, walletStore } = this.injected;\n\n    if (data.global) {\n      for (const acc of walletStore.accounts.values()) {\n        acc.fiatCurrency = data.fiat;\n      }\n    } else {\n      account.fiatCurrency = data.fiat;\n    }\n\n    routerStore.navigateTo(navigateBackLink);\n  }\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n    return false;\n  }\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  }\n\n  render() {\n    const {\n      account,\n      navigateBackLink,\n      routerStore,\n      walletStore,\n      open\n    } = this.injected;\n\n    const isOpen = open || routerStore.currentView === accountSettingsFiatRoute;\n\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={this.handleClose}\n      >\n        <ChooseFiatDialogContent\n          onFormChanged={this.handleFormChanged}\n          key={account.id}\n          fiat={account.fiatCurrency}\n          options={walletStore.config.fiat_currencies}\n          onSubmit={this.handleSubmit}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default ChooseFiatDialog;\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent, ReactEventHandler } from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport { RawAmount } from '../../utils/amounts';\nimport autoId from '../../utils/autoId';\nimport {\n  normalizeAddress,\n  normalizeUsername,\n  formatAmount,\n  derivePublicKey\n} from '../../utils/utils';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    forgingLabel: {\n      textAlign: 'left',\n      padding: 8\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'RegisterDelegateDialogContent'\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  delegateFee: RawAmount;\n  registeredUsername?: string;\n  forgingPK: string | null;\n  error?: null | 'insufficient-funds';\n  onSubmit: (data: StateForm) => void;\n  onClose: ReactEventHandler<{}>;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nexport interface StateForm {\n  username: string;\n  mnemonic: string;\n  forgingPK: string;\n}\n\ninterface State extends StateForm {\n  usernameInvalid: boolean;\n  mnemonicInvalid: boolean;\n}\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'register-delegate-dialog-content.dialog-title',\n    description: 'Register delegate dialog title',\n    defaultMessage: 'Delegate registration'\n  },\n  invalidUsername: {\n    id: 'forms-register-delegate.invalid-username',\n    description: 'Error label for invalid username text input',\n    defaultMessage:\n      'Invalid delegate username. A valid username consists ' +\n      'of letters (a-z), numbers (0-9) and/or some symbols (!@$&_.)'\n  },\n  invalidUsernameTooLong: {\n    id: 'forms-register-delegate.invalid-username-too-long',\n    description: 'Error label for username text input exceeding max length',\n    defaultMessage:\n      'Too long delegate username. Maximum length is 20 characters.'\n  },\n  invalidUsernameLikeAddress: {\n    id: 'forms-register-delegate.invalid-username-like-address',\n    description:\n      'Error label for username text input that looks like an address',\n    defaultMessage:\n      'Invalid delegate username. The username cannot resemble an address.'\n  },\n  invalidUsernameUppercase: {\n    id: 'forms-register-delegate.invalid-username-uppercase',\n    description:\n      'Error label for invalid username text input that contains uppercase letters',\n    defaultMessage:\n      'Invalid delegate username. The username cannot contain ' +\n      'uppercase characters'\n  },\n  invalidMnemonicGeneric: {\n    id: 'forms-register-delegate.invalid-mnemonic-generic',\n    description: 'Error label for invalid mnemonic text input',\n    defaultMessage: 'Invalid secret. Any string is a valid one.'\n  }\n});\n\nclass RegisterDelegateDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  state: State = {\n    username: '',\n    usernameInvalid: false,\n    mnemonic: '',\n    mnemonicInvalid: false,\n    forgingPK: ''\n  };\n\n  componentDidMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n\n    this.mnemonicToForgingKey();\n  }\n\n  handleUsernameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const username = ev.target.value.trim();\n    const { onFormChanged } = this.props;\n\n    this.setState({\n      username,\n      usernameInvalid: false\n    });\n\n    onFormChanged(true);\n  };\n\n  handleUsernameBlur = () => {\n    this.setState({\n      usernameInvalid: Boolean(this.usernameError())\n    });\n  };\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    const { onSubmit, registeredUsername } = this.props;\n\n    ev.preventDefault();\n\n    const usernameError = Boolean(this.usernameError());\n    const mnemonicError = Boolean(this.mnemonicError());\n    if ((!registeredUsername && usernameError) || mnemonicError) {\n      this.setState({\n        usernameInvalid: !registeredUsername ? usernameError : false,\n        mnemonicInvalid: mnemonicError\n      });\n      return;\n    }\n\n    const { username, mnemonic, forgingPK } = this.state;\n\n    onSubmit({\n      username,\n      mnemonic,\n      forgingPK\n    });\n  };\n\n  mnemonicToForgingKey() {\n    const mnemonic = (this.state.mnemonic || '').trim();\n    const forgingPK = mnemonic ? derivePublicKey(mnemonic) : '';\n    this.setState({\n      forgingPK\n    });\n  }\n\n  handleMnemonicChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      mnemonic: ev.target.value,\n      mnemonicInvalid: false\n    });\n  };\n\n  handleMnemonicBlur = () => {\n    this.mnemonicToForgingKey();\n    const mnemonic = (this.state.mnemonic || '').trim();\n    const forgingPK = mnemonic ? derivePublicKey(mnemonic) : '';\n    this.setState({\n      mnemonicInvalid: !Boolean(mnemonic) || !Boolean(forgingPK)\n    });\n    this.props.onFormChanged(true);\n  };\n\n  usernameError(): string | null {\n    const { intl } = this.props;\n    const { username } = this.state;\n\n    if (normalizeUsername(username)) {\n      return null;\n    } else if (username.length > 20) {\n      return intl.formatMessage(messages.invalidUsernameTooLong);\n    } else if (normalizeAddress(username) !== '') {\n      return intl.formatMessage(messages.invalidUsernameLikeAddress);\n    } else if (username !== username.toLowerCase()) {\n      return intl.formatMessage(messages.invalidUsernameUppercase);\n    } else {\n      return intl.formatMessage(messages.invalidUsername);\n    }\n  }\n\n  mnemonicError(): string | null {\n    const { intl } = this.props;\n\n    if (!this.state.mnemonicInvalid) {\n      return null;\n    }\n\n    return intl.formatMessage(messages.invalidMnemonicGeneric);\n  }\n\n  render() {\n    const { intl, classes, error, delegateFee } = this.props;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n        id={this.dialogContentId}\n      >\n        <Grid item={true} xs={12}>\n          <Typography>\n            <FormattedMessage\n              id=\"forms-register-delegate.instructions\"\n              description=\"Instructions for delegate registration form\"\n              defaultMessage={\n                'Becoming a delegate requires registration. You may choose your own ' +\n                'delegate name, which can be used to promote your delegate. Only the ' +\n                'top 101 delegates are eligible to forge. All fees are shared equally ' +\n                'between the top 101 delegates.'\n              }\n            />\n          </Typography>\n        </Grid>\n        {error === 'insufficient-funds' && (\n          <Grid item={true} xs={12}>\n            <Typography color=\"error\">\n              <FormattedMessage\n                id=\"forms-register-delegate.insufficient-funds-error\"\n                description=\"Error about not having enough funds to register as a delegate\"\n                defaultMessage={\n                  \"You don't have enough funds in your account to pay the network fee \" +\n                  'of {fee} for registering as a delegate!'\n                }\n                values={{ fee: formatAmount(intl, delegateFee) }}\n              />\n            </Typography>\n          </Grid>\n        )}\n        {!error && this.renderUsername()}\n        {!error && this.renderMnemonic()}\n        <Grid item={true} xs={12}>\n          {!error && (\n            <Button type=\"submit\" fullWidth={true}>\n              <FormattedMessage\n                id=\"forms-register-delegate.continue-button\"\n                description=\"Label for continue button.\"\n                defaultMessage=\"Continue\"\n              />\n            </Button>\n          )}\n          {error && (\n            <Button fullWidth={true} onClick={this.props.onClose}>\n              <FormattedMessage\n                id=\"forms-register-delegate.close-button\"\n                description=\"Label for close button.\"\n                defaultMessage=\"Close\"\n              />\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderUsername() {\n    const { registeredUsername } = this.props;\n    const { username, usernameInvalid } = this.state;\n\n    const usernameToShow = registeredUsername || username;\n\n    const alreadyRegistered = Boolean(registeredUsername);\n\n    if (alreadyRegistered) {\n      return null;\n    }\n\n    return (\n      <Grid item={true} xs={12}>\n        <TextField\n          autoFocus={true}\n          label={\n            <FormattedMessage\n              id=\"forms-register-delegate.username-input-label\"\n              description=\"Label for delegate username text field.\"\n              defaultMessage=\"Username\"\n            />\n          }\n          value={usernameToShow}\n          fullWidth={true}\n          error={usernameInvalid}\n          FormHelperTextProps={{\n            error: usernameInvalid\n          }}\n          helperText={usernameInvalid ? this.usernameError() || '' : ''}\n          onChange={this.handleUsernameChange}\n          onBlur={this.handleUsernameBlur}\n        />\n      </Grid>\n    );\n  }\n\n  renderMnemonic() {\n    const { mnemonic, mnemonicInvalid } = this.state;\n    const { registeredUsername, classes } = this.props;\n\n    const forgingPK = this.state.forgingPK || this.props.forgingPK || '';\n    const alreadyRegistered = Boolean(registeredUsername);\n\n    return (\n      <>\n        {alreadyRegistered && (\n          <Grid item={true} xs={12}>\n            <Typography>\n              <FormattedMessage\n                id=\"forms-register-delegate.change-forging-pk\"\n                description=\"Instructions for changing the forging public key\"\n                defaultMessage={\n                  'Type in a new secret to change your Forging Public Key.'\n                }\n              />\n            </Typography>\n          </Grid>\n        )}\n        <Grid item={true} xs={12}>\n          <TextField\n            fullWidth={true}\n            label={\n              <FormattedMessage\n                id=\"forms-register-delegate.secret-input-label\"\n                description=\"Secret for the forging key\"\n                defaultMessage=\"Secret for the forging key\"\n              />\n            }\n            error={mnemonicInvalid}\n            value={mnemonic}\n            helperText={this.mnemonicError()}\n            FormHelperTextProps={{\n              error: mnemonicInvalid\n            }}\n            onChange={this.handleMnemonicChange}\n            onBlur={this.handleMnemonicBlur}\n          />\n        </Grid>\n        <Grid item={true} xs={12} className={classes.forgingLabel}>\n          <Typography>\n            <FormattedMessage\n              id=\"forms-register-delegate.forging-pk-input-label\"\n              description=\"Label for the forging key.\"\n              defaultMessage=\"Forging Key\"\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            autoFocus={true}\n            value={forgingPK}\n            fullWidth={true}\n            disabled={true}\n          />\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(RegisterDelegateDialogContent));\n","import { reaction, IReactionDisposer } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport RegisterDelegateDialogContent, { StateForm } from '../../components/content/RegisterDelegateDialogContent';\nimport {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport { accountSettingsDelegateRoute } from '../../routes';\nimport AccountStore, { LoadingState, AccountType } from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport ConfirmTransactionDialog from './ConfirmTransactionDialog';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface PropsInjected extends Props {\n  ledgerStore: LedgerStore;\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  step: 'form' | 'transaction';\n  transaction: null | StateForm;\n}\n\n@inject('ledgerStore')\n@inject('routerStore')\n@inject('walletStore')\n@observer\nclass RegisterDelegateDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  disposeOpenMonitor: null | IReactionDisposer = null;\n  state: State = {\n    step: 'form',\n    transaction: null\n  };\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  get account(): AccountStore {\n    return this.injected.account;\n  }\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n\n    const { navigateBackLink, routerStore } = this.injected;\n    routerStore.navigateTo(navigateBackLink);\n    return false;\n  };\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  };\n\n  handleNavigateBack = (ev: React.SyntheticEvent<{}>) => {\n    this.setState({\n      step: 'form',\n      transaction: null\n    });\n  };\n\n  handleFormSubmit = (data: StateForm) => {\n    // ledger requires to be open in a click handler\n    if (this.account.type === AccountType.LEDGER) {\n      this.injected.ledgerStore.open();\n    }\n\n    this.setState({\n      step: 'transaction',\n      transaction: data\n    });\n  };\n\n  handleCreateTransaction = () => {\n    const { account, walletStore } = this.injected;\n    const { step, transaction } = this.state;\n\n    if (step === 'transaction' && transaction !== null) {\n      return walletStore.createRegisterDelegateTx(\n        transaction.username,\n        transaction.forgingPK,\n        account.id\n      );\n    } else {\n      throw new Error('Invalid internal state');\n    }\n  };\n\n  resetState() {\n    this.setState({\n      step: 'form',\n      transaction: null\n    });\n  }\n\n  componentWillMount() {\n    this.disposeOpenMonitor = reaction(\n      () => this.isOpen,\n      isOpen => {\n        if (isOpen) {\n          this.resetState();\n        }\n      }\n    );\n\n    this.resetState();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeOpenMonitor) {\n      this.disposeOpenMonitor();\n      this.disposeOpenMonitor = null;\n    }\n  }\n\n  get isOpen() {\n    const { routerStore, open } = this.injected;\n    return open || routerStore.currentView === accountSettingsDelegateRoute;\n  }\n\n  render() {\n    const { account, navigateBackLink } = this.injected;\n    const { step, transaction } = this.state;\n    const { registeredDelegate } = account;\n\n    const canGoBack = step !== 'form';\n\n    return (\n      <ConfirmTransactionDialog\n        open={this.isOpen}\n        account={account}\n        transaction={\n          transaction\n            ? {\n                kind: 'delegate',\n                forgingPK: transaction.forgingPK,\n                username: registeredDelegate ? '' : transaction.username\n              }\n            : null\n        }\n        onCreateTransaction={this.handleCreateTransaction}\n        onClose={this.handleClose}\n        onCloseRoute={navigateBackLink}\n        onNavigateBack={canGoBack ? this.handleNavigateBack : undefined}\n        children={this.renderDelegateContent()}\n      />\n    );\n  }\n\n  renderDelegateContent() {\n    const { account, walletStore } = this.injected;\n    const { registeredDelegate } = account;\n    const fee = walletStore.fees.get('delegate')!;\n\n    if (account.registeredDelegateState === LoadingState.NOT_LOADED) {\n      walletStore.loadRegisteredDelegate(account.id);\n    }\n\n    const regUsername = registeredDelegate ? registeredDelegate.username : '';\n    return (\n      <RegisterDelegateDialogContent\n        onFormChanged={this.handleFormChanged}\n        onSubmit={this.handleFormSubmit}\n        onClose={this.handleClose}\n        delegateFee={fee}\n        registeredUsername={regUsername}\n        forgingPK={account.forgingPK}\n        error={\n          !registeredDelegate && account.balance.lt(fee)\n            ? 'insufficient-funds'\n            : null\n        }\n      />\n    );\n  }\n}\n\nexport default RegisterDelegateDialog;\n","import React from 'react';\nimport pure from 'recompose/pure';\nimport SvgIcon from '../../SvgIcon';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n});\n\nlet CheckBoxOutlineBlank = props => React.createElement(SvgIcon, props, _ref);\n\nCheckBoxOutlineBlank = pure(CheckBoxOutlineBlank);\nCheckBoxOutlineBlank.muiName = 'SvgIcon';\nexport default CheckBoxOutlineBlank;","import React from 'react';\nimport pure from 'recompose/pure';\nimport SvgIcon from '../../SvgIcon';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n});\n\nlet CheckBox = props => React.createElement(SvgIcon, props, _ref);\n\nCheckBox = pure(CheckBox);\nCheckBox.muiName = 'SvgIcon';\nexport default CheckBox;","import React from 'react';\nimport pure from 'recompose/pure';\nimport SvgIcon from '../../SvgIcon';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n});\n\nlet IndeterminateCheckBox = props => React.createElement(SvgIcon, props, _ref);\n\nIndeterminateCheckBox = pure(IndeterminateCheckBox);\nIndeterminateCheckBox.muiName = 'SvgIcon';\nexport default IndeterminateCheckBox;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.secondary\n  },\n\n  /* Styles applied to the root element if `checked={true}`. */\n  checked: {},\n\n  /* Styles applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `indeterminate={true}`. */\n  indeterminate: {},\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked': {\n      color: theme.palette.primary.main\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked': {\n      color: theme.palette.secondary.main\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }\n});\n\nfunction Checkbox(props) {\n  const {\n    checkedIcon,\n    classes,\n    className,\n    color,\n    icon,\n    indeterminate,\n    indeterminateIcon,\n    inputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"classes\", \"className\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    className: classNames({\n      [classes.indeterminate]: indeterminate\n    }, className),\n    classes: {\n      root: classNames(classes.root, classes[`color${capitalize(color)}`]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * Properties applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Use that property to pass a ref callback to the native input component.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component property `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.string\n} : void 0;\nCheckbox.defaultProps = {\n  checkedIcon: React.createElement(CheckBoxIcon, null),\n  color: 'secondary',\n  icon: React.createElement(CheckBoxOutlineBlankIcon, null),\n  indeterminate: false,\n  indeterminateIcon: React.createElement(IndeterminateCheckBoxIcon, null)\n};\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import Button from '@material-ui/core/es/Button';\nimport Checkbox from '@material-ui/core/es/Checkbox/Checkbox';\nimport FormControlLabel from '@material-ui/core/es/FormControlLabel/FormControlLabel';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport React, { ChangeEvent, FormEvent } from 'react';\nimport {\n  FormattedMessage,\n  defineMessages,\n  injectIntl,\n  InjectedIntlProps\n} from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport { DialogContentProps, SetDialogContent } from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    saveContact: {\n      textAlign: 'left'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'RemoveAccountDialogContent'\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps {\n  onSubmit: (saveContact: boolean) => void;\n  address: string;\n  name: string | null;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  addressInput: string;\n  addressInvalid: boolean;\n  saveContact: boolean;\n}\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'remove-account-dialog-content.dialog-title',\n    description: 'Remove account dialog title',\n    defaultMessage: 'Remove account?'\n  },\n  invalidAddress: {\n    id: 'remove-account-dialog-content.invalid-address',\n    description: 'Error label for invalid account address',\n    defaultMessage: \"Account address doesn't match the one you want to remove\"\n  }\n});\n\nclass RemoveAccountDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  constructor(props: DecoratedProps) {\n    super(props);\n\n    this.state = {\n      addressInput: '',\n      addressInvalid: false,\n      saveContact: !!this.props.name\n    };\n  }\n\n  handleAddressChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const addressInput = ev.target.value;\n    this.setState({\n      addressInput,\n      addressInvalid: false\n    });\n  };\n\n  handleSaveContactChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      saveContact: Boolean(ev.target.checked)\n    });\n  };\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    const { onSubmit } = this.props;\n    ev.preventDefault();\n\n    const addressInvalid = !!this.addressError();\n    if (addressInvalid) {\n      this.setState({\n        addressInvalid\n      });\n      return;\n    }\n\n    onSubmit(this.state.saveContact);\n  };\n\n  addressError(): null | string {\n    const { intl, address } = this.props;\n    const { addressInput } = this.state;\n\n    if (addressInput.trim() === address) {\n      return null;\n    } else {\n      return intl.formatMessage(messages.invalidAddress);\n    }\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { classes, name, address } = this.props;\n    const { addressInput, addressInvalid, saveContact } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <Grid item={true} xs={12}>\n          <Typography id={this.dialogContentId}>\n            {name ? (\n              <FormattedMessage\n                id=\"remove-account-dialog-content.prompt-text-with-name\"\n                description=\"Prompt for named account removal form\"\n                defaultMessage={\n                  'Are you sure you want to remove {name} ({address}) from the wallet? ' +\n                  'To confirm, enter the account address in the field below.'\n                }\n                values={{ name, address }}\n              />\n            ) : (\n              <FormattedMessage\n                id=\"remove-account-dialog-content.prompt-text\"\n                description=\"Prompt for unnamed account removal form\"\n                defaultMessage={\n                  'Are you sure you want to remove account {address} from the wallet? ' +\n                  'To confirm, enter the account address in the field below.'\n                }\n                values={{ address }}\n              />\n            )}\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12}>\n          <TextField\n            autoFocus={true}\n            label={\n              <FormattedMessage\n                id=\"remove-account-dialog-content.address-input-label\"\n                description=\"Label for account address text field.\"\n                defaultMessage=\"Account address\"\n              />\n            }\n            value={addressInput}\n            onChange={this.handleAddressChange}\n            error={addressInvalid}\n            helperText={addressInvalid ? this.addressError() : null}\n            fullWidth={true}\n          />\n        </Grid>\n        {name && (\n          <Grid item={true} xs={12} className={classes.saveContact}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={saveContact}\n                  onChange={this.handleSaveContactChange}\n                />\n              }\n              label={\n                <FormattedMessage\n                  id=\"remove-account-dialog-content.save-contact\"\n                  description=\"Checkbox when removing an own account\"\n                  defaultMessage=\"Remember account's name in the address book\"\n                />\n              }\n            />\n          </Grid>\n        )}\n        <Grid item={true} xs={12}>\n          <Button type=\"submit\" fullWidth={true}>\n            <FormattedMessage\n              id=\"remove-account-dialog-content.remove-button\"\n              description=\"Label for remove account button.\"\n              defaultMessage=\"Remove account\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(RemoveAccountDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport RemoveAccountDialogContent from '../../components/content/RemoveAccountDialogContent';\nimport Dialog from '../../components/Dialog';\nimport { accountSettingsRemoveRoute } from '../../routes';\nimport AccountStore from '../../stores/account';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n}\n\n@inject('walletStore')\n@inject('routerStore')\n@observer\nclass RemoveAccountDialog extends React.Component<Props> {\n  private get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleSubmit = (saveContact: boolean) => {\n    const {\n      account,\n      navigateBackLink,\n      routerStore,\n      walletStore\n    } = this.injected;\n    walletStore.removeAccount(account.id);\n    // save the contact to the address book\n    if (saveContact) {\n      walletStore.addressBook.contacts.set(account.id, account.name);\n    }\n    routerStore.navigateTo(navigateBackLink);\n  };\n\n  render() {\n    const { account, navigateBackLink, routerStore, open } = this.injected;\n\n    const isOpen =\n      open || routerStore.currentView === accountSettingsRemoveRoute;\n\n    return (\n      <Dialog open={isOpen} onCloseRoute={navigateBackLink}>\n        <RemoveAccountDialogContent\n          name={account.name}\n          address={account.id}\n          onSubmit={this.handleSubmit}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default RemoveAccountDialog;\n","import { withStyles, WithStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/es/Avatar/Avatar';\nimport Button from '@material-ui/core/es/Button/Button';\nimport Grid from '@material-ui/core/es/Grid/Grid';\nimport List from '@material-ui/core/es/List/List';\nimport ListItem from '@material-ui/core/es/ListItem/ListItem';\nimport ListItemAvatar from '@material-ui/core/es/ListItemAvatar/ListItemAvatar';\nimport ListItemText from '@material-ui/core/es/ListItemText/ListItemText';\nimport { createStyles } from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { observable, action, runInAction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport {\n  defineMessages,\n  injectIntl,\n  InjectedIntlProps,\n  FormattedMessage\n} from 'react-intl';\nimport AccountIcon from '../../components/AccountIcon';\nimport Dialog, {\n  SetDialogContent,\n  DialogContentProps\n} from '../../components/Dialog';\nimport LedgerConfirmIllustration from '../../components/LedgerConfirmIllustration';\nimport LedgerConnectIllustration from '../../components/LedgerConnectIllustration';\nimport { accountSettingsLedgerRoute } from '../../routes';\nimport { accountStore } from '../../stores';\nimport AccountStore from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport autoId from '../../utils/autoId';\n\ntype Props = WithStyles<typeof styles> &\n  DialogContentProps & {\n    account: AccountStore;\n    navigateBackLink: RouteLink;\n    open?: boolean;\n  };\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface PropsInjected extends Props {\n  accountStore: AccountStore;\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n}\n\ninterface State {\n  confirmed: boolean;\n}\n\nconst styles = createStyles({\n  content: {\n    padding: 20,\n    textAlign: 'center'\n  },\n  noPadding: {\n    marginLeft: -20,\n    marginRight: -20\n  },\n  accountAvatar: {\n    backgroundColor: 'white'\n  }\n});\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'VerifyLedgerDialog'\n});\n\nconst messages = defineMessages({\n  connectInstructionsV2: {\n    id: 'verify-ledger-address.connect-instructions',\n    description:\n      'Text instructing the user to open the RISE app on their Ledger device',\n    defaultMessage:\n      'Connect your Ledger, open the RISE app and click Discover Device below.'\n  },\n  unsupportedBrowser: {\n    id: 'verify-ledger-address.unsupported-browser',\n    description:\n      \"Message when trying to use a browser that doesn't support Ledger devices\",\n    defaultMessage:\n      \"Your browser doesn't support using a Ledger device. If you wish to access this feature, \" +\n      'you could try again with Google Chrome. It is a browser known to implement support for this.'\n  },\n  statusConnecting: {\n    id: 'verify-ledger-address.status-connecting',\n    description: 'Status text when attempting to connect to the Ledger device',\n    defaultMessage: 'Trying to connect...'\n  },\n  statusConnectingHelpLink: {\n    id: 'verify-ledger-address.status-connecting-help-link',\n    description: 'Content of the link to the ledger support page',\n    defaultMessage: 'visit the support page'\n  },\n  accountNrLabel: {\n    id: 'verify-ledger-address.account-nr-label',\n    description: 'Label for the account number available for import',\n    defaultMessage: 'Account #{number}'\n  },\n  confirmInstructions: {\n    id: 'verify-ledger-address.confirm-instructions',\n    description:\n      'Text instructing the user to confirm their address on their Ledger',\n    defaultMessage: 'Please confirm the address above on your Ledger device.'\n  },\n  closeDialog: {\n    id: 'verify-ledger-address.close-dialog',\n    description: 'Button to close the dialog after a successful verification',\n    defaultMessage: 'Close'\n  },\n  verificationSuccessful: {\n    id: 'verify-ledger-address.success',\n    description:\n      'Text visible after the user successfully verified the address',\n    defaultMessage:\n      'You have successfully verified the account address on your Ledger device.'\n  },\n  dialogTitle: {\n    id: 'verify-ledger-address.dialog-title',\n    description: 'Verify Ledger Address dialog title',\n    defaultMessage: 'Verify Ledger Address'\n  },\n  statusWaitingConfirmation: {\n    id: 'verify-ledger-address.status-waiting-confirmation',\n    description: 'Status text when waiting for user to confirm the account',\n    defaultMessage:\n      'Waiting for confirmation... ({seconds} {seconds, plural,' +\n      '  one {second}' +\n      '  other {seconds}' +\n      '} remaining)'\n  }\n});\n\n@inject(accountStore)\n@inject('walletStore')\n@inject('routerStore')\n@inject('ledgerStore')\n@observer\nclass VerifyLedgerDialog extends React.Component<DecoratedProps, State> {\n  @autoId dialogContentId: string;\n  state: State = {\n    confirmed: false\n  };\n  open: boolean = false;\n  private countdownId: null | number = null;\n  @observable private countdownSeconds: number = 0;\n  @observable private timeout: null | Date = null;\n\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  get account() {\n    return this.injected.account || this.injected.accountStore;\n  }\n\n  onOpen = () => {\n    if (this.open) {\n      return;\n    }\n    this.open = true;\n    const { intl } = this.injected;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  };\n\n  onDiscoverLedger = () => {\n    this.injected.ledgerStore.open();\n  };\n\n  onClose = () => {\n    if (!this.open) {\n      return;\n    }\n    this.open = false;\n    this.injected.ledgerStore.close();\n    runInAction(() => {\n      this.timeout = null;\n    });\n    // TODO temp hack, remove once onOpen isnt called by render\n    //   (which is also a hack)\n    setTimeout(() => {\n      this.setState({ confirmed: false });\n    });\n  };\n\n  @action\n  updateSelectionCountdown = () => {\n    const now = new Date();\n    const remainMs =\n      this.timeout !== null ? this.timeout.getTime() - now.getTime() : 0;\n    const isCountdownActive = remainMs > 0;\n\n    if (isCountdownActive) {\n      this.countdownSeconds = Math.ceil(remainMs / 1000);\n    }\n\n    if (isCountdownActive && this.countdownId === null) {\n      this.countdownId = window.setInterval(this.updateSelectionCountdown, 250);\n    } else if (!isCountdownActive && this.countdownId !== null) {\n      window.clearInterval(this.countdownId);\n      this.countdownId = null;\n    }\n  };\n\n  handleVerifyLedger = async () => {\n    const { ledgerStore } = this.injected;\n    if (!ledgerStore.device || this.state.confirmed || this.timeout) {\n      return;\n    }\n\n    this.timeout = new Date(\n      new Date().getTime() + ledgerStore.confirmationTimeout\n    );\n    this.updateSelectionCountdown();\n\n    try {\n      const confirmed = await ledgerStore.confirmAccount(this.account!.hwSlot!);\n      this.setState({ confirmed });\n    } catch (e) {\n      // silent\n    }\n  };\n\n  handleCloseButton = () => {\n    this.onClose();\n    this.injected.routerStore.navigateTo(this.injected.navigateBackLink);\n  };\n\n  render() {\n    const {\n      navigateBackLink,\n      routerStore,\n      open,\n      intl,\n      classes,\n      ledgerStore\n    } = this.injected;\n    const account = this.account;\n    let device;\n    let confirmed;\n\n    this.handleVerifyLedger();\n\n    // TODO refactor and inherit, call outside of render()\n    const isOpen =\n      open || routerStore.currentView === accountSettingsLedgerRoute;\n\n    if (isOpen) {\n      this.onOpen();\n\n      device = ledgerStore.device;\n      confirmed = this.state.confirmed;\n    } else if (this.open) {\n      // TODO dialog doesnt call onClose if onCloseRoute is passed along\n      this.onClose();\n    }\n\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={this.onClose}\n      >\n        {!ledgerStore.hasSupport ? (\n          <Grid container={true} className={classes.content} spacing={16}>\n            <Grid item={true} xs={12}>\n              <Typography\n                children={intl.formatMessage(messages.unsupportedBrowser)}\n              />\n            </Grid>\n          </Grid>\n        ) : !device ? (\n          <Grid container={true} className={classes.content} spacing={16}>\n            <Grid item={true} xs={12}>\n              <Typography\n                children={intl.formatMessage(messages.connectInstructionsV2)}\n              />\n            </Grid>\n            <Grid item={true} xs={12}>\n              <div className={classes.noPadding}>\n                <LedgerConnectIllustration onClick={this.onDiscoverLedger} />\n              </div>\n            </Grid>\n            <Grid item={true} xs={12}>\n              <Typography\n                children={intl.formatMessage(messages.statusConnecting)}\n              />\n              {this.getConnectingHelpMsg()}\n            </Grid>\n          </Grid>\n        ) : (\n          <>\n            <List>\n              <ListItem key={account.hwSlot!} divider={true}>\n                <ListItemAvatar>\n                  <Avatar className={classes.accountAvatar}>\n                    <AccountIcon size={24} address={account.id} />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={intl.formatMessage(messages.accountNrLabel, {\n                    number: account.hwSlot! + 1\n                  })}\n                  secondary={account.id}\n                />\n              </ListItem>\n            </List>\n            {!confirmed && (\n              <Grid container={true} className={classes.content} spacing={16}>\n                <Grid item={true} xs={12}>\n                  <Typography\n                    children={intl.formatMessage(messages.confirmInstructions)}\n                  />\n                </Grid>\n                <Grid item={true} xs={12}>\n                  <div className={classes.noPadding}>\n                    <LedgerConfirmIllustration />\n                  </div>\n                </Grid>\n                <Grid item={true} xs={12}>\n                  <Typography\n                    children={intl.formatMessage(\n                      messages.statusWaitingConfirmation,\n                      { seconds: this.countdownSeconds }\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {confirmed && (\n              <Grid container={true} className={classes.content} spacing={16}>\n                <Grid item={true} xs={12}>\n                  <Typography\n                    children={intl.formatMessage(\n                      messages.verificationSuccessful\n                    )}\n                  />\n                </Grid>\n                <Grid item={true} xs={12}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth={true}\n                    children={intl.formatMessage(messages.closeDialog)}\n                    onClick={this.handleCloseButton}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </>\n        )}\n      </Dialog>\n    );\n  }\n\n  getConnectingHelpMsg() {\n    const { intl } = this.injected;\n    return (\n      <Typography>\n        <FormattedMessage\n          id=\"verify-ledger-address.status-connecting-help-v2\"\n          description=\"Link to the help page regarding Ledger connection problems\"\n          defaultMessage=\"In case of problems please {link}.\"\n          values={{\n            link: (\n              <a\n                href=\"https://support.ledger.com/hc/en-us/articles/115005165269-Fix-connection-issues\"\n                target=\"_blank\"\n              >\n                {intl.formatMessage(messages.statusConnectingHelpLink)}\n              </a>\n            )\n          }}\n        />\n      </Typography>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(VerifyLedgerDialog));\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport { ChangeEvent, FormEvent } from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport AccountTip from '../AccountTip';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'VerifyMnemonicDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'verify-mnemonic-dialog-content.dialog-title',\n    description: 'Verify Mnemonic dialog title',\n    defaultMessage: 'Verify Mnemonic'\n  },\n  instructions: {\n    id: 'verify-mnemonic-dialog-content.instructions',\n    description: 'Instructions before the verify mnemonic input field',\n    defaultMessage: 'You can verify that your mnemonic matches this account.'\n  },\n  mnemonicField: {\n    id: 'verify-mnemonic-dialog-content.mnemonic-input-label',\n    description: 'Mnemonic text field label',\n    defaultMessage: 'Secret mnemonic'\n  },\n  mnemonicIncorrect: {\n    id: 'verify-mnemonic-dialog-content.mnemonic-input-error',\n    description: 'Mnemonic text field error message',\n    defaultMessage: 'Your secret mnemonic did\\'t match with this account'\n  },\n  verifyButton: {\n    id: 'verify-mnemonic-dialog-content.verify-button-label',\n    description: 'Verify mnemonic button label',\n    defaultMessage: 'Verify Mnemonic'\n  },\n  closeButton: {\n    id: 'verify-mnemonic-dialog-content.close-button-label',\n    description:\n      'Close dialog button label once the mnemonic has been verified',\n    defaultMessage: 'Close dialog'\n  },\n  verified: {\n    id: 'verify-mnemonic-dialog-content.verified-msg',\n    description: 'Message visible after the mnemonic has been verified',\n    defaultMessage:\n      'Provided secret mnemonic matches the one assigned with this account, all OK.'\n  }\n});\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  account: {\n    address: string;\n  };\n  closeDialog(): void;\n  onSubmit(account: { address: string; mnemonic: string }): boolean;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  mnemonic: string;\n  error: boolean;\n  verified: boolean;\n}\n\nclass VerifyMnemonicDialogContent extends React.Component<\n  DecoratedProps,\n  State\n> {\n  @autoId dialogContentId: string;\n\n  state = {\n    mnemonic: '',\n    error: false,\n    verified: false\n  };\n\n  handleNameChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const mnemonic = ev.target.value;\n    this.props.onFormChanged(Boolean(this.state.mnemonic));\n    this.setState({ mnemonic });\n  }\n\n  handleFormSubmit = (ev: FormEvent<HTMLFormElement>) => {\n    ev.preventDefault();\n\n    const { onSubmit, account, closeDialog } = this.props;\n    const { mnemonic, verified } = this.state;\n\n    if (verified) {\n      closeDialog();\n      return;\n    }\n\n    const match = onSubmit({\n      address: account.address,\n      mnemonic: mnemonic.trim()\n    });\n    this.setState({\n      error: !match,\n      verified: match\n    });\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { intl, classes, account } = this.props;\n\n    const { mnemonic, error, verified } = this.state;\n\n    return (\n      <Grid\n        className={classes.content}\n        container={true}\n        spacing={16}\n        component=\"form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        {/* NOT VERIFIED */ !verified && (\n          <React.Fragment>\n            <Grid item={true} xs={12}>\n              <Typography\n                id={this.dialogContentId}\n                children={intl.formatMessage(messages.instructions, {\n                  address: account.address\n                })}\n              />\n            </Grid>\n            <Grid item={true} xs={12}>\n              <TextField\n                label={intl.formatMessage(messages.mnemonicField)}\n                autoFocus={true}\n                error={error}\n                helperText={\n                  error && intl.formatMessage(messages.mnemonicIncorrect)\n                }\n                value={mnemonic}\n                onChange={this.handleNameChange}\n                fullWidth={true}\n              />\n            </Grid>\n            <Grid item={true} xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth={true}\n                children={intl.formatMessage(messages.verifyButton)}\n              />\n            </Grid>\n          </React.Fragment>\n        )}\n        {/*VERIFIED*/ verified && (\n          <React.Fragment>\n            <AccountTip\n              open={true}\n              message={intl.formatMessage(messages.verified)}\n            />\n            <Grid item={true} xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth={true}\n                children={intl.formatMessage(messages.closeButton)}\n              />\n            </Grid>\n          </React.Fragment>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(VerifyMnemonicDialogContent));\n","import { action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport { As } from 'type-tagger';\nimport VerifyMnemonicDialogContent from '../../components/content/VerifyMnemonicDialogContent';\nimport Dialog, {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport { accountSettingsVerifyMnemonicRoute } from '../../routes';\nimport AccountStore from '../../stores/account';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport { derivePublicKey } from '../../utils/utils';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface InjectedProps extends Props {\n  routerStore: RouterStore;\n}\n\ninterface State extends ICloseInterruptControllerState {}\n\n@inject('routerStore')\n@observer\nclass VerifyMnemonicDialog extends React.Component<Props>\n  implements ICloseInterruptController {\n  state: State = {\n    formChanged: false\n  };\n\n  protected get injected(): InjectedProps {\n    return this.props as InjectedProps;\n  }\n\n  @action\n  handleSubmit = (data: { mnemonic: string }): boolean => {\n    const { account } = this.injected;\n    // TODO verify that the mnemonic matches the public key\n    const publicKey = account.publicKey as string & As<'publicKey'>;\n    return derivePublicKey(data.mnemonic) === publicKey;\n  };\n\n  closeDialog = () => {\n    const { navigateBackLink, routerStore } = this.injected;\n    routerStore.navigateTo(navigateBackLink);\n  };\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    return Boolean(this.state.formChanged);\n  };\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  };\n\n  render() {\n    const { account, navigateBackLink, routerStore, open } = this.injected;\n\n    const isOpen =\n      open || routerStore.currentView === accountSettingsVerifyMnemonicRoute;\n\n    return (\n      <Dialog\n        open={isOpen}\n        onCloseRoute={navigateBackLink}\n        onClose={this.handleClose}\n      >\n        <VerifyMnemonicDialogContent\n          onFormChanged={this.handleFormChanged}\n          account={{\n            address: account.id\n          }}\n          onSubmit={this.handleSubmit}\n          closeDialog={this.closeDialog}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default VerifyMnemonicDialog;\n","import Button from '@material-ui/core/es/Button';\nimport Paper from '@material-ui/core/es/Paper';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { Delegate } from 'risejs/dist/es5/types/beans';\nimport { FullDelegate } from '../utils/utils';\nimport AccountIcon from './AccountIcon';\nimport LoadingIndicator from './LoadingIndicator';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'relative'\n    },\n    inactive: {\n      opacity: 0.5\n    },\n    hidden: {\n      visibility: 'hidden'\n    },\n    content: {\n      display: 'flex',\n      flexDirection: 'row',\n      '& > *': {\n        margin: theme.spacing.unit\n      },\n      '& > * + *': {\n        marginLeft: 0\n      }\n    },\n    delegateIcon: {},\n    delegateInfo: {\n      flex: 1,\n      textAlign: 'left'\n    },\n    delegateName: {\n      ...theme.typography.body2,\n      fontWeight: 500\n    },\n    delegateAddress: {},\n    delegateStats: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none',\n      ...theme.typography.body2,\n      display: 'flex',\n      flexDirection: 'row',\n      '& > *': {\n        display: 'block',\n        flex: 1\n      }\n    },\n    button: {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    overlay: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onSubmit: (delegate: Delegate, addVote: boolean) => void;\n  delegate:\n    | FullDelegate| null;\n  hasVote: boolean;\n  isLoading: boolean;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles);\n\nconst messages = defineMessages({\n  rankTitle: {\n    id: 'delegate-vote-component.rank-title',\n    description: 'Title for rank statistic',\n    defaultMessage: 'Rank'\n  },\n  rankAriaLabel: {\n    id: 'delegate-vote-component.rank-aria-label',\n    description: 'Aria label for rank statistic',\n    defaultMessage: 'Rank: #{rank}'\n  },\n  uptimeTitle: {\n    id: 'delegate-vote-component.uptime-title',\n    description: 'Title for uptime statistic',\n    defaultMessage: 'Uptime'\n  },\n  uptimeAriaLabel: {\n    id: 'delegate-vote-component.uptime-aria-label',\n    description: 'Aria label for uptime statistic',\n    defaultMessage: 'Uptime: {uptime}'\n  },\n  approvalTitle: {\n    id: 'delegate-vote-component.approval-title',\n    description: 'Title for approval statistic',\n    defaultMessage: 'Approval'\n  },\n  approvalAriaLabel: {\n    id: 'delegate-vote-component.approval-aria-label',\n    description: 'Aria label for approval statistic',\n    defaultMessage: 'Approval: {approval}'\n  },\n  addVote: {\n    id: 'delegate-vote-component.add-vote',\n    description: 'Add vote button label',\n    defaultMessage: 'Cast vote'\n  },\n  removeVote: {\n    id: 'delegate-vote-component.remove-vote',\n    description: 'Remove vote button label',\n    defaultMessage: 'Remove vote'\n  },\n  noResult: {\n    id: 'delegate-vote-component.no-result',\n    description: 'No results label',\n    defaultMessage: 'No result to display'\n  }\n});\n\n@observer\nclass DelegateVoteComponent extends React.Component<DecoratedProps> {\n  handleButtonClick = () => {\n    const { onSubmit, delegate, hasVote } = this.props;\n    if (delegate) {\n      onSubmit(delegate, !hasVote);\n    }\n  }\n\n  render() {\n    const { intl, classes, delegate, hasVote, isLoading } = this.props;\n\n    const display = isLoading ? 'loading' : delegate ? 'delegate' : 'empty';\n\n    const { username, address, rank, uptime, approval } = delegate\n      ? {\n          username: delegate.username,\n          address: delegate.address,\n          rank: intl.formatNumber(delegate.infos.rankV2),\n          uptime: intl.formatNumber(\n            parseInt(delegate.infos.productivity, 10) / 100,\n            {\n              style: 'percent',\n              maximumFractionDigits: 2\n            }\n          ),\n          approval: intl.formatNumber(\n            parseInt(delegate.infos.approval, 10) / 100,\n            {\n              style: 'percent',\n              maximumFractionDigits: 2\n            }\n          )\n        }\n      : {\n          username: 'N/A',\n          address: 'N/A',\n          rank: 'N/A',\n          uptime: 'N/A',\n          approval: 'N/A'\n        };\n\n    return (\n      <Paper\n        className={classNames(\n          classes.root,\n          display === 'empty' && classes.inactive\n        )}\n      >\n        <div\n          className={classNames(\n            classes.content,\n            display === 'delegate' || classes.hidden\n          )}\n        >\n          <AccountIcon\n            className={classes.delegateIcon}\n            size={64}\n            address={address}\n          />\n          <div className={classes.delegateInfo}>\n            <Typography className={classes.delegateName}>{username}</Typography>\n            <Typography className={classes.delegateAddress}>\n              {address}\n            </Typography>\n            <ul className={classes.delegateStats}>\n              <li\n                title={intl.formatMessage(messages.rankTitle)}\n                aria-label={intl.formatMessage(messages.rankAriaLabel, {\n                  rank\n                })}\n              >\n                R: #{rank}\n              </li>\n              <li\n                title={intl.formatMessage(messages.uptimeTitle)}\n                aria-label={intl.formatMessage(messages.uptimeAriaLabel, {\n                  uptime\n                })}\n              >\n                U: {uptime}\n              </li>\n              <li\n                title={intl.formatMessage(messages.approvalTitle)}\n                aria-label={intl.formatMessage(messages.approvalAriaLabel, {\n                  approval\n                })}\n              >\n                A: {approval}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <Button\n          className={classNames(\n            classes.button,\n            display === 'delegate' || classes.hidden\n          )}\n          fullWidth={true}\n          onClick={this.handleButtonClick}\n        >\n          {intl.formatMessage(\n            !hasVote ? messages.addVote : messages.removeVote\n          )}\n        </Button>\n        {display === 'empty' && (\n          <div className={classes.overlay}>\n            <Typography>{intl.formatMessage(messages.noResult)}</Typography>\n          </div>\n        )}\n        {display === 'loading' && <LoadingIndicator />}\n      </Paper>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(DelegateVoteComponent));\n","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport TextField from '@material-ui/core/es/TextField';\nimport Typography from '@material-ui/core/es/Typography';\nimport { range } from 'lodash';\nimport React, { ReactEventHandler, ChangeEvent } from 'react';\nimport {\n  FormattedMessage,\n  defineMessages,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport { Delegate } from 'risejs/dist/es5/types/beans';\nimport { RawAmount } from '../../utils/amounts';\nimport autoId from '../../utils/autoId';\nimport { formatAmount, FullDelegate } from '../../utils/utils';\nimport DelegateVoteComponent from '../DelegateVoteComponent';\nimport {\n  DialogContentProps,\n  SetDialogContent,\n  ICloseInterruptFormProps\n} from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    searchTitle: {\n      ...theme.typography.body2,\n      color: theme.palette.text.secondary,\n      fontWeight: 500\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, {\n  name: 'VoteDelegateDialogContent'\n});\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'vote-delegate-dialog-content.dialog-title',\n    description: 'Vote delegate name dialog title',\n    defaultMessage: 'Vote for delegate'\n  },\n  instructions: {\n    id: 'vote-delegate-dialog-content.instructions',\n    description: 'Instructions before the delegate voting section',\n    defaultMessage:\n      'New blocks on the RISE blockchain are forged by the top 101 ' +\n      'delegates. You as the user determine who those delegates are by ' +\n      'casting a vote.'\n  }\n});\n\ntype SuggestionsContent = {\n  kind: 'suggestions';\n  delegates:\n    FullDelegate[];\n};\n\ntype ResultsContent = {\n  kind: 'search-results';\n  query: string;\n  delegates:\n    FullDelegate[];\n};\n\ntype ErrorContent = {\n  kind: 'insufficient-funds';\n  onClose: ReactEventHandler<{}>;\n};\n\ntype Content = SuggestionsContent | ResultsContent | ErrorContent;\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps, ICloseInterruptFormProps {\n  query: string;\n  onQueryChange: (query: string) => void;\n  // TODO rename to onSubmit\n  onSelect: (delegate: Delegate) => void;\n  isLoading: boolean;\n  votedDelegate: Delegate | null;\n  voteFee: RawAmount;\n  content: Content;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nclass VoteDelegateDialogContent extends React.Component<DecoratedProps> {\n  @autoId dialogContentId: string;\n\n  handleQueryChange = (ev: ChangeEvent<HTMLInputElement>) => {\n    const query = ev.target.value;\n    const { onQueryChange, onFormChanged } = this.props;\n    onQueryChange(query);\n    onFormChanged(Boolean(query));\n  }\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const {\n      intl,\n      classes,\n      query,\n      onSelect,\n      isLoading,\n      votedDelegate,\n      voteFee,\n      content\n    } = this.props;\n\n    return (\n      <Grid className={classes.content} container={true} spacing={16}>\n        <Grid item={true} xs={12}>\n          <Typography\n            id={this.dialogContentId}\n            children={intl.formatMessage(messages.instructions)}\n          />\n        </Grid>\n        {content.kind === 'insufficient-funds' && (\n          <>\n            <Grid item={true} xs={12}>\n              <Typography color=\"error\">\n                <FormattedMessage\n                  id=\"vote-delegate-dialog-content.insufficient-funds-error\"\n                  description=\"Error about not having enough funds to vote for a delegate\"\n                  defaultMessage={\n                    'You don\\'t have enough funds in your account to pay the' +\n                    ' network fee of {fee} for casting a vote for a delegate!'\n                  }\n                  values={{\n                    fee: formatAmount(intl, voteFee)\n                  }}\n                />\n              </Typography>\n            </Grid>\n            <Grid item={true} xs={12}>\n              <Button fullWidth={true} onClick={content.onClose}>\n                <FormattedMessage\n                  id=\"vote-delegate-dialog-content.close-button\"\n                  description=\"Label for close button.\"\n                  defaultMessage=\"Close\"\n                />\n              </Button>\n            </Grid>\n          </>\n        )}\n        {(content.kind === 'suggestions' ||\n          content.kind === 'search-results') && (\n          <>\n            <Grid item={true} xs={12}>\n              <TextField\n                autoFocus={true}\n                label={\n                  <FormattedMessage\n                    id=\"vote-delegate-dialog-content.search-box-label\"\n                    description=\"Delegate search box label\"\n                    defaultMessage=\"Find delegates by username or address\"\n                  />\n                }\n                value={query}\n                fullWidth={true}\n                onChange={this.handleQueryChange}\n              />\n            </Grid>\n            <Grid item={true} xs={12}>\n              <Typography\n                className={classes.searchTitle}\n                align=\"left\"\n                component=\"p\"\n              >\n                {content.kind === 'search-results' ? (\n                  <FormattedMessage\n                    id=\"vote-delegate-dialog-content.results-subtitle\"\n                    description=\"Title for search results\"\n                    defaultMessage={'Search results for \"{query}\"'}\n                    values={{\n                      query: content.query\n                    }}\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"vote-delegate-dialog-content.suggested-subtitle\"\n                    description=\"Title for suggested delegates\"\n                    defaultMessage=\"Suggested delegates\"\n                  />\n                )}\n              </Typography>\n            </Grid>\n            {range(3).map(n => {\n              const delegate = content.delegates[n] || null;\n              const hasVote =\n                delegate && votedDelegate\n                  ? delegate.forgingPK === votedDelegate.forgingPK\n                  : false;\n              return (\n                <Grid\n                  key={delegate ? delegate.address : `placeholder-${n}`}\n                  item={true}\n                  xs={12}\n                >\n                  <DelegateVoteComponent\n                    delegate={delegate}\n                    onSubmit={() => onSelect(delegate)}\n                    hasVote={hasVote}\n                    isLoading={isLoading}\n                  />\n                </Grid>\n              );\n            })}\n          </>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(VoteDelegateDialogContent));\n","import { throttle, sampleSize } from 'lodash';\nimport { reaction, IReactionDisposer, observe, Lambda } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { Delegate } from 'risejs/dist/es5/types/beans';\nimport VoteDelegateDialogContent from '../../components/content/VoteDelegateDialogContent';\nimport {\n  ICloseInterruptController,\n  ICloseInterruptControllerState\n} from '../../components/Dialog';\nimport { accountSettingsVoteRoute } from '../../routes';\nimport AccountStore, { LoadingState, AccountType } from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport { normalizeAddress, FullDelegate } from '../../utils/utils';\nimport ConfirmTransactionDialog from './ConfirmTransactionDialog';\n\ninterface Props {\n  account: AccountStore;\n  navigateBackLink: RouteLink;\n  open?: boolean;\n}\n\ninterface PropsInjected extends Props {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n}\n\ninterface State extends ICloseInterruptControllerState {\n  step: 'vote' | 'transaction';\n  query: string;\n  search: {\n    isLoading: boolean;\n    query: string;\n    delegates: FullDelegate[];\n  };\n  transaction: null | {\n    add: string[];\n    remove: string[];\n    delegate: Delegate;\n  };\n}\n\n@inject('routerStore')\n@inject('walletStore')\n@inject('ledgerStore')\n@observer\nclass VoteDelegateDialog extends React.Component<Props, State>\n  implements ICloseInterruptController {\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  get account(): AccountStore {\n    return this.injected.account;\n  }\n\n  get isOpen() {\n    const { routerStore, open } = this.injected;\n    return open || routerStore.currentView === accountSettingsVoteRoute;\n  }\n\n  disposeOpenMonitor: null | IReactionDisposer = null;\n  disposeSuggestionsObserver: Lambda | null;\n\n  lastSearch = 0;\n  state: State = {\n    step: 'vote',\n    query: '',\n    search: {\n      isLoading: true,\n      query: '',\n      delegates: []\n    },\n    transaction: null\n  };\n\n  searchDelegates = throttle(\n    async (query: string) => {\n      const thisSearch = ++this.lastSearch;\n      const { walletStore } = this.injected;\n      query = query.trim().toLowerCase();\n\n      // search by address\n      const isID = normalizeAddress(query);\n      if (isID) {\n        return this.searchByID(query);\n      }\n\n      // search by query\n      this.setState({\n        search: {\n          isLoading: true,\n          query,\n          delegates: []\n        }\n      });\n\n      const result = await walletStore.searchDelegates(query);\n      // Make sure that the results are still something that the user is interested in\n      if (this.lastSearch !== thisSearch) {\n        return;\n      }\n\n      this.setState({\n        search: {\n          isLoading: false,\n          query,\n          delegates: result.slice(0, 3)\n        }\n      });\n    },\n    500,\n    { leading: false, trailing: true }\n  );\n\n  searchByID = async (query: string) => {\n    const thisSearch = ++this.lastSearch;\n    const { walletStore } = this.injected;\n\n    // search by query\n    this.setState({\n      search: {\n        isLoading: true,\n        query,\n        delegates: []\n      }\n    });\n\n    const match = await walletStore.fetchDelegateByID(query.toUpperCase());\n\n    if (this.lastSearch !== thisSearch) {\n      return;\n    }\n\n    this.setState({\n      search: {\n        isLoading: false,\n        query,\n        delegates: match ? [match] : []\n      }\n    });\n  };\n\n  handleClose = (ev: React.SyntheticEvent<{}>) => {\n    // @ts-ignore\n    const tagName = ev.currentTarget.tagName;\n    const isButton =\n      tagName && tagName.toLowerCase() === 'button' && ev.type === 'click';\n\n    if (this.state.formChanged && !isButton) {\n      return true;\n    }\n\n    const { routerStore, navigateBackLink } = this.injected;\n    routerStore.navigateTo(navigateBackLink);\n    return false;\n  };\n\n  handleFormChanged = (changed: boolean) => {\n    this.setState({ formChanged: changed });\n  };\n\n  handleNavigateBack = (ev: React.SyntheticEvent<{}>) => {\n    this.setState({\n      step: 'vote',\n      transaction: null\n    });\n  };\n\n  handleQueryChange = (query: string) => {\n    this.setState({ query });\n    if (query.trim()) {\n      this.searchDelegates(query);\n    } else {\n      this.suggestDelegates();\n    }\n  };\n\n  handleSelectDelegate = (delegate: Delegate) => {\n    const { account } = this.injected;\n    const { votedDelegate } = account;\n\n    // ledger requires to be open in a click handler\n    if (this.account.type === AccountType.LEDGER) {\n      this.injected.ledgerStore.open();\n    }\n\n    let removeNames = [];\n    let addNames = [];\n\n    const isRemoveTx =\n      votedDelegate && votedDelegate.forgingPK === delegate.forgingPK;\n    if (votedDelegate) {\n      removeNames.push(votedDelegate.username);\n    }\n    if (!isRemoveTx) {\n      addNames.push(delegate.username);\n    }\n\n    this.setState({\n      step: 'transaction',\n      transaction: {\n        add: addNames,\n        remove: removeNames,\n        delegate\n      }\n    });\n  };\n\n  suggestDelegates() {\n    const { walletStore } = this.injected;\n\n    this.setState({\n      search: {\n        isLoading: false,\n        query: '',\n        delegates: sampleSize(walletStore.suggestedDelegates, 3)\n      }\n    });\n  }\n\n  handleCreateTransaction = () => {\n    const { account, walletStore } = this.injected;\n    const { step, transaction } = this.state;\n\n    if (step === 'transaction' && transaction !== null) {\n      return walletStore.createVoteTx(\n        transaction.delegate.username,\n        account.id\n      );\n    } else {\n      throw new Error('Invalid internal state');\n    }\n  };\n\n  resetState() {\n    this.setState({\n      query: '',\n      step: 'vote',\n      transaction: null\n    });\n    // pass async\n    this.injected.walletStore.fetchSuggestedDelegates();\n    this.suggestDelegates();\n\n    // load the current vote (settings should preload)\n    const { account, walletStore } = this.injected;\n    if (account.votedDelegateState === LoadingState.NOT_LOADED) {\n      walletStore.loadVotedDelegate(account.id);\n    }\n  }\n\n  componentWillMount() {\n    this.disposeOpenMonitor = reaction(\n      () => this.isOpen,\n      isOpen => {\n        if (isOpen) {\n          this.resetState();\n        }\n      }\n    );\n    this.disposeSuggestionsObserver = observe(\n      this.injected.walletStore,\n      'suggestedDelegates',\n      () => {\n        if (!this.state.search.query) {\n          this.suggestDelegates();\n        }\n      }\n    );\n\n    this.resetState();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeOpenMonitor) {\n      this.disposeOpenMonitor();\n      this.disposeOpenMonitor = null;\n    }\n    if (this.disposeSuggestionsObserver) {\n      this.disposeSuggestionsObserver();\n      this.disposeSuggestionsObserver = null;\n    }\n  }\n\n  render() {\n    const { account, navigateBackLink } = this.injected;\n    const { step, transaction } = this.state;\n\n    const canGoBack = step !== 'vote';\n\n    return (\n      <ConfirmTransactionDialog\n        open={this.isOpen}\n        account={account}\n        transaction={\n          transaction\n            ? {\n                kind: 'vote',\n                add: transaction.add,\n                remove: transaction.remove\n              }\n            : null\n        }\n        onCreateTransaction={this.handleCreateTransaction}\n        onCloseRoute={navigateBackLink}\n        onClose={this.handleClose}\n        onNavigateBack={canGoBack ? this.handleNavigateBack : undefined}\n        children={this.renderVoteContent()}\n      />\n    );\n  }\n\n  renderVoteContent() {\n    const { account, walletStore } = this.injected;\n    const { votedDelegate, balance } = account;\n    const { query, search } = this.state;\n\n    const fee = walletStore.fees.get('vote')!;\n    const hasInsufficientFunds = balance.lt(fee);\n\n    const showSuggestions = search.query === '';\n\n    return (\n      <VoteDelegateDialogContent\n        onFormChanged={this.handleFormChanged}\n        query={query}\n        onQueryChange={this.handleQueryChange}\n        onSelect={this.handleSelectDelegate}\n        isLoading={search.isLoading}\n        votedDelegate={votedDelegate}\n        voteFee={fee}\n        content={\n          hasInsufficientFunds\n            ? {\n                kind: 'insufficient-funds',\n                onClose: this.handleClose\n              }\n            : showSuggestions\n              ? {\n                  kind: 'suggestions',\n                  delegates: search.delegates\n                }\n              : {\n                  kind: 'search-results',\n                  query: search.query,\n                  delegates: search.delegates\n                }\n        }\n      />\n    );\n  }\n}\n\nexport default VoteDelegateDialog;\n","import red from '@material-ui/core/es/colors/red';\nimport Divider from '@material-ui/core/es/Divider';\nimport List from '@material-ui/core/es/List';\nimport ListItem from '@material-ui/core/es/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/es/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/es/ListItemText';\nimport ListSubheader from '@material-ui/core/es/ListSubheader';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Switch from '@material-ui/core/es/Switch';\nimport { runInAction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport Link from '../../components/Link';\nimport {\n  accountSettingsNameRoute,\n  accountSettingsRoute,\n  accountSettingsPassphraseRoute,\n  accountSettingsDelegateRoute,\n  accountSettingsRemoveRoute,\n  accountSettingsVoteRoute,\n  accountSettingsFiatRoute,\n  accountSettingsLedgerRoute,\n  accountSettingsVerifyMnemonicRoute\n} from '../../routes';\nimport { accountStore } from '../../stores';\nimport AccountStore, { AccountType, LoadingState } from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\nimport AccountNameDialog from './AccountNameDialog';\nimport AddSecondPassphraseDialog from './AddSecondPassphraseDialog';\nimport ChooseFiatDialog from './ChooseFiatDialog';\nimport RegisterDelegateDialog from './RegisterDelegateDialog';\nimport RemoveAccountDialog from './RemoveAccountDialog';\nimport VerifyLedgerDialog from './VerifyLedgerDialog';\nimport VerifyMnemonicDialog from './VerifyMnemonicDialog';\nimport VoteDelegateDialog from './VoteDelegateDialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      backgroundColor: theme.palette.background.paper,\n      '& > button': {\n        borderRadius: 0\n      }\n    },\n    groupTitle: {\n      backgroundColor: theme.palette.background.paper\n    },\n    toggleSecondary: {\n      pointerEvents: 'none'\n    },\n    removeAccount: {\n      color: red[500]\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  account?: AccountStore;\n}\n\ninterface PropsInjected extends Props {\n  accountStore: AccountStore;\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {\n  delegateLoaded: boolean;\n  registeredLoaded: boolean;\n}\n\nconst stylesDecorator = withStyles(styles, { name: 'AccountOverview' });\n\nconst messages = defineMessages({\n  loadingLabel: {\n    id: 'account-settings.loading-label',\n    description: 'Label for settings 2nd row while data is being loaded',\n    defaultMessage: 'Loading...'\n  },\n  unnamedAccountLabel: {\n    id: 'account-settings.unnamed-account-label',\n    description: \"Label for accounts that user hasn't named yet\",\n    defaultMessage: 'Unnamed account ({id})'\n  },\n  accountName: {\n    id: 'account-settings.account-name',\n    description: 'Label for account name setting',\n    defaultMessage: 'Account name'\n  },\n  pinnedAccount: {\n    id: 'account-settings.pinned-account',\n    description: 'Label for pinned account setting',\n    defaultMessage: 'Pinned account'\n  },\n  pinnedAccountOnAria: {\n    id: 'account-settings.pinned-account-on-aria',\n    description: 'Accessibility label for pinned account setting',\n    defaultMessage: 'Pinned account (press to unpin)'\n  },\n  pinnedAccountOffAria: {\n    id: 'account-settings.pinned-account-off-aria',\n    description: 'Accessibility label for pinned account setting',\n    defaultMessage: 'Unpinned account (press to pin)'\n  },\n  votedDelegate: {\n    id: 'account-settings.voted-delegate',\n    description: 'Label for voted delegate setting',\n    defaultMessage: 'Voted delegate'\n  },\n  votedDelegateUnsetLabel: {\n    id: 'account-settings.voted-delegate-unset-label',\n    description: 'Label for voted delegate unset',\n    defaultMessage: 'None'\n  },\n  fiatCurrency: {\n    id: 'account-settings.fiat-currency',\n    description: 'Label for FIAT currency setting',\n    defaultMessage: 'Displayed FIAT currency'\n  },\n  advancedSettings: {\n    id: 'account-settings.advanced-settings',\n    description: 'Title for advanced settings group',\n    defaultMessage: 'Advanced settings'\n  },\n  passphrase: {\n    id: 'account-settings.2nd-passphrase',\n    description: 'Label for 2nd passphrase setting',\n    defaultMessage: '2nd passphrase'\n  },\n  passphraseSetLabel: {\n    id: 'account-settings.2nd-passphrase-set-label',\n    description: 'Label for 2nd passphrase set',\n    defaultMessage: 'Set'\n  },\n  passphraseUnsetLabel: {\n    id: 'account-settings.2nd-passphrase-unset-label',\n    description: 'Label for 2nd passphrase unset',\n    defaultMessage: 'Not set'\n  },\n  delegateRegistration: {\n    id: 'account-settings.delegate-registration',\n    description: 'Label for delegate registration setting',\n    defaultMessage: 'Delegate registration'\n  },\n  ledgerAddress: {\n    id: 'account-settings.ledger-address',\n    description:\n      'Label for opening a dialog verifying the address on the ledger',\n    defaultMessage: 'Verify Ledger Nano'\n  },\n  verifyMnemonic: {\n    id: 'account-settings.verify-mnemonic',\n    description: \"Label for opening a dialog verifying the account's mnemonic\",\n    defaultMessage: 'Verify your mnemonic'\n  },\n  delegateRegistrationUnsetLabel: {\n    id: 'account-settings.delegate-registration-unset-label',\n    description: 'Label for delegate registration unset',\n    defaultMessage: 'Not registered'\n  },\n  removeAccount: {\n    id: 'account-settings.remove-account',\n    description: 'Label for remove account setting',\n    defaultMessage: 'Remove account from wallet'\n  }\n});\n\n@inject(accountStore)\n@inject('routerStore')\n@inject('walletStore')\n@inject('ledgerStore')\n@observer\nclass AccountSettings extends React.Component<DecoratedProps, State> {\n  state: State = {\n    delegateLoaded: false,\n    registeredLoaded: false\n  };\n\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  get account() {\n    return this.injected.account || this.injected.accountStore;\n  }\n\n  // CLICK HANDLERS\n\n  handleVerifyLedgerClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    this.injected.ledgerStore.open();\n  };\n\n  handlePinnedClicked = () => {\n    runInAction(() => {\n      const walletStore = this.injected.walletStore;\n      const selectedAccount = walletStore.selectedAccount;\n      selectedAccount.pinned = !selectedAccount.pinned;\n    });\n  };\n\n  componentDidMount() {\n    this.loadVotedDelegate();\n    this.loadRegisteredDelegate();\n  }\n\n  loadVotedDelegate() {\n    // load the delegate data only  once\n    if (this.state.delegateLoaded) {\n      return;\n    }\n    this.setState({ delegateLoaded: true });\n    this.injected.walletStore.loadVotedDelegate(this.account.id);\n  }\n\n  loadRegisteredDelegate() {\n    // load the registered name only once\n    if (this.state.registeredLoaded) {\n      return;\n    }\n    this.setState({ registeredLoaded: true });\n    this.injected.walletStore.loadRegisteredDelegate(this.account.id);\n  }\n\n  render() {\n    const { intl, classes, walletStore } = this.injected;\n    const account = this.account;\n    const { type: accountType } = account;\n\n    const backLink: RouteLink = {\n      route: accountSettingsRoute,\n      params: {\n        id: this.account.id\n      }\n    };\n\n    return (\n      <>\n        <AccountNameDialog account={this.account} navigateBackLink={backLink} />\n        <VoteDelegateDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <ChooseFiatDialog account={this.account} navigateBackLink={backLink} />\n        <AddSecondPassphraseDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <RegisterDelegateDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <RemoveAccountDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <VerifyLedgerDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <VerifyMnemonicDialog\n          account={this.account}\n          navigateBackLink={backLink}\n        />\n        <div className={classes.content}>\n          <List>\n            <Link\n              route={accountSettingsNameRoute}\n              params={{\n                id: this.account.id\n              }}\n            >\n              <ListItem button={true}>\n                <ListItemText\n                  primary={intl.formatMessage(messages.accountName)}\n                  secondary={\n                    account.name ||\n                    intl.formatMessage(messages.unnamedAccountLabel, {\n                      id: this.account.localId\n                    })\n                  }\n                />\n              </ListItem>\n            </Link>\n            {walletStore.accounts.size >=\n              walletStore.config.max_drawer_accounts && (\n              <ListItem\n                button={true}\n                onClick={this.handlePinnedClicked}\n                aria-label={intl.formatMessage(\n                  account.pinned\n                    ? messages.pinnedAccountOnAria\n                    : messages.pinnedAccountOffAria\n                )}\n              >\n                <ListItemText\n                  primary={intl.formatMessage(messages.pinnedAccount)}\n                />\n                <ListItemSecondaryAction\n                  className={classes.toggleSecondary}\n                  aria-hidden={true}\n                >\n                  <Switch\n                    onClick={this.handlePinnedClicked}\n                    checked={account.pinned}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )}\n            {accountType !== AccountType.READONLY && (\n              <Link\n                route={accountSettingsVoteRoute}\n                params={{\n                  id: this.account.id\n                }}\n              >\n                <ListItem button={true}>\n                  <ListItemText\n                    primary={intl.formatMessage(messages.votedDelegate)}\n                    secondary={\n                      account.votedDelegateState === LoadingState.LOADING\n                        ? intl.formatMessage(messages.loadingLabel)\n                        : account.votedDelegate\n                          ? account.votedDelegate.username\n                          : intl.formatMessage(messages.votedDelegateUnsetLabel)\n                    }\n                  />\n                </ListItem>\n              </Link>\n            )}\n            <Link\n              route={accountSettingsFiatRoute}\n              params={{\n                id: this.account.id\n              }}\n            >\n              <ListItem button={true}>\n                <ListItemText\n                  primary={intl.formatMessage(messages.fiatCurrency)}\n                  secondary={account.fiatCurrency}\n                />\n              </ListItem>\n            </Link>\n          </List>\n          <Divider />\n          <List\n            subheader={\n              <ListSubheader className={classes.groupTitle}>\n                {intl.formatMessage(messages.advancedSettings)}\n              </ListSubheader>\n            }\n          >\n            {accountType === AccountType.MNEMONIC && (\n              <Link\n                route={accountSettingsPassphraseRoute}\n                params={{\n                  id: this.account.id\n                }}\n              >\n                <ListItem button={true}>\n                  <ListItemText\n                    primary={intl.formatMessage(messages.passphrase)}\n                    secondary={\n                      account.secondSignature\n                        ? intl.formatMessage(messages.passphraseSetLabel)\n                        : intl.formatMessage(messages.passphraseUnsetLabel)\n                    }\n                  />\n                </ListItem>\n              </Link>\n            )}\n            {accountType !== AccountType.READONLY && (\n              <Link\n                route={accountSettingsDelegateRoute}\n                params={{\n                  id: this.account.id\n                }}\n              >\n                <ListItem button={true}>\n                  <ListItemText\n                    primary={intl.formatMessage(messages.delegateRegistration)}\n                    secondary={\n                      account.registeredDelegateState === LoadingState.LOADING\n                        ? intl.formatMessage(messages.loadingLabel)\n                        : account.registeredDelegate\n                          ? account.registeredDelegate.username\n                          : intl.formatMessage(\n                              messages.delegateRegistrationUnsetLabel\n                            )\n                    }\n                  />\n                </ListItem>\n              </Link>\n            )}\n            {accountType === AccountType.LEDGER && (\n              <Link\n                route={accountSettingsLedgerRoute}\n                onClick={this.handleVerifyLedgerClick}\n                params={{\n                  id: this.account.id\n                }}\n              >\n                <ListItem button={true}>\n                  <ListItemText\n                    primary={intl.formatMessage(messages.ledgerAddress)}\n                  />\n                </ListItem>\n              </Link>\n            )}\n            {account.publicKey && (\n              <Link\n                route={accountSettingsVerifyMnemonicRoute}\n                params={{\n                  id: this.account.id\n                }}\n              >\n                <ListItem button={true}>\n                  <ListItemText\n                    primary={intl.formatMessage(messages.verifyMnemonic)}\n                  />\n                </ListItem>\n              </Link>\n            )}\n            <Link\n              route={accountSettingsRemoveRoute}\n              params={{\n                id: this.account.id\n              }}\n            >\n              <ListItem button={true}>\n                <ListItemText\n                  classes={{\n                    primary: classes.removeAccount\n                  }}\n                  primary={intl.formatMessage(messages.removeAccount)}\n                />\n              </ListItem>\n            </Link>\n          </List>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(AccountSettings));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Modal from '../Modal';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport { capitalize } from '../utils/helpers';\nimport { duration } from '../styles/transitions';\nconst oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(props) {\n  return ['left', 'right'].indexOf(props.anchor) !== -1;\n}\nexport function getAnchor(props) {\n  return props.theme.direction === 'rtl' && isHorizontal(props) ? oppositeDirection[props.anchor] : props.anchor;\n}\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n  docked: {\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    flex: '1 0 auto',\n    zIndex: theme.zIndex.drawer,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    // temporary style\n    position: 'fixed',\n    top: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    // At some point, it would be better to keep it for keyboard users.\n    // :focus-ring CSS pseudo-class will help.\n    outline: 'none'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n  paperAnchorLeft: {\n    left: 0,\n    right: 'auto'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n  paperAnchorRight: {\n    left: 'auto',\n    right: 0\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n  paperAnchorTop: {\n    top: 0,\n    left: 0,\n    bottom: 'auto',\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n  paperAnchorBottom: {\n    top: 'auto',\n    left: 0,\n    bottom: 0,\n    right: 0,\n    height: 'auto',\n    maxHeight: '100%'\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"left\"` & `variant` is not \"temporary\". */\n  paperAnchorDockedLeft: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"top\"` & `variant` is not \"temporary\". */\n  paperAnchorDockedTop: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"right\"` & `variant` is not \"temporary\". */\n  paperAnchorDockedRight: {\n    borderLeft: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Paper` component if `anchor=\"bottom\"` & `variant` is not \"temporary\". */\n  paperAnchorDockedBottom: {\n    borderTop: `1px solid ${theme.palette.divider}`\n  },\n\n  /* Styles applied to the `Modal` component. */\n  modal: {}\n});\n/**\n * The properties of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nclass Drawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.mounted = false;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      BackdropProps,\n      children,\n      classes,\n      className,\n      elevation,\n      ModalProps: {\n        BackdropProps: BackdropPropsProp\n      } = {},\n      onClose,\n      open,\n      PaperProps,\n      SlideProps,\n      transitionDuration,\n      variant\n    } = _this$props,\n          ModalProps = _objectWithoutPropertiesLoose(_this$props.ModalProps, [\"BackdropProps\"]),\n          other = _objectWithoutPropertiesLoose(_this$props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"theme\", \"transitionDuration\", \"variant\"]);\n\n    const anchor = getAnchor(this.props);\n    const drawer = React.createElement(Paper, _extends({\n      elevation: variant === 'temporary' ? elevation : 0,\n      square: true,\n      className: classNames(classes.paper, classes[`paperAnchor${capitalize(anchor)}`], {\n        [classes[`paperAnchorDocked${capitalize(anchor)}`]]: variant !== 'temporary'\n      })\n    }, PaperProps), children);\n\n    if (variant === 'permanent') {\n      return React.createElement(\"div\", _extends({\n        className: classNames(classes.root, classes.docked, className)\n      }, other), drawer);\n    }\n\n    const slidingDrawer = React.createElement(Slide, _extends({\n      in: open,\n      direction: oppositeDirection[anchor],\n      timeout: transitionDuration,\n      appear: this.mounted\n    }, SlideProps), drawer);\n\n    if (variant === 'persistent') {\n      return React.createElement(\"div\", _extends({\n        className: classNames(classes.root, classes.docked, className)\n      }, other), slidingDrawer);\n    } // variant === temporary\n\n\n    return React.createElement(Modal, _extends({\n      BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n        transitionDuration\n      }),\n      className: classNames(classes.root, classes.modal, className),\n      open: open,\n      onClose: onClose\n    }, other, ModalProps), slidingDrawer);\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Properties applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Properties applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Properties applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nDrawer.defaultProps = {\n  anchor: 'left',\n  elevation: 16,\n  open: false,\n  transitionDuration: {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  },\n  variant: 'temporary' // Mobile first.\n\n};\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false,\n  withTheme: true\n})(Drawer);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nfunction SwipeArea(props) {\n  const {\n    anchor,\n    classes,\n    className,\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    style: {\n      [isHorizontal(props) ? 'width' : 'height']: width\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPrivateSwipeArea'\n})(SwipeArea);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/* eslint-disable consistent-this */\n// @inheritedComponent Drawer\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport { duration } from '../styles/transitions';\nimport withTheme from '../styles/withTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n/* istanbul ignore if */\n\nif (process.env.NODE_ENV !== 'production' && !React.createContext) {\n  throw new Error('Material-UI: react@16.3.0 or greater is required.');\n}\n\nclass SwipeableDrawer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.isSwiping = null;\n\n    this.handleBodyTouchStart = event => {\n      // We are not supposed to hanlde this touch move.\n      if (nodeThatClaimedTheSwipe !== null && nodeThatClaimedTheSwipe !== this) {\n        return;\n      }\n\n      const {\n        disableDiscovery,\n        disableSwipeToOpen,\n        open,\n        swipeAreaWidth\n      } = this.props;\n      const anchor = getAnchor(this.props);\n      const currentX = anchor === 'right' ? document.body.offsetWidth - event.touches[0].pageX : event.touches[0].pageX;\n      const currentY = anchor === 'bottom' ? window.innerHeight - event.touches[0].clientY : event.touches[0].clientY;\n\n      if (!open) {\n        if (disableSwipeToOpen) {\n          return;\n        }\n\n        if (isHorizontal(this.props)) {\n          if (currentX > swipeAreaWidth) {\n            return;\n          }\n        } else if (currentY > swipeAreaWidth) {\n          return;\n        }\n      }\n\n      nodeThatClaimedTheSwipe = this;\n      this.startX = currentX;\n      this.startY = currentY;\n      this.setState({\n        maybeSwiping: true\n      });\n\n      if (!open && this.paperRef) {\n        // The ref may be null when a parent component updates while swiping.\n        this.setPosition(this.getMaxTranslate() + (disableDiscovery ? 20 : -swipeAreaWidth), {\n          changeTransition: false\n        });\n      }\n\n      this.velocity = 0;\n      this.lastTime = null;\n      this.lastTranslate = null;\n      document.body.addEventListener('touchmove', this.handleBodyTouchMove, {\n        passive: false\n      });\n      document.body.addEventListener('touchend', this.handleBodyTouchEnd); // https://plus.google.com/+PaulIrish/posts/KTwfn1Y2238\n\n      document.body.addEventListener('touchcancel', this.handleBodyTouchEnd);\n    };\n\n    this.handleBodyTouchMove = event => {\n      // the ref may be null when a parent component updates while swiping\n      if (!this.paperRef) return;\n      const anchor = getAnchor(this.props);\n      const horizontalSwipe = isHorizontal(this.props);\n      const currentX = anchor === 'right' ? document.body.offsetWidth - event.touches[0].pageX : event.touches[0].pageX;\n      const currentY = anchor === 'bottom' ? window.innerHeight - event.touches[0].clientY : event.touches[0].clientY; // We don't know yet.\n\n      if (this.isSwiping == null) {\n        const dx = Math.abs(currentX - this.startX);\n        const dy = Math.abs(currentY - this.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n        if (dx > dy) {\n          event.preventDefault();\n        }\n\n        const isSwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n        if (isSwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n          this.isSwiping = isSwiping;\n\n          if (!isSwiping) {\n            this.handleBodyTouchEnd(event);\n            return;\n          } // Shift the starting point.\n\n\n          this.startX = currentX;\n          this.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n          if (!this.props.disableDiscovery && !this.props.open) {\n            if (horizontalSwipe) {\n              this.startX -= this.props.swipeAreaWidth;\n            } else {\n              this.startY -= this.props.swipeAreaWidth;\n            }\n          }\n        }\n      }\n\n      if (!this.isSwiping) {\n        return;\n      }\n\n      const translate = this.getTranslate(horizontalSwipe ? currentX : currentY);\n\n      if (this.lastTranslate === null) {\n        this.lastTranslate = translate;\n        this.lastTime = performance.now() + 1;\n      }\n\n      const velocity = (translate - this.lastTranslate) / (performance.now() - this.lastTime) * 1e3; // Low Pass filter.\n\n      this.velocity = this.velocity * 0.4 + velocity * 0.6;\n      this.lastTranslate = translate;\n      this.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n      event.preventDefault();\n      this.setPosition(translate);\n    };\n\n    this.handleBodyTouchEnd = event => {\n      nodeThatClaimedTheSwipe = null;\n      this.removeBodyTouchListeners();\n      this.setState({\n        maybeSwiping: false\n      }); // The swipe wasn't started.\n\n      if (!this.isSwiping) {\n        this.isSwiping = null;\n        return;\n      }\n\n      this.isSwiping = null;\n      const anchor = getAnchor(this.props);\n      let current;\n\n      if (isHorizontal(this.props)) {\n        current = anchor === 'right' ? document.body.offsetWidth - event.changedTouches[0].pageX : event.changedTouches[0].pageX;\n      } else {\n        current = anchor === 'bottom' ? window.innerHeight - event.changedTouches[0].clientY : event.changedTouches[0].clientY;\n      }\n\n      const translateRatio = this.getTranslate(current) / this.getMaxTranslate();\n\n      if (this.props.open) {\n        if (this.velocity > this.props.minFlingVelocity || translateRatio > this.props.hysteresis) {\n          this.props.onClose();\n        } else {\n          // Reset the position, the swipe was aborted.\n          this.setPosition(0, {\n            mode: 'exit'\n          });\n        }\n\n        return;\n      }\n\n      if (this.velocity < -this.props.minFlingVelocity || 1 - translateRatio > this.props.hysteresis) {\n        this.props.onOpen();\n      } else {\n        // Reset the position, the swipe was aborted.\n        this.setPosition(this.getMaxTranslate(), {\n          mode: 'enter'\n        });\n      }\n    };\n\n    this.handleBackdropRef = ref => {\n      this.backdropRef = ref ? ReactDOM.findDOMNode(ref) : null;\n    };\n\n    this.handlePaperRef = ref => {\n      this.paperRef = ref ? ReactDOM.findDOMNode(ref) : null;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.variant === 'temporary') {\n      this.listenTouchStart();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const variant = this.props.variant;\n    const prevVariant = prevProps.variant;\n\n    if (variant !== prevVariant) {\n      if (variant === 'temporary') {\n        this.listenTouchStart();\n      } else if (prevVariant === 'temporary') {\n        this.removeTouchStart();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeTouchStart();\n    this.removeBodyTouchListeners(); // We need to release the lock.\n\n    if (nodeThatClaimedTheSwipe === this) {\n      nodeThatClaimedTheSwipe = null;\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (typeof prevState.maybeSwiping === 'undefined') {\n      return {\n        maybeSwiping: false,\n        open: nextProps.open\n      };\n    }\n\n    if (!nextProps.open && prevState.open) {\n      return {\n        maybeSwiping: false,\n        open: nextProps.open\n      };\n    }\n\n    return {\n      open: nextProps.open\n    };\n  }\n\n  getMaxTranslate() {\n    return isHorizontal(this.props) ? this.paperRef.clientWidth : this.paperRef.clientHeight;\n  }\n\n  getTranslate(current) {\n    const start = isHorizontal(this.props) ? this.startX : this.startY;\n    return Math.min(Math.max(this.props.open ? start - current : this.getMaxTranslate() + start - current, 0), this.getMaxTranslate());\n  }\n\n  setPosition(translate, options = {}) {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchor = getAnchor(this.props);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchor) !== -1 ? 1 : -1;\n    const transform = isHorizontal(this.props) ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = this.paperRef.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = this.props.theme.transitions.create('all', getTransitionProps({\n        timeout: this.props.transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!this.props.disableBackdropTransition && !this.props.hideBackdrop) {\n      const backdropStyle = this.backdropRef.style;\n      backdropStyle.opacity = 1 - translate / this.getMaxTranslate();\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }\n\n  listenTouchStart() {\n    document.body.addEventListener('touchstart', this.handleBodyTouchStart);\n  }\n\n  removeTouchStart() {\n    document.body.removeEventListener('touchstart', this.handleBodyTouchStart);\n  }\n\n  removeBodyTouchListeners() {\n    document.body.removeEventListener('touchmove', this.handleBodyTouchMove, {\n      passive: false\n    });\n    document.body.removeEventListener('touchend', this.handleBodyTouchEnd);\n    document.body.removeEventListener('touchcancel', this.handleBodyTouchEnd);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      anchor,\n      disableDiscovery,\n      disableSwipeToOpen,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      open,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth,\n      variant\n    } = _this$props,\n          ModalPropsProp = _objectWithoutPropertiesLoose(_this$props.ModalProps, [\"BackdropProps\"]),\n          other = _objectWithoutPropertiesLoose(_this$props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"variant\"]);\n\n    const {\n      maybeSwiping\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: this.handleBackdropRef\n        })\n      }, ModalPropsProp),\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: this.handlePaperRef\n      }),\n      anchor: anchor\n    }, other)), !disableDiscovery && !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n      anchor: anchor,\n      width: swipeAreaWidth\n    }, SwipeAreaProps))));\n  }\n\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Properties applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  theme: PropTypes.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nSwipeableDrawer.defaultProps = {\n  anchor: 'left',\n  disableBackdropTransition: false,\n  disableDiscovery: false,\n  disableSwipeToOpen: typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent),\n  hysteresis: 0.55,\n  minFlingVelocity: 400,\n  swipeAreaWidth: 20,\n  transitionDuration: {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  },\n  variant: 'temporary' // Mobile first.\n\n};\nexport default withTheme()(SwipeableDrawer);","export { default } from './SwipeableDrawer';","module.exports={name:\"rise-wallet\",version:\"1.4.0-beta2\",engines:{yarn:\"^1.10.1\"},license:\"GPL-3.0-only\",dependencies:{\"@ledgerhq/hw-transport-webusb\":\"^4.48.0\",\"@material-ui/core\":\"^3.7.0\",\"@material-ui/icons\":\"^3.0.1\",\"@types/bech32\":\"^1.1.1\",\"@types/ledgerhq__hw-transport\":\"^4.21.1\",\"@types/w3c-web-usb\":\"^1.0.3\",\"async-mutex\":\"^0.1.3\",bech32:\"^1.1.3\",\"bignumber.js\":\"^8.0.1\",bip39:\"^2.5.0\",classnames:\"^2.2.6\",delay:\"^4.1.0\",downshift:\"^3.1.7\",\"dpos-ledger-api\":\"^3.0.1\",\"dpos-offline\":\"^3.0.4\",\"file-saver\":\"^2.0.2\",inobounce:\"^0.1.6\",\"is-mobile\":\"^2.0.0\",jdenticon:\"^2.1.0\",keyboardjs:\"^2.5.1\",lodash:\"^4.17.11\",\"mdi-material-ui\":\"^5.7.0\",mobx:\"^5.8.0\",\"mobx-react\":\"^5.4.3\",\"mobx-router-rise\":\"^0.0.13\",moment:\"^2.23.0\",\"parcel-bundler\":\"^1.12.3\",\"query-string\":\"^6.2.0\",react:\"^16.6.3\",\"react-dom\":\"^16.6.3\",\"react-helmet\":\"^5.2.0\",\"react-intl\":\"^2.7.2\",\"regenerator-runtime\":\"^0.13.2\",risejs:\"^1.4.1\",sinon:\"^7.2.2\",\"socket.io-client\":\"^2.2.0\",store:\"^2.0.12\",\"svg-country-flags\":\"^1.2.6\",\"ts-jest\":\"^23.10.5\",typescript:\"^3.5.2\",\"unique-random\":\"^2.0.0\",utils:\"^0.3.1\",\"workbox-cli\":\"^4.3.1\"},scripts:{\"set-build:dev\":\"rm .browserslistrc; cp scripts/browserslistrc-dev .browserslistrc\",\"set-build:compat\":\"rm .browserslistrc; cp scripts/browserslistrc-compat .browserslistrc\",\"clean:build-dev\":\"rm -Rf dist/build-dev\",\"clean:build\":\"rm -Rf dist/build\",start:\"yarn set-build:dev; yarn clean:build-dev; parcel --out-dir dist/build-dev src/index.html --https\",\"start-http\":\"yarn set-build:dev; yarn clean:build-dev; parcel --out-dir dist/build-dev src/index.html\",build:\"yarn clean:build; yarn set-build:compat; yarn install; rm -Rf dist/build; parcel build --out-dir dist/build src/index.html; cp -fR src/assets dist/build/; workbox generateSW scripts/workbox-prod.js\",\"build-dev\":\"yarn clean:build-dev; yarn set-build:dev; yarn clean:build-dev; mkdirp build/dev; parcel build --out-dir dist/build-dev src/index.html; cp -fR src/assets dist/build-dev/; workbox generateSW scripts/workbox-dev.js\",\"deploy-now\":\"yarn build-dev; cp -f now.json dist/build-dev; cd dist/build-dev && now --target production\",cypress:\"cypress open\",test:\"run-p --race serve test-cypress\",\"test-ci\":\"yarn build; run-p --race serve test-cypress\",\"test-cypress\":\"cypress-run run --record false\",\"test-cypress:record\":\"cypress-run run --record\",\"test-unit\":\"jest\",\"test-unit:prepare\":\"rm -rf tmp/unit-test/; tsc --project tsconfig.test.json\",\"test-unit:prepare-watch\":\"rm -rf tmp/unit-test/; tsc --watch --project tsconfig.test.json\",release:\"./scripts/release.sh\",\"intl:prepare\":\"babel -o tmp/transpiled-bundle.js --config-file './babelrc.intl.js' $(./scripts/intl-files.sh)\",\"intl:export\":\"bash scripts/intl-export.sh\",\"intl:import\":\"bash scripts/intl-import.sh\",tsc:\"tsc --project tsconfig.prod.json\",tslint:\"tslint --fix --project tslint.prod.json 'src/**/*.{ts,tsx}'\",precommit:\"yarn tsc; yarn prettier; yarn tslint; yarn test-unit:prepare; yarn test-unit; yarn intl:prepare\",prettier:\"prettier src/**.{ts,tsx} --write\",serve:\"node src/serve.js & local-ssl-proxy --source 3000 --target 5000\",\"encrypt-fixtures\":\"travis encrypt-file cypress/fixtures/accounts.json cypress/fixtures/accounts.json.enc --add\",\"release:desktop\":\"./scripts/release-desktop.sh\"},\"pre-commit\":[\"precommit\"],devDependencies:{\"@babel/cli\":\"^7.4.4\",\"@babel/core\":\"^7.4.5\",\"@babel/plugin-proposal-decorators\":\"^7.4.4\",\"@babel/plugin-syntax-dynamic-import\":\"^7.2.0\",\"@babel/polyfill\":\"^7.0.0\",\"@babel/preset-env\":\"^7.4.5\",\"@babel/preset-es2015\":\"^7.0.0-beta.53\",\"@babel/preset-react\":\"^7.0.0\",\"@babel/preset-typescript\":\"^7.3.3\",\"@bahmutov/add-typescript-to-cypress\":\"^2.0.0\",\"@types/bip39\":\"^2.4.1\",\"@types/bytebuffer\":\"^5.0.37\",\"@types/classnames\":\"^2.2.6\",\"@types/file-saver\":\"^2.0.1\",\"@types/jest\":\"^23.3.10\",\"@types/keyboardjs\":\"^2.4.0\",\"@types/ledgerhq__hw-transport-u2f\":\"^4.21.0\",\"@types/lodash\":\"^4.14.119\",\"@types/moment\":\"^2.13.0\",\"@types/node\":\"^10.12.17\",\"@types/query-string\":\"^6.1.1\",\"@types/react\":\"^16.7.17\",\"@types/react-dom\":\"^16.0.11\",\"@types/react-helmet\":\"^5.0.7\",\"@types/react-intl\":\"^2.3.14\",\"@types/socket.io-client\":\"^1.4.32\",\"babel-plugin-react-intl\":\"^3.5.0\",cypress:\"^3.3.1\",\"cypress-run\":\"^1.0.6\",express:\"^4.16.4\",\"gh-pages\":\"^2.0.1\",\"isomorphic-fetch\":\"^2.2.1\",\"local-ssl-proxy\":\"^1.3.0\",\"npm-run-all\":\"^4.1.5\",\"pre-commit\":\"^1.2.2\",prettier:\"^1.15.3\",raf:\"^3.4.1\",tslint:\"^5.12.1\",\"type-tagger\":\"^1.0.0\"},prettier:{singleQuote:!0},jest:{verbose:!0,testMatch:[\"<rootDir>/tmp/unit-test/transpiled/**/__tests__/**/*.js?(x)\",\"<rootDir>/tmp/unit-test/transpiled/**/?(*.)+(spec|test).js?(x)\"],testEnvironment:\"jsdom\",setupFiles:[\"raf/polyfill\"],testURL:\"http://localhost/\"}};","import Button from '@material-ui/core/es/Button';\nimport Grid from '@material-ui/core/es/Grid';\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport React from 'react';\nimport {\n  FormattedMessage,\n  defineMessages,\n  injectIntl,\n  InjectedIntlProps\n} from 'react-intl';\nimport autoId from '../../utils/autoId';\nimport { DialogContentProps, SetDialogContent } from '../Dialog';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    }\n  });\n\nconst stylesDecorator = withStyles(styles, { name: 'SignOutDialogContent' });\n\ntype BaseProps = WithStyles<typeof styles> & DialogContentProps;\n\ninterface Props extends BaseProps {\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface State {}\n\nconst messages = defineMessages({\n  dialogTitle: {\n    id: 'sign-out-dialog-content.dialog-title',\n    description: 'Sign out dialog title',\n    defaultMessage: 'Sign out?'\n  }\n});\n\nclass SignOutDialogContent extends React.Component<DecoratedProps, State> {\n  @autoId dialogContentId: string;\n\n  componentWillMount() {\n    const { intl } = this.props;\n\n    SetDialogContent(this, {\n      title: intl.formatMessage(messages.dialogTitle),\n      contentId: this.dialogContentId\n    });\n  }\n\n  render() {\n    const { classes, onConfirm, onCancel } = this.props;\n\n    return (\n      <Grid className={classes.content} container={true} spacing={16}>\n        <Grid item={true} xs={12}>\n          <Typography id={this.dialogContentId}>\n            <FormattedMessage\n              id=\"sign-out-dialog-content.prompt-text\"\n              description=\"Prompt for sign out action\"\n              defaultMessage={\n                'Are you sure you want sign out? All of your accounts ' +\n                'and address book content will be removed from this device.'\n              }\n            />\n          </Typography>\n        </Grid>\n        <Grid item={true} xs={12} sm={6}>\n          <Button fullWidth={true} onClick={onConfirm}>\n            <FormattedMessage\n              id=\"sign-out-dialog-content.sign-out-button\"\n              description=\"Label for remove account button.\"\n              defaultMessage=\"Sign out\"\n            />\n          </Button>\n        </Grid>\n        <Grid item={true} xs={12} sm={6}>\n          <Button fullWidth={true} onClick={onCancel}>\n            <FormattedMessage\n              id=\"sign-out-dialog-content.cancel-button\"\n              description=\"Label for cancel button.\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(SignOutDialogContent));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    marginRight: 16,\n    color: theme.palette.action.active,\n    flexShrink: 0,\n    display: 'inline-flex'\n  }\n});\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nfunction ListItemIcon(props) {\n  const {\n    children,\n    classes,\n    className: classNameProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: classNames(classes.root, classNameProp)\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","export { default } from './ListItemIcon';","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n})), 'AccountBalanceWallet');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n})), 'ExitToApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95 0 1.22.99 2.2 2.2 2.2 1.21 0 2.2-.98 2.2-2.2 0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z\"\n})), 'Usb');\n\nexports.default = _default;","import Avatar from '@material-ui/core/es/Avatar';\nimport Divider from '@material-ui/core/es/Divider';\nimport List from '@material-ui/core/es/List';\nimport ListItem from '@material-ui/core/es/ListItem';\nimport ListItemAvatar from '@material-ui/core/es/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/es/ListItemIcon';\nimport ListItemText from '@material-ui/core/es/ListItemText';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Typography from '@material-ui/core/es/Typography';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport AddIcon from '@material-ui/icons/Add';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PeopleIcon from '@material-ui/icons/People';\nimport UsbIcon from '@material-ui/icons/Usb';\nimport classNames from 'classnames';\nimport { orderBy } from 'lodash';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport AccountIcon from '../../components/AccountIcon';\nimport Link from '../../components/Link';\nimport {\n  accountOverviewRoute,\n  onboardingAddAccountRoute,\n  addressBookRoute,\n  accountsListRoute,\n  onboardingInstallToHomeScreenRoute\n} from '../../routes';\nimport AccountStore from '../../stores/account';\nimport LedgerStore from '../../stores/ledger';\nimport RouterStore, { RouteLink } from '../../stores/router';\nimport WalletStore from '../../stores/wallet';\n\nconst riseIcon = require('../../images/rise_icon.svg');\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight: 'normal',\n      userSelect: 'none'\n    },\n    headerIcon: {\n      margin: '-4px 4px'\n    },\n    selectedListItem: {\n      backgroundColor: theme.palette.action.hover\n    },\n    accountAvatar: {\n      backgroundColor: 'white',\n      border: '2px solid white'\n    },\n    accountAvatarSelected: {\n      borderColor: theme.palette.primary.dark\n    },\n    accountName: {\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    listIcon: {\n      // Align the list icons to match the alignment of avatars\n      marginLeft: 8,\n      marginRight: 8\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onSignOutClick: () => void;\n  onAfterNavigate?: RouteLink['onAfterNavigate'];\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\ninterface PropsInjected extends DecoratedProps {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n  ledgerStore: LedgerStore;\n}\n\nconst stylesDecorator = withStyles(styles, { name: 'DrawerContent' });\n\nconst messages = defineMessages({\n  unnamedAccountLabel: {\n    id: 'drawer-content.unnamed-account-label',\n    description: \"Label for accounts that user hasn't named yet\",\n    defaultMessage: 'Unnamed account ({id})'\n  },\n  accountsListAriaLabel: {\n    id: 'drawer-content.accounts-list-aria-label',\n    description: 'Accessibility label for the accounts section in the drawer',\n    defaultMessage: 'Accounts'\n  },\n  navigationListAriaLabel: {\n    id: 'drawer-content.navigation-list-aria-label',\n    description: 'Accessibility label for the navigation section in the drawer',\n    defaultMessage: 'Navigation'\n  }\n});\n\n@inject('routerStore')\n@inject('walletStore')\n@inject('ledgerStore')\n@observer\nclass DrawerContent extends React.Component<DecoratedProps> {\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  accountList() {\n    const { walletStore } = this.injected;\n    const { selectedAccount } = walletStore;\n\n    const allAccounts = orderBy(\n      walletStore.listAccounts(),\n      ['pinned', a => Boolean(a.name), 'name'],\n      ['desc', 'desc', 'asc']\n    );\n    const pinnedCount = allAccounts.filter(a => a.pinned).length;\n\n    const maxAccounts = Math.max(\n      walletStore.config.max_drawer_accounts,\n      pinnedCount\n    );\n\n    const list = allAccounts.splice(0, maxAccounts);\n\n    // Make sure that the selected account is always visible...\n    if (allAccounts.length > 1) {\n      if (!list.includes(selectedAccount)) {\n        if (!list[list.length - 1].pinned) {\n          // ... either by replacing the last item with the selected account\n          list.splice(list.length - 1, 1, selectedAccount);\n        } else {\n          // ... or appending it as the last item (we don't want to replace pinned accounts)\n          list.push(selectedAccount);\n        }\n      }\n    }\n\n    return list;\n  }\n\n  handleUnmountLedger = () => {\n    const { ledgerStore } = this.injected;\n    ledgerStore.close();\n    ledgerStore.forgetLastDevice();\n  };\n\n  render() {\n    const {\n      intl,\n      classes,\n      onAfterNavigate,\n      onSignOutClick,\n      routerStore,\n      walletStore,\n      ledgerStore\n    } = this.injected;\n\n    const { selectedAccount } = walletStore;\n\n    let selection: 'addressBook' | 'account' = 'account';\n    if (routerStore.currentView.path.startsWith('/address-book')) {\n      selection = 'addressBook';\n    }\n\n    return (\n      <>\n        <Typography\n          className={classNames(classes.toolbar, classes.header)}\n          variant=\"h6\"\n          noWrap={true}\n          align=\"center\"\n        >\n          <FormattedMessage\n            id=\"drawer-content.header\"\n            description=\"Drawer header title\"\n            defaultMessage=\"{icon} RISE wallet\"\n            values={{\n              icon: (\n                <img\n                  className={classes.headerIcon}\n                  src={riseIcon}\n                  height={24}\n                  alt=\"\"\n                />\n              )\n            }}\n          />\n        </Typography>\n        <Divider aria-hidden={true} />\n        <List aria-label={intl.formatMessage(messages.accountsListAriaLabel)}>\n          {this.accountList().map((account: AccountStore) => (\n            <Link\n              key={account.id}\n              route={accountOverviewRoute}\n              params={{\n                id: account.id\n              }}\n              onAfterNavigate={onAfterNavigate}\n            >\n              <ListItem\n                className={classNames(\n                  selection === 'account' &&\n                    selectedAccount &&\n                    routerStore.currentView !== accountsListRoute &&\n                    selectedAccount.id === account.id &&\n                    classes.selectedListItem\n                )}\n                button={true}\n              >\n                <ListItemAvatar>\n                  <Avatar\n                    className={classNames(\n                      classes.accountAvatar,\n                      selectedAccount && selectedAccount.id === account.id\n                        ? classes.accountAvatarSelected\n                        : null\n                    )}\n                  >\n                    <AccountIcon size={24} address={account.id} />\n                  </Avatar>\n                </ListItemAvatar>\n                {/* TODO this doesnt observe */}\n                <ListItemText\n                  classes={{\n                    primary: classes.accountName\n                  }}\n                  primary={\n                    account.name ||\n                    intl.formatMessage(messages.unnamedAccountLabel, {\n                      id: account.localId\n                    })\n                  }\n                  secondary={account.id}\n                />\n              </ListItem>\n            </Link>\n          ))}\n          {walletStore.accounts.size <=\n            walletStore.config.max_drawer_accounts && (\n            <Link\n              key=\"add-account\"\n              route={onboardingAddAccountRoute}\n              onAfterNavigate={onAfterNavigate}\n            >\n              <ListItem button={true}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <AddIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <FormattedMessage\n                    id=\"drawer-content.add-an-account\"\n                    description=\"Add account drawer item\"\n                    defaultMessage=\"Add an account\"\n                  />\n                </ListItemText>\n              </ListItem>\n            </Link>\n          )}\n          {walletStore.accounts.size >\n            walletStore.config.max_drawer_accounts && (\n            <Link\n              key=\"more-accounts\"\n              route={accountsListRoute}\n              onAfterNavigate={onAfterNavigate}\n            >\n              <ListItem\n                className={classNames(\n                  routerStore.currentView === accountsListRoute &&\n                    classes.selectedListItem\n                )}\n                button={true}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <AccountBalanceWalletIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <FormattedMessage\n                    id=\"drawer-content.all-accounts\"\n                    description=\"All accounts drawer item\"\n                    defaultMessage=\"All accounts\"\n                  />\n                </ListItemText>\n              </ListItem>\n            </Link>\n          )}\n        </List>\n        <Divider aria-hidden={true} />\n        <List aria-label={intl.formatMessage(messages.navigationListAriaLabel)}>\n          <Link route={addressBookRoute} onAfterNavigate={onAfterNavigate}>\n            <ListItem\n              className={classNames(\n                selection === 'addressBook' && classes.selectedListItem\n              )}\n              button={true}\n            >\n              <ListItemIcon className={classes.listIcon}>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText>\n                <FormattedMessage\n                  id=\"drawer-content.address-book\"\n                  description=\"Address book drawer item\"\n                  defaultMessage=\"Address book\"\n                />\n              </ListItemText>\n            </ListItem>\n          </Link>\n          {/*<ListItem button={true}>\n            <ListItemIcon className={classes.listIcon}>\n              <LayersIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <FormattedMessage\n                id=\"drawer-content.block-explorer\"\n                description=\"Block explorer drawer item\"\n                defaultMessage=\"Block explorer\"\n              />\n            </ListItemText>\n          </ListItem>*/}\n          {walletStore.isMobile &&\n            !walletStore.isHomeScreen && (\n              <Link\n                route={onboardingInstallToHomeScreenRoute}\n                onAfterNavigate={onAfterNavigate}\n              >\n                <ListItem button={true}>\n                  <ListItemIcon className={classes.listIcon}>\n                    <AppsIcon />\n                  </ListItemIcon>\n                  <ListItemText>\n                    <FormattedMessage\n                      id=\"drawer-content.install-to-homescreen\"\n                      description=\"Install to homescreen drawer item\"\n                      defaultMessage=\"Install to Home Screen\"\n                    />\n                  </ListItemText>\n                </ListItem>\n              </Link>\n            )}\n          {ledgerStore.lastDevice && (\n            <ListItem button={true} onClick={this.handleUnmountLedger}>\n              <ListItemIcon className={classes.listIcon}>\n                <UsbIcon />\n              </ListItemIcon>\n              <ListItemText>\n                <FormattedMessage\n                  id=\"drawer-content.unmount-ledger\"\n                  description=\"Unmount a ledger device drawer item\"\n                  defaultMessage=\"Unmount Ledger\"\n                />\n              </ListItemText>\n            </ListItem>\n          )}\n          {!walletStore.isMobile &&\n            walletStore.supportsA2HS &&\n            !walletStore.isHomeScreen && (\n              <Link\n                route={onboardingInstallToHomeScreenRoute}\n                onAfterNavigate={onAfterNavigate}\n              >\n                <ListItem button={true}>\n                  <ListItemIcon className={classes.listIcon}>\n                    <AppsIcon />\n                  </ListItemIcon>\n                  <ListItemText>\n                    <FormattedMessage\n                      id=\"drawer-content.install-to-desktop\"\n                      description=\"Install to desktop drawer item\"\n                      defaultMessage=\"Install to Desktop\"\n                    />\n                  </ListItemText>\n                </ListItem>\n              </Link>\n            )}\n          <ListItem button={true} onClick={onSignOutClick}>\n            <ListItemIcon className={classes.listIcon}>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText>\n              <FormattedMessage\n                id=\"drawer-content.sign-out\"\n                description=\"Sign out drawer item\"\n                defaultMessage=\"Sign out\"\n              />\n            </ListItemText>\n          </ListItem>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(DrawerContent));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n// @inheritedComponent Paper\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nimport Paper from '../Paper';\nexport const styles = theme => {\n  const backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    }\n  };\n};\n\nfunction AppBar(props) {\n  const {\n    children,\n    classes,\n    className: classNameProp,\n    color,\n    position\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"position\"]);\n\n  const className = classNames(classes.root, classes[`position${capitalize(position)}`], {\n    [classes[`color${capitalize(color)}`]]: color !== 'inherit',\n    'mui-fixed': position === 'fixed' // Useful for the Dialog\n\n  }, classNameProp);\n  return React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: className\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'default']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [here](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['fixed', 'absolute', 'sticky', 'static', 'relative'])\n} : void 0;\nAppBar.defaultProps = {\n  color: 'primary',\n  position: 'fixed'\n};\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","export { default } from './AppBar';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `disableGutters={false}`. */\n  gutters: theme.mixins.gutters(),\n\n  /* Styles applied to the root element if `variant=\"regular\"`. */\n  regular: theme.mixins.toolbar,\n\n  /* Styles applied to the root element if `variant=\"dense\"`. */\n  dense: {\n    minHeight: 48\n  }\n});\n\nfunction Toolbar(props) {\n  const {\n    children,\n    classes,\n    className: classNameProp,\n    disableGutters,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"disableGutters\", \"variant\"]);\n\n  const className = classNames(classes.root, classes[variant], {\n    [classes.gutters]: !disableGutters\n  }, classNameProp);\n  return React.createElement(\"div\", _extends({\n    className: className\n  }, other), children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nToolbar.defaultProps = {\n  disableGutters: false,\n  variant: 'regular'\n};\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","export { default } from './Toolbar';","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n})), 'Menu');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n})), 'SettingsOutlined');\n\nexports.default = _default;","const yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","import { Typography } from '@material-ui/core';\nimport greenColor from '@material-ui/core/es/colors/green';\nimport redColor from '@material-ui/core/es/colors/red';\nimport yellowColor from '@material-ui/core/es/colors/yellow';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { defineMessages, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { LoadingState } from '../../stores/account';\nimport WalletStore from '../../stores/wallet';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    connectionIcon: {\n      width: '1em',\n      height: '1em',\n      borderRadius: '50%',\n      marginRight: '0.5em'\n    },\n    connected: {\n      backgroundColor: greenColor[800]\n    },\n    disconnected: {\n      backgroundColor: redColor[800]\n    },\n    connecting: {\n      backgroundColor: yellowColor[800]\n    },\n    text: {\n      [theme.breakpoints.down('xs')]: {\n        display: 'none'\n      }\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface PropsInjected extends Props {\n  walletStore: WalletStore;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'ConnectionStatus' });\n\nconst messages = defineMessages({\n  connectedStatus: {\n    id: 'wallet-connection.connected-status',\n    description: 'Connection status when connected',\n    defaultMessage: 'Connected'\n  },\n  disconnectedStatus: {\n    id: 'wallet-connection.disconnected-status',\n    description: 'Connection status when disconnected',\n    defaultMessage: 'Disconnected'\n  },\n  connectingStatus: {\n    id: 'wallet-connection.connecting-status',\n    description: 'Connection status when connecting',\n    defaultMessage: 'Connecting'\n  }\n});\n\n@inject('walletStore')\n@observer\nclass ConnectionStatus extends React.Component<DecoratedProps> {\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  render() {\n    const { intl, classes, walletStore } = this.injected;\n\n    switch (walletStore.connected) {\n      case LoadingState.LOADED:\n        return (\n          <>\n            <span\n              className={classNames(classes.connected, classes.connectionIcon)}\n            />\n            <Typography className={classes.text}>\n              {intl.formatMessage(messages.connectedStatus)}\n            </Typography>\n          </>\n        );\n      case LoadingState.LOADING:\n        return (\n          <>\n            <span\n              className={classNames(classes.connecting, classes.connectionIcon)}\n            />\n            <Typography className={classes.text}>\n              {intl.formatMessage(messages.connectingStatus)}\n            </Typography>\n          </>\n        );\n      default:\n        return (\n          <>\n            <span\n              className={classNames(\n                classes.disconnected,\n                classes.connectionIcon\n              )}\n            />\n            <Typography className={classes.text}>\n              {intl.formatMessage(messages.disconnectedStatus)}\n            </Typography>\n          </>\n        );\n    }\n  }\n}\n\nexport default stylesDecorator(injectIntl(ConnectionStatus));\n","import AppBar from '@material-ui/core/es/AppBar';\nimport IconButton from '@material-ui/core/es/IconButton';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from '@material-ui/core/es/styles';\nimport Toolbar from '@material-ui/core/es/Toolbar';\nimport Tooltip from '@material-ui/core/es/Tooltip';\nimport Typography from '@material-ui/core/es/Typography';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport { inject, observer } from 'mobx-react';\nimport RouterStore from '../../stores/router';\nimport React from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  InjectedIntlProps,\n  injectIntl\n} from 'react-intl';\nimport Link from '../../components/Link';\nimport {\n  accountOverviewRoute,\n  accountSettingsRoute,\n  accountsListRoute\n} from '../../routes';\nimport { accountStore } from '../../stores';\nimport AccountStore from '../../stores/account';\nimport ConnectionStatus from './ConnectionStatus';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    drawerIcon: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none'\n      }\n    },\n    title: {\n      flex: 1\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  className?: string;\n  onToggleDrawer: () => void;\n  account?: AccountStore;\n}\n\ninterface PropsInjected extends Props {\n  accountStore: AccountStore;\n  routerStore: RouterStore;\n}\n\ntype DecoratedProps = Props & InjectedIntlProps;\n\nconst stylesDecorator = withStyles(styles, { name: 'WalletAppBar' });\n\nconst messages = defineMessages({\n  openDrawerAriaLabel: {\n    id: 'wallet-appbar.open-drawer-aria-label',\n    description: 'Accessibility label for open drawer icon',\n    defaultMessage: 'Open drawer'\n  },\n  navigateBackAriaLabel: {\n    id: 'wallet-appbar.navigate-back-aria-label',\n    description: 'Accessibility label for back navigation icon',\n    defaultMessage: 'Navigate back'\n  },\n  accountSettingsTooltip: {\n    id: 'wallet-appbar.account-settings-tooltip',\n    description: 'Tooltip for account settings icon',\n    defaultMessage: 'Account settings'\n  }\n});\n\ntype AppBarState =\n  | null\n  | 'accountOverview'\n  | 'accountSettings'\n  | 'addressBook'\n  | 'accountsList';\n\n@inject('routerStore')\n@inject(accountStore)\n@observer\nclass WalletAppBar extends React.Component<DecoratedProps> {\n  appBarState() {\n    const { routerStore } = this.injected;\n    const path = routerStore.currentView.path;\n\n    let state: AppBarState = null;\n    if (routerStore.currentView === accountsListRoute) {\n      state = 'accountsList';\n    } else if (path.startsWith('/account') || path.startsWith('/send')) {\n      state = 'accountOverview';\n    } else if (path.startsWith('/settings')) {\n      state = 'accountSettings';\n    } else if (path.startsWith('/address-book')) {\n      state = 'addressBook';\n    }\n    return state;\n  }\n\n  get injected(): PropsInjected & DecoratedProps {\n    // @ts-ignore\n    return this.props;\n  }\n\n  get account() {\n    return this.injected.account || this.injected.accountStore;\n  }\n\n  backLink() {\n    const state = this.appBarState();\n    if (state === 'accountSettings') {\n      return {\n        route: accountOverviewRoute,\n        params: {\n          id: this.account.id\n        }\n      };\n    } else {\n      throw new Error('Invalid state for backLink');\n    }\n  }\n\n  render() {\n    const { intl, classes } = this.injected;\n    const state = this.appBarState();\n\n    const isTopRoute =\n      state === 'accountOverview' ||\n      state === 'accountsList' ||\n      state === 'addressBook';\n\n    return (\n      <AppBar className={this.injected.className} color=\"default\">\n        <Toolbar>\n          {isTopRoute ? (\n            <IconButton\n              className={classes.drawerIcon}\n              aria-label={intl.formatMessage(messages.openDrawerAriaLabel)}\n              color=\"inherit\"\n              onClick={this.injected.onToggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n          ) : (\n            <Link {...this.backLink()}>\n              <IconButton\n                aria-label={intl.formatMessage(messages.navigateBackAriaLabel)}\n                color=\"inherit\"\n              >\n                <ChevronLeftIcon />\n              </IconButton>\n            </Link>\n          )}\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap={true}\n          >\n            {state === 'accountOverview' && (\n              <FormattedMessage\n                id=\"wallet-appbar.account-overview-title\"\n                description=\"Account overview title\"\n                defaultMessage=\"Account overview\"\n              />\n            )}\n            {state === 'accountSettings' && (\n              <FormattedMessage\n                id=\"wallet-appbar.account-settings-title\"\n                description=\"Account settings title\"\n                defaultMessage=\"Account settings\"\n              />\n            )}\n            {state === 'addressBook' && (\n              <FormattedMessage\n                id=\"wallet-appbar.address-book-title\"\n                description=\"Address book title\"\n                defaultMessage=\"Address book\"\n              />\n            )}\n            {state === 'accountsList' && (\n              <FormattedMessage\n                id=\"wallet-appbar.accounts-list-title\"\n                description=\"Accounts list title\"\n                defaultMessage=\"All accounts\"\n              />\n            )}\n          </Typography>\n          {state === 'accountOverview' && (\n            <>\n              <ConnectionStatus />\n              <Tooltip\n                title={intl.formatMessage(messages.accountSettingsTooltip)}\n              >\n                <Link\n                  route={accountSettingsRoute}\n                  params={{\n                    id: this.account.id\n                  }}\n                >\n                  <IconButton\n                    aria-label={intl.formatMessage(\n                      messages.accountSettingsTooltip\n                    )}\n                    color=\"inherit\"\n                  >\n                    <SettingsOutlinedIcon />\n                  </IconButton>\n                </Link>\n              </Tooltip>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default stylesDecorator(injectIntl(WalletAppBar));\n","import Hidden from '@material-ui/core/es/Hidden';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n  withTheme,\n  WithTheme\n} from '@material-ui/core/es/styles';\nimport SwipeableDrawer from '@material-ui/core/es/SwipeableDrawer';\nimport Typography from '@material-ui/core/es/Typography';\n// @ts-ignore TODO d.ts\nimport inobounce from 'inobounce';\nimport { reaction, IReactionDisposer } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport RouterStore from '../../stores/router';\nimport React from 'react';\nimport { version } from '../../../package.json';\nimport SignOutDialogContent\n  from '../../components/content/SignOutDialogContent';\nimport Dialog from '../../components/Dialog';\nimport { onboardingAddAccountRoute } from '../../routes';\nimport WalletStore from '../../stores/wallet';\nimport DrawerContent from './DrawerContent';\nimport WalletAppBar from './WalletAppBar';\n\nconst drawerWidth = 280;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      zIndex: 1,\n      overflow: 'hidden',\n      position: 'relative',\n      display: 'flex',\n      minHeight: '100vh',\n      width: '100%'\n    },\n    appBar: {\n      position: 'absolute',\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up('md')]: {\n        width: `calc(100% - ${drawerWidth}px)`\n      }\n    },\n    permanentDrawerContainer: {\n      display: 'flex',\n      [theme.breakpoints.down('sm')]: {\n        display: 'none'\n      }\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      [theme.breakpoints.up('md')]: {\n        position: 'relative'\n      }\n    },\n    toolbar: theme.mixins.toolbar,\n    iosBottomBar: {\n      minHeight: 0,\n      [`@supports (-webkit-overflow-scrolling: touch)`]: {\n        // rough estimation for the safari's bottom status bar's height\n        minHeight: (window.screen.availHeight - window.innerHeight) * 0.62\n      }\n    },\n    content: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      maxHeight: '100vh',\n      overflow: 'auto',\n      backgroundColor: theme.palette.background.default,\n      '& > :last-child': {\n        flex: 1,\n        overflow: 'auto'\n      }\n    },\n    drawerSpacer: {\n      flex: 1\n    },\n    versionFooter: {\n      textAlign: 'center',\n      color: theme.palette.grey['500'],\n      fontSize: theme.typography.pxToRem(12)\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  mobileDrawerOpen: boolean;\n  signOutOpen: boolean;\n}\n\ntype DecoratedProps = Props & WithTheme;\n\ninterface PropsInjected extends DecoratedProps {\n  routerStore: RouterStore;\n  walletStore: WalletStore;\n}\n\nconst stylesDecorator = withStyles(styles, { name: 'Wallet' });\nconst themeDecorator = withTheme();\n\n@inject('walletStore')\n@inject('routerStore')\n@observer\nclass Wallet extends React.Component<DecoratedProps, State> {\n  disposeRouteMonitor: null | IReactionDisposer = null;\n\n  constructor(props: DecoratedProps) {\n    super(props);\n    this.state = {\n      mobileDrawerOpen: false,\n      signOutOpen: false\n    };\n  }\n\n  get injected(): PropsInjected {\n    return this.props as PropsInjected;\n  }\n\n  componentWillMount() {\n    if (inobounce.supported) {\n      inobounce.enable();\n    }\n    // Automatically close signOut prompt on route change\n    this.disposeRouteMonitor = reaction(\n      () => {\n        const { routerStore } = this.injected;\n        return routerStore.currentView;\n      },\n      () => {\n        this.setState({ signOutOpen: false });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    inobounce.disable();\n    if (this.disposeRouteMonitor) {\n      this.disposeRouteMonitor();\n      this.disposeRouteMonitor = null;\n    }\n  }\n\n  render(): React.ReactElement<HTMLDivElement> {\n    const { classes, theme } = this.injected;\n    const { mobileDrawerOpen, signOutOpen } = this.state;\n\n    const drawer = (\n      <>\n        <DrawerContent\n          onSignOutClick={this.handleOpenSignOutPrompt}\n          onAfterNavigate={this.handleAfterNavigate}\n        />\n        <div className={classes.drawerSpacer} />\n        <Typography\n          className={classes.versionFooter}\n          component=\"footer\"\n          aria-hidden={true}\n          children={`v${version}`}\n        />\n      </>\n    );\n\n    return (\n      <div className={classes.root}>\n        <Hidden mdUp={true}>\n          <SwipeableDrawer\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileDrawerOpen}\n            onClose={this.handleDrawerToggle}\n            onOpen={() => void 0}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n            children={drawer}\n          />\n        </Hidden>\n        <div className={classes.permanentDrawerContainer}>\n          <SwipeableDrawer\n            variant=\"permanent\"\n            open={true}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            onOpen={() => void 0}\n            onClose={() => void 0}\n            children={drawer}\n          />\n        </div>\n        <WalletAppBar\n          className={classes.appBar}\n          onToggleDrawer={this.handleDrawerToggle}\n        />\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {this.props.children}\n          <div className={classes.iosBottomBar} />\n        </main>\n        <Dialog open={signOutOpen} onClose={this.handleCancelSignOutPrompt}>\n          <SignOutDialogContent\n            onConfirm={this.handleConfirmSignOut}\n            onCancel={this.handleCancelSignOutPrompt}\n          />\n        </Dialog>\n      </div>\n    );\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({\n      mobileDrawerOpen: !this.state.mobileDrawerOpen\n    });\n  }\n\n  handleConfirmSignOut = () => {\n    const { walletStore, routerStore } = this.injected;\n\n    this.setState({\n      signOutOpen: false\n    });\n\n    walletStore.signout();\n    routerStore.goTo(onboardingAddAccountRoute);\n  }\n\n  handleCancelSignOutPrompt = () => {\n    this.setState({\n      signOutOpen: false\n    });\n  }\n\n  handleOpenSignOutPrompt = () => {\n    this.setState({\n      mobileDrawerOpen: false,\n      signOutOpen: true\n    });\n  }\n\n  handleAfterNavigate = () => {\n    this.setState({\n      mobileDrawerOpen: false\n    });\n  }\n}\n\nexport default stylesDecorator(themeDecorator(Wallet));\n","import AccountOverview from './AccountOverview';\nimport AccountsList from './AccountsList';\nimport AddressBook from './AddressBook';\nimport AccountSettings from './Settings';\nimport Wallet from './Wallet';\nimport WalletAppBar from './WalletAppBar';\n\nexport {\n  Wallet,\n  WalletAppBar,\n  AccountOverview,\n  AccountSettings,\n  AddressBook,\n  AccountsList\n};\n"]}